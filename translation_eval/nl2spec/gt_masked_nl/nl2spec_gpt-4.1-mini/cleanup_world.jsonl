{"id": 2918, "sentence": ["go", "to", "red", "but", "not", "through", "green"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "but", "not", "through", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(finally) the proposition prop_1 (representing \"red\") should be true. The phrase \"but not through green\" means that on the way to red, green (prop_2) should never be true before reaching red. This can be expressed as: prop_1 is eventually true, and until then, prop_2 is never true. Using the until operator, this is: (not prop_2) U prop_1.\n\n2. *Explanation dictionary* \u2013 {\"go to red\": \"F prop_1\", \"not through green\": \"(not prop_2) U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 2227, "sentence": ["enter", "the", "yellow", "or", "red", "room", "and", "then", "continue", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["enter", "the", "prop_2", "or", "prop_1", "and", "then", "continue", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(finally) reaching a state where either prop_1 (yellow room) or prop_2 (red room) holds, so F (prop_1 or prop_2). The phrase \"and then continue to the green room\" means that after entering the yellow or red room, eventually the green room (prop_3) is reached. This is expressed as: (F (prop_1 or prop_2)) and ( (prop_1 or prop_2) implies F prop_3 ), but since temporal logic is about sequences, we want to say: first eventually (prop_1 or prop_2), and after that eventually prop_3. This can be expressed as: (F (prop_1 or prop_2)) and ( (prop_1 or prop_2) \u2192 F prop_3 ). However, to ensure the order, we can use until: the green room is reached after the yellow or red room. So the formula is: (F (prop_1 or prop_2)) and ( (not prop_3) U (prop_1 or prop_2) )"}
{"id": 654, "sentence": ["enter", "the", "blue", "room", "without", "entering", "a", "red", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "entering", "a", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 1795, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 2457, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 881, "sentence": ["go", "through", "the", "blue", "room", "to", "the", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (prop_1 implies F prop_2) FINISH"}
{"id": 2423, "sentence": ["move", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(representing \"in the red room\") is true. Since the command implies that at some future point the system should be in the red room, we use the \"finally\" (F)"}
{"id": 891, "sentence": ["only", "go", "to", "the", "red", "room", "by", "first", "entering", "the", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["only", "go", "to", "the", "prop_2", "by", "first", "entering", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "  \"only ... by ...\": \"G (F prop_1 implies (prop_2 U prop_1))\""}
{"id": 118, "sentence": ["go", "through", "green", "to", "get", "to", "blue"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "to", "get", "to", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 3074, "sentence": ["move", "to", "the", "red", "room", "without", "using", "the", "green", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "without", "using", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 2886, "sentence": ["go", "to", "green", "via", "green", "or", "yellow", "but", "not", "red"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "green", "via", "prop_1", "or", "yellow", "but", "not", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* F prop_1 and G ( (not prop_1) implies (prop_1 or prop_2) ) and G (not prop_3) FINISH"}
{"id": 839, "sentence": ["go", "through", "the", "red", "or", "blue", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "prop_2", "to", "get", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(red room or blue room).\n- \"go through the red or blue room\": This means that eventually (F) the system will be in either the red or blue room.\n- \"to get to the green room\": This means that eventually (F) the system will be in the green room (prop_3).\n- The phrase \"go through ... to get to ...\" implies that before reaching the green room, the system must have passed through the red or blue room.\n- This can be expressed as: \"Eventually green room\" and \"Until green room, the system must be in red or blue room at some point\".\n- More precisely, the system must eventually reach the green room, and before that, it must have passed through the red or blue room.\n- One way to express this is: \"Eventually green room\" and \"red or blue room occurs before green room\".\n- Using until: (prop_1 or prop_2)"}
{"id": 1756, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 1380, "sentence": ["go", "through", "the", "yellow", "room", "and", "into", "the", "blue", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "and", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1 and F prop_2)"}
{"id": 992, "sentence": ["go", "to", "the", "yellow", "room", "only", "and", "then", "the", "green", "room", "only"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "only", "and", "then", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* ((prop_1 and not prop_2) until (prop_2 and not prop_1)) FINISH"}
{"id": 579, "sentence": ["move", "to", "yellow", "or", "red", "room", "them", "move", "to", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "to", "prop_2", "or", "prop_1", "them", "move", "to", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(finally) the system should be in either the yellow room or the red room. We represent \"yellow room\" as prop_1 and \"red room\" as prop_2, so this part is F(prop_1 or prop_2).\n   - \"then move to green room\": After the first part is satisfied, the system should eventually move to the green room, represented as prop_3. This means that after reaching yellow or red room, eventually prop_3 holds. This can be expressed as (F(prop_1 or prop_2)) and (F(prop_3)) with the temporal order enforced by until or implies. Since the command says \"then\", we can use until or implies. A suitable way is: (F(prop_1 or prop_2)) and (F(prop_3)) and (not prop_3 until (prop_1 or prop_2)) meaning prop_3 does not happen before prop_1 or prop_2.\n\n2. *Explanation dictionary* \u2013\n{\n  \"move to yellow or red room\": \"F(prop_1 or prop_2)"}
{"id": 2299, "sentence": ["go", "to", "the", "red", "room", "and", "then", "go", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "then", "go", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (not prop_2 U prop_1) FINISH"}
{"id": 459, "sentence": ["go", "to", "red", "room", "get", "chair", "go", "to", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "get", "chair", "go", "to", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F (prop_1 implies F prop_2)) and (F (prop_2 implies F prop_3)) FINISH"}
{"id": 1803, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F)"}
{"id": 2773, "sentence": ["move", "to", "the", "large", "blue", "room", "while", "avoiding", "the", "small", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_1", "while", "avoiding", "the", "small", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (not(prop_2) until prop_1) FINISH"}
{"id": 2566, "sentence": ["the", "robot", "has", "to", "go", "through", "the", "red", "or", "yellow", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["the", "robot", "has", "to", "go", "through", "the", "prop_1", "or", "prop_2", "to", "get", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F prop_3), and before that, it must have passed through either the red room or the yellow room. This can be expressed as: globally, if the blue room is eventually reached, then before that, the robot must have been in the red or yellow room. Using temporal logic, this is captured by stating that the blue room is eventually reached (F prop_3), and that until the blue room is reached, the robot is in the red or yellow room at some point (F (prop_1 or prop_2) before prop_3). More precisely, the robot must have passed through the red or yellow room before reaching the blue room, so the red or yellow room is visited before the blue room. This can be expressed as: (F prop_3) and ( (not prop_3) U (prop_1 or prop_2) )"}
{"id": 2676, "sentence": ["while", "avoiding", "the", "red", "room", "follow", "the", "shortest", "path", "to", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["while", "avoiding", "the", "prop_2", "follow", "the", "shortest", "path", "to", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (G (not prop_1)) and (F prop_2) FINISH"}
{"id": 858, "sentence": ["go", "to", "the", "green", "room", "via", "the", "yellow", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "via", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 1630, "sentence": ["move", "into", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 1737, "sentence": ["move", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) holds true. Since the command is about eventually being in the yellow room, we use the \"finally\" (F) operator applied to prop_1.\n\n2. *Explanation dictionary* \u2013 {\"move to the yellow room\": \"finally prop_1\"}\n\n3. *FINAL:* (finally prop_1)"}
{"id": 564, "sentence": ["move", "to", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F)"}
{"id": 2927, "sentence": ["go", "to", "the", "yellow", "room", "but", "avoid", "the", "green", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (finally prop_1) and (globally not prop_2) FINISH"}
{"id": 1174, "sentence": ["move", "into", "the", "green", "room", "while", "being", "sure", "to", "pass", "through", "only", "the", "yellow", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "into", "the", "prop_2", "while", "being", "sure", "to", "pass", "through", "only", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (G (not prop_1 implies prop_2)) and (F prop_1) FINISH"}
{"id": 1317, "sentence": ["go", "through", "the", "green", "room", "to", "get", "to", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "get", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1). The phrase \"to get to the red room\" means that after going through the green room, the system must eventually reach the red room (prop_2). So, the formula states that eventually the green room is reached, and from that point on, eventually the red room is reached.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go through the green room\": \"F prop_1\",\n  \"to get to the red room\": \"F prop_2\",\n  \"go through the green room to get to the red room\": \"F (prop_1 and F prop_2)\"\n}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 3108, "sentence": ["enter", "the", "green", "room", "without", "passing", "the", "red", "one"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "passing", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(not prop_2)"}
{"id": 1237, "sentence": ["travel", "through", "the", "green", "room", "to", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["travel", "through", "the", "prop_1", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_2) and (true U prop_1) and (prop_1 U prop_2) FINISH"}
{"id": 2795, "sentence": ["go", "only", "through", "rooms", "that", "are", "not", "yellow", "to", "get", "to", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "only", "through", "rooms", "that", "are", "not", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_2), the system only passes through rooms that are not yellow (not prop_1). This means that until the blue room is reached, it must always be true that the current room is not yellow.\n\n2. *Explanation dictionary* \u2013 {\"not yellow\": \"not prop_1\", \"blue room\": \"prop_2\", \"only through rooms that are not yellow to get to the blue room\": \"not prop_1 U prop_2\"}\n\n3. *FINAL:* (not prop_1)"}
{"id": 2546, "sentence": ["go", "into", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 43, "sentence": ["go", "to", "the", "green", "room", "by", "passing", "through", "the", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "by", "passing", "through", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_2 until prop_1) and finally prop_1 FINISH"}
{"id": 2022, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) holds true. Since the command implies that at some future point the agent should be in the yellow room, we use the \"finally\" (F)"}
{"id": 1997, "sentence": ["go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F)"}
{"id": 2949, "sentence": ["walk", "to", "the", "blue", "room", "while", "avoiding", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["walk", "to", "the", "prop_1", "while", "avoiding", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_2) is not visited. This is captured by globally not prop_2 until prop_1 is true.\n\n2. *Explanation dictionary* \u2013 {\"walk to the blue room\": \"prop_1\", \"avoiding the yellow room\": \"not prop_2\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 1575, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) holds true. Since the command implies that at some future point the agent should be in the yellow room, we use the \"finally\" (F)"}
{"id": 1414, "sentence": ["enter", "the", "blue", "room", "by", "going", "though", "the", "yellow", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_2", "by", "going", "though", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_2), the yellow room (prop_1) must be entered at some point. So, \"enter the blue room\" maps to F prop_2, and \"by going through the yellow room\" means that prop_1 must occur before prop_2. This can be expressed as: prop_1 occurs before prop_2, and then prop_2 eventually occurs.\n\n2. *Explanation dictionary* \u2013\n{\n  \"enter the yellow room\": \"F prop_1\",\n  \"enter the blue room\": \"F prop_2\",\n  \"by going through the yellow room before entering the blue room\": \"not prop_2 U prop_1 and F prop_2\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 2455, "sentence": ["move", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(finally) the system reaches a state where the proposition \"prop_1\" (representing \"in the yellow room\")"}
{"id": 309, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 3267, "sentence": ["go", "to", "the", "yellow", "room", "while", "avoiding", "the", "blue", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(yellow room). The phrase \"while avoiding the blue room\" means that at all times before reaching the yellow room, the blue room (prop_2) is not visited. This is captured by globally not prop_2 until prop_1 is reached.\n\n2. *Explanation dictionary* \u2013 {\"go to the yellow room\": \"F prop_1\", \"while avoiding the blue room\": \"G (not prop_2) U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 432, "sentence": ["go", "to", "the", "red", "room", "and", "take", "the", "chair", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "take", "the", "chair", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally prop_1) and (finally prop_2) FINISH"}
{"id": 1458, "sentence": ["enter", "the", "green", "room", "and", "exit", "into", "the", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_1", "and", "exit", "into", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F) for each.\n\n2. *Explanation dictionary* \u2013 {\"enter the green room\": \"F prop_1\", \"exit into the yellow room\": \"F prop_2\", \"and\": \"and\"}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 76, "sentence": ["go", "to", "the", "green", "room", "via", "the", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "via", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_2), but only after it has passed through the blue room (prop_1). This can be expressed as: eventually (F) the green room is reached, and until then, the blue room must be visited first. Using the until operator (U), we say that prop_1 (blue room) holds until prop_2 (green room) holds.\n\n2. *Explanation dictionary* \u2013 {\"blue room\": \"prop_1\", \"green room\": \"prop_2\", \"go to the green room via the blue room\": \"prop_1 U prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 1824, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) holds true. Since the command implies that at some future point the agent should be in the yellow room, we use the \"finally\" (F)"}
{"id": 606, "sentence": ["move", "through", "the", "yellow", "or", "green", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "through", "the", "prop_2", "or", "prop_1", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* ((prop_1 or prop_2) until prop_3) FINISH"}
{"id": 1794, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F)"}
{"id": 3142, "sentence": ["enter", "the", "red", "room", "without", "entering", "a", "blue", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "entering", "a", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(not prop_2)"}
{"id": 2085, "sentence": ["enter", "the", "green", "room", "without", "entering", "a", "blue", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "entering", "a", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (not prop_2 U prop_1) FINISH"}
{"id": 2143, "sentence": ["travel", "to", "the", "blue", "room", "but", "do", "not", "go", "through", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["travel", "to", "the", "prop_1", "but", "do", "not", "go", "through", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* globally(not(prop_2)) and finally(prop_1) FINISH"}
{"id": 2422, "sentence": ["go", "to", "the", "red", "room", "go", "to", "the", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "go", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 U (F prop_2)) FINISH"}
{"id": 3097, "sentence": ["move", "to", "the", "large", "blue", "room", "while", "avoiding", "the", "small", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_1", "while", "avoiding", "the", "small", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1 represents \"in the large blue room\").\n- \"while avoiding the small yellow room\" means that until we reach the large blue room, we must never be in the small yellow room (prop_2 represents \"in the small yellow room\").\n- Therefore, the formula states that prop_1 will eventually be true, and until then, prop_2 is always false.\n\n2. *Explanation dictionary* \u2013\n{\"move to the large blue room\" : \"F prop_1\", \"avoiding the small yellow room\" : \"not prop_2\", \"while avoiding the small yellow room\" : \"not prop_2 U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 1280, "sentence": ["go", "to", "the", "yellow", "area", "through", "green", "area"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "area", "through", "prop_1", "area"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (prop_2 until prop_1) FINISH"}
{"id": 1859, "sentence": ["move", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F) captures the \"eventually\" aspect.\n\n2. *Explanation dictionary* \u2013 {\"move to the green room\": \"finally prop_1\"}\n\n3. *FINAL:* (finally prop_1)"}
{"id": 2893, "sentence": ["to", "reach", "the", "blue", "room", "do", "not", "go", "through", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["to", "reach", "the", "prop_1", "do", "not", "go", "through", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* until(prop_1, not(prop_2)) and finally(prop_1) FINISH"}
{"id": 728, "sentence": ["push", "the", "object", "from", "the", "red", "room", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["push", "the", "object", "from", "the", "prop_1", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1 implies F prop_2)\"}\n\n3. FINAL: G (prop_1 implies F prop_2)"}
{"id": 2653, "sentence": ["go", "to", "blue", "room", "through", "red", "or", "yellow", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "to", "prop_3", "through", "red", "prop_1", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 3, 3, 0, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* ((prop_2 or prop_3) U prop_1) and F prop_1 FINISH"}
{"id": 1167, "sentence": ["move", "toward", "the", "red", "room", "then", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "toward", "the", "prop_1", "then", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1) U (prop_2) FINISH"}
{"id": 3060, "sentence": ["enter", "the", "blue", "room", "without", "entering", "a", "red", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "entering", "a", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(not prop_2)"}
{"id": 738, "sentence": ["go", "to", "the", "yellow", "object", "in", "the", "red", "room", "and", "move", "it", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "yellow", "object", "in", "the", "prop_1", "and", "move", "it", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(finally) reaching a state where the yellow object is in the red room, i.e., F prop_1, where prop_1 represents \"at yellow object in red room\".\n\n- \"move it to the green room\": After reaching the yellow object in the red room, eventually move it to the green room, i.e., F prop_2, where prop_2 represents \"yellow object in green room\".\n\nSince the two actions are sequential and connected by \"and\", the overall formula is: first eventually prop_1, and then eventually prop_2. In LTL, this can be expressed as F prop_1 and then F prop_2, but to capture the sequence, we use until or implies.\n\nOne way is: F prop_1 and (prop_1 implies F prop_2), or more simply: F prop_1 and F prop_2, assuming the order is implied by the command.\n\nAlternatively, to enforce the order, we can say: F (prop_1 and F prop_2)"}
{"id": 1542, "sentence": ["go", "to", "the", "green", "room", "then", "go", "to", "the", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "go", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (not prop_2 until prop_1) FINISH"}
{"id": 1490, "sentence": ["go", "through", "the", "green", "room", "to", "get", "to", "the", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "get", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_2) and ((not prop_2) U prop_1) FINISH"}
{"id": 1819, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 1514, "sentence": ["go", "through", "the", "green", "room", "in", "to", "the", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "in", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F (prop_1 implies F prop_2)) FINISH"}
{"id": 1049, "sentence": ["move", "through", "the", "blue", "room", "to", "the", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "the", "prop_1", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) and finally prop_2 FINISH"}
{"id": 1480, "sentence": ["go", "through", "the", "yellow", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F(prop_1) and F(prop_2)) FINISH"}
{"id": 299, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 676, "sentence": ["go", "through", "square", "that", "is", "not", "green", "to", "get", "the", "blue", "rectangular"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "square", "that", "is", "not", "prop_2", "to", "get", "the", "prop_1", "rectangular"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F (prop_1 and not prop_2)) and (F prop_3) FINISH"}
{"id": 440, "sentence": ["move", "to", "the", "red", "room", "and", "push", "the", "chair", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "push", "the", "chair", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F) operator on both and combine them with \"and.\"\n\n2. *Explanation dictionary* \u2013 {\"move to the red room\": \"F prop_1\", \"push the chair to the blue room\": \"F prop_2\", \"and\": \"and\"}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 2753, "sentence": ["go", "to", "the", "blue", "but", "do", "not", "go", "through", "yellow"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "go", "through", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (finally(prop_1) and (not(prop_2) U prop_1)) FINISH"}
{"id": 3119, "sentence": ["pass", "through", "the", "non", "yellow", "room", "to", "reach", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["pass", "through", "the", "non", "prop_2", "to", "reach", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(not prop_1, assuming prop_1 = \"yellow room\") until we reach the green room (prop_2 = \"green room\"). The phrase \"to reach the green room\" indicates that eventually the green room is reached. So the formula is: globally, not yellow room holds until finally the green room is reached.\n\n2. *Explanation dictionary* \u2013 {\"non yellow room\": \"not prop_1\", \"green room\": \"prop_2\", \"pass through the non yellow room to reach the green room\": \"(not prop_1) U prop_2\"}\n\n3. *FINAL:* (not prop_1)"}
{"id": 474, "sentence": ["go", "through", "the", "yellow", "or", "red", "room", "to", "reach", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "to", "reach", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(finally) the system will be in a state where either the yellow room or the red room is true (prop_1 or prop_2). The phrase \"to reach the blue room\" means that after going through the yellow or red room, eventually the blue room (prop_3) will be reached. This can be expressed as: eventually (yellow or red) and then eventually blue. Since temporal logic does not have explicit sequencing, we can express that eventually blue is reached, and before that, eventually yellow or red is reached. One way is to say: eventually blue, and until blue is reached, eventually yellow or red must have occurred. Alternatively, we can say: eventually (yellow or red) and eventually blue, and globally, blue is only reached after yellow or red. But since the command is \"go through yellow or red room to reach blue room,\" the simplest is: eventually (yellow or red) and eventually blue, and blue is only reached after yellow or red. This can be expressed as: F(prop_1 or prop_2) and F prop_3 and G (prop_3 implies that previously (yellow or red)"}
{"id": 155, "sentence": ["enter", "blue", "room", "via", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "prop_2", "via", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 2, 2, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (not F prop_2 U prop_1) FINISH"}
{"id": 951, "sentence": ["go", "through", "the", "red", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(where prop_1 = \"in red room\"). The phrase \"to the green room\" indicates that after going through the red room, the system should eventually be in the green room, represented by F prop_2 (where prop_2 = \"in green room\"). To capture the sequence \"go through red room to green room,\" we specify that eventually the red room is reached, and from that point onward, eventually the green room is reached. This is expressed as F (prop_1 and F prop_2).\n\n2. *Explanation dictionary* \u2013 {\"go through the red room\": \"F prop_1\", \"to the green room\": \"F prop_2\", \"go through the red room to the green room\": \"F (prop_1 and F prop_2)\"}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 521, "sentence": ["go", "to", "the", "red", "room", "and", "then", "go", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "then", "go", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 U prop_2) and finally prop_2 FINISH"}
{"id": 955, "sentence": ["go", "through", "the", "red", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "get", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and ((not prop_2) U prop_1) and (F prop_2) FINISH"}
{"id": 1031, "sentence": ["travel", "through", "the", "red", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["travel", "through", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 implies F prop_2) FINISH"}
{"id": 1131, "sentence": ["go", "through", "the", "red", "room", "and", "enter", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "and", "enter", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) and F prop_2 FINISH"}
{"id": 1129, "sentence": ["go", "to", "the", "green", "room", "only", "through", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "only", "through", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_2) and (prop_1 U prop_2) FINISH"}
{"id": 2737, "sentence": ["the", "robot", "avoids", "the", "red", "to", "get", "to", "the", "yellow"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["the", "robot", "avoids", "the", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (not prop_1) U (finally prop_2) FINISH"}
{"id": 2953, "sentence": ["walk", "through", "any", "room", "except", "the", "green", "room", "to", "enter", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["walk", "through", "any", "room", "except", "the", "prop_2", "to", "enter", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (G (not prop_1) U prop_2) and F prop_2 FINISH"}
{"id": 1666, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) holds true. Since the command implies that at some future point the agent should be in the blue room, we use the \"finally\" (F)"}
{"id": 1264, "sentence": ["go", "through", "the", "yellow", "room", "into", "the", "blue", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (F (prop_1 and F prop_2)) FINISH"}
{"id": 278, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 3087, "sentence": ["go", "to", "the", "yellow", "room", "while", "avoiding", "the", "green", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_2) must not be visited. This is captured by \"not prop_2\" holding globally until prop_1 becomes true.\n\n2. *Explanation dictionary* \u2013 {\"go to the yellow room\": \"prop_1\", \"avoiding the green room\": \"not prop_2\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 857, "sentence": ["go", "to", "the", "green", "room", "via", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "via", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 3025, "sentence": ["enter", "into", "the", "room", "that", "is", "not", "green", "and", "continue", "through", "that", "room", "into", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "into", "the", "room", "that", "is", "not", "prop_2", "and", "continue", "through", "that", "room", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* F (prop_1 and not prop_2) and F prop_3 FINISH"}
{"id": 1713, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F)"}
{"id": 3192, "sentence": ["drive", "through", "the", "room", "that", "is", "not", "blue", "and", "enter", "the", "red", "room", "on", "the", "other", "side"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["drive", "through", "the", "room", "that", "is", "not", "prop_2", "and", "enter", "the", "prop_1", "on", "the", "other", "side"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F (not prop_"}
{"id": 922, "sentence": ["please", "go", "to", "the", "green", "room", "through", "the", "yellow", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["please", "go", "to", "the", "prop_2", "through", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_2), but only after having passed through the yellow room (prop_1). This can be expressed as: eventually (F) prop_2, and before that, prop_1 must hold at some point. More precisely, prop_2 is reached, and until then, prop_1 must occur. Using the until operator, we can say that prop_1 holds until prop_2 holds.\n\n2. *Explanation dictionary* \u2013\n{\n  \"yellow room\": \"prop_1\",\n  \"green room\": \"prop_2\",\n  \"go to the green room through the yellow room\": \"prop_1 U prop_2\"\n}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 533, "sentence": ["move", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(representing \"in the green room\") is true. Since the command implies that at some future point the system should be in the green room, we use the \"finally\" (F)"}
{"id": 3344, "sentence": ["go", "through", "the", "yellow", "or", "red", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_3) and ((prop_1 or prop_2) U"}
{"id": 1474, "sentence": ["enter", "blue", "room", "via", "yellow", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "prop_2", "via", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 2, 2, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 2044, "sentence": ["go", "to", "green", "area", "avoiding", "red", "area"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "area", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (G (not prop_2)) and (F prop_1) FINISH"}
{"id": 1760, "sentence": ["go", "to", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F)"}
{"id": 3321, "sentence": ["go", "thru", "the", "blue", "or", "red", "box", "to", "get", "to", "the", "yellow", "box"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "thru", "the", "prop_2", "or", "prop_1", "box", "to", "get", "to", "the", "prop_3", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 3, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(finally) either prop_1 (blue box) or prop_2 (red box) is true. The phrase \"to get to the yellow box\" means that eventually (finally) prop_3 (yellow box) is true. Since the command implies that the yellow box is reached after going through the blue or red box, we express that eventually the blue or red box is reached, and after that, eventually the yellow box is reached. This can be captured by: (F (prop_1 or prop_2)) and (F prop_3), but to express the order, we use until: the yellow box is reached after the blue or red box, so the yellow box is finally reached, and until then, the blue or red box is reached. Alternatively, we can say: (F (prop_1 or prop_2)) and (F prop_3) and ( (not prop_3) U (prop_1 or prop_2) )"}
{"id": 101, "sentence": ["move", "into", "the", "blue", "room", "but", "only", "via", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "into", "the", "prop_2", "but", "only", "via", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and ((not prop"}
{"id": 3271, "sentence": ["move", "to", "the", "large", "yellow", "room", "while", "avoiding", "the", "small", "blue", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_1", "while", "avoiding", "the", "small", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (G (not prop_2)) U (F prop_1) FINISH"}
{"id": 1684, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 1044, "sentence": ["go", "through", "the", "yellow", "room", "until", "you", "get", "to", "the", "green"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "until", "you", "get", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 2572, "sentence": ["go", "through", "the", "yellow", "or", "red", "room", "into", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "into", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "  \"yellow or red room\": \"(prop_1 or prop_2)\","}
{"id": 2324, "sentence": ["go", "to", "the", "yellow", "room", "and", "then", "go", "into", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "then", "go", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (not prop_2 until prop_1) FINISH"}
{"id": 1543, "sentence": ["go", "through", "the", "red", "room", "and", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "and", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "  \"sequence\": \"F (prop_1 and F prop_2)\""}
{"id": 2523, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 3343, "sentence": ["the", "robot", "must", "move", "through", "the", "red", "or", "blue", "room", "to", "get", "to", "the", "yellow", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["the", "robot", "must", "move", "through", "the", "prop_1", "or", "prop_2", "to", "get", "to", "the", "yellow", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "  \"red or blue room\": \"(prop_1 or prop_2)\","}
{"id": 2118, "sentence": ["move", "to", "the", "large", "red", "room", "while", "avoiding", "the", "small", "yellow", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_1", "while", "avoiding", "the", "small", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_2) is not entered. So, globally (always), prop_2 is false until prop_1 becomes true (the move is completed).\n\n2. *Explanation dictionary* \u2013 {\"move to the large red room\": \"prop_1\", \"avoiding the small yellow room\": \"not prop_2\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 3314, "sentence": ["go", "through", "either", "a", "red", "or", "yellow", "room", "to", "enter", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "either", "a", "prop_1", "or", "prop_2", "to", "enter", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(red room) or prop_2 (yellow room) holds. The phrase \"to enter the green room\" means eventually reaching a state where prop_3 (green room) holds. Since the green room is entered after going through the red or yellow room, the formula states that eventually prop_3 holds, and before that, prop_1 or prop_2 must have held at some point. This can be expressed as: eventually prop_3 holds, and before that, prop_1 or prop_2 held. Using until, we say that prop_3 holds eventually, and until then, prop_1 or prop_2 must have occurred.\n\n2. *Explanation dictionary* \u2013\n{\n  \"either a red or yellow room\": \"(prop_1 or prop_2)\",\n  \"go through either a red or yellow room\": \"F (prop_1 or prop_2)\",\n  \"enter the green room\": \"F prop_3\",\n  \"go through either a red or yellow room to enter the green room\": \"F prop_3 and (prop_1 or prop_2)"}
{"id": 2394, "sentence": ["go", "into", "the", "red", "room", "and", "then", "into", "the", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "and", "then", "into", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "     \"and then\": \"implies next\","}
{"id": 3155, "sentence": ["go", "to", "yellow", "room", "avoiding", "blue"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "avoiding", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(representing \"yellow room\") is true. This is captured by the temporal operator finally (F) applied to prop_1.\n- \"avoiding blue\" means that at no point before reaching the yellow room should prop_2 (representing \"blue\") be true. This is captured by the until (U) operator: prop_2 is never true until prop_1 becomes true, so we use not prop_2 U prop_1.\n\n2. *Explanation dictionary* \u2013\n{\n  \"yellow room\": \"prop_1\",\n  \"blue\": \"prop_2\",\n  \"go to yellow room\": \"F prop_1\",\n  \"avoiding blue\": \"not prop_2 U prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 2355, "sentence": ["go", "to", "the", "blue", "room", "then", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_2) should be reached. This is captured by the \"until\" operator: prop_1 holds until prop_2 becomes true, and then prop_2 eventually holds.\n\n2. *Explanation dictionary* \u2013 {\"go to the blue room\": \"prop_1\", \"then to the green room\": \"F prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 1165, "sentence": ["first", "enter", "the", "blue", "room", "and", "then", "proceed", "to", "the", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["first", "enter", "the", "prop_1", "and", "then", "proceed", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_1 and (not prop_2 until prop_1)) and F prop_2 FINISH"}
{"id": 1242, "sentence": ["go", "through", "the", "green", "box", "to", "get", "to", "the", "yellow", "area"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "box", "to", "get", "to", "the", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (not prop_2 U prop_1) FINISH"}
{"id": 2663, "sentence": ["go", "through", "the", "green", "or", "yellow", "room", "to", "the", "red", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "prop_2", "to", "the", "red", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* F ((prop_1 or prop_2) and F prop_3) FINISH"}
{"id": 1148, "sentence": ["go", "through", "the", "yellow", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "get", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 implies F prop_2) FINISH"}
{"id": 124, "sentence": ["pass", "through", "the", "small", "green", "room", "to", "get", "to", "the", "large", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "small", "prop_1", "to", "get", "to", "the", "large", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1). The phrase \"to get to the large blue room\" means that after passing through the small green room, we eventually reach the large blue room (prop_2). So, the formula states that eventually prop_1 holds, and from that point onward, eventually prop_2 holds.\n\n2. *Explanation dictionary* \u2013\n{\n  \"pass through the small green room\": \"F prop_1\",\n  \"to get to the large blue room\": \"F prop_2\",\n  \"pass through the small green room to get to the large blue room\": \"F (prop_1 and F prop_2)\"\n}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 2734, "sentence": ["the", "robot", "avoids", "the", "green", "to", "get", "to", "the", "blue"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["the", "robot", "avoids", "the", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (G (not prop_1)) and (F prop_2) FINISH"}
{"id": 781, "sentence": ["avoid", "the", "blue", "room", "to", "get", "to", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "to", "get", "to", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (G not prop_1) and (F prop_2) FINISH"}
{"id": 1403, "sentence": ["go", "to", "the", "red", "room", "through", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "through", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1), but only after having passed through the green room (prop_2). This can be expressed as: eventually (F) the red room is reached, and until that happens, the green room must be visited first. Using the until operator (U), we say that the green room (prop_2) holds until the red room (prop_1) is reached.\n\n2. *Explanation dictionary* \u2013 {\"red room\": \"prop_1\", \"green room\": \"prop_2\", \"go to the red room through the green room\": \"prop_2 U prop_1\"}\n\n3. *FINAL:* (prop_2 U prop_1)"}
{"id": 2558, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 3001, "sentence": ["pass", "through", "any", "room", "that", "is", "not", "green", "to", "reach", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["pass", "through", "any", "room", "that", "is", "not", "prop_2", "to", "reach", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "  \"not green\": \"not prop_1\","}
{"id": 2266, "sentence": ["go", "to", "yellow", "room", "and", "then", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "and", "then", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (not prop_2 U prop_1) FINISH"}
{"id": 1887, "sentence": ["move", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) holds true. Since the command implies that at some future point the system should be in the yellow room, we use the \"finally\" (F)"}
{"id": 1982, "sentence": ["move", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(representing \"in the green room\") holds true. Since the command is about moving to a location, the temporal operator \"finally\" (F)"}
{"id": 1177, "sentence": ["go", "to", "the", "green", "room", "by", "first", "entering", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "by", "first", "entering", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (finally(prop_2) and (prop_1 until prop_2)) FINISH"}
{"id": 121, "sentence": ["go", "to", "the", "blue", "room", "and", "make", "sure", "to", "go", "through", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "and", "make", "sure", "to", "go", "through", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_2 U prop_1)"}
{"id": 1941, "sentence": ["go", "into", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F)"}
{"id": 2871, "sentence": ["enter", "the", "room", "that", "is", "not", "yellow", "which", "will", "lead", "to", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "room", "that", "is", "not", "prop_2", "which", "will", "lead", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (not prop_1) and (F prop_2) FINISH"}
{"id": 3232, "sentence": ["go", "to", "the", "green", "room", "without", "entering", "a", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "without", "entering", "a", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(always) not prop_2 holds until prop_1 is reached.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the green room\": \"F prop_1\",\n  \"without entering a red room\": \"G (not prop_2) U prop_1\"\n}\n\n3. *FINAL:* (G (not prop_2) U prop_1)"}
{"id": 1836, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) holds true. Since the command implies that at some future point the agent should be in the yellow room, we use the \"finally\" (F)"}
{"id": 3227, "sentence": ["avoid", "the", "yellow", "room", "to", "reach", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "to", "reach", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (globally (not prop_1)) and (finally prop_2) FINISH"}
{"id": 2212, "sentence": ["move", "the", "robot", "from", "the", "green", "room", "to", "the", "yellow", "or", "red", "room", "to", "the", "big", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "the", "robot", "from", "the", "prop_1", "to", "the", "yellow", "prop_2", "red", "room", "to", "the", "big", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 and F (prop_2 or prop_3 and F prop_4)) FINISH"}
{"id": 1673, "sentence": ["move", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F)"}
{"id": 3111, "sentence": ["avoid", "the", "yellow", "room", "and", "move", "to", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "and", "move", "to", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (globally (not prop_1)) and (finally prop_2) FINISH"}
{"id": 1138, "sentence": ["walk", "through", "the", "blue", "room", "until", "you", "reach", "the", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["walk", "through", "the", "prop_1", "until", "you", "reach", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (prop_1) until (prop_2) FINISH"}
{"id": 894, "sentence": ["only", "go", "to", "the", "green", "room", "by", "first", "entering", "the", "yellow", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["only", "go", "to", "the", "prop_2", "by", "first", "entering", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* G (not prop_2 until prop_1) FINISH"}
{"id": 4, "sentence": ["go", "through", "the", "blue", "to", "get", "to", "the", "green"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "get", "to", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(blue) must be true at some point before reaching prop_2 (green). The phrase \"to get to the green\" means that eventually prop_2 (green) must be true. Combining these, we want that eventually prop_2 is true, and before that, prop_1 must have been true at some point. This can be expressed as: prop_1 holds until prop_2 holds, and eventually prop_2 holds.\n\n2. *Explanation dictionary* \u2013 {\"go through the blue\": \"prop_1 U prop_2\", \"to get to the green\": \"F prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 2306, "sentence": ["go", "from", "the", "blue", "room", "to", "the", "yellow", "room", "and", "then", "go", "from", "the", "yellow", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "from", "the", "blue", "room", "to", "the", "yellow", "room", "and", "then", "go", "from", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 U prop_"}
{"id": 1343, "sentence": ["go", "through", "the", "red", "room", "to", "reach", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "reach", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1).\n- \"to reach the blue room\": After going through the red room, the system must eventually reach the blue room (prop_2).\n- The temporal ordering implies that the blue room is reached only after the red room has been visited.\nThis can be expressed as: eventually (red room) and then eventually (blue room) after that.\n\n2. *Explanation dictionary* \u2013\n{\n  \"red room\": \"prop_1\",\n  \"blue room\": \"prop_2\",\n  \"go through the red room\": \"F prop_1\",\n  \"to reach the blue room\": \"F prop_2\",\n  \"go through the red room to reach the blue room\": \"F (prop_1 and F prop_2)\"\n}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 1056, "sentence": ["go", "to", "the", "yellow", "room", "via", "the", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "via", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_2) and ((not prop_2) U prop_1) FINISH"}
{"id": 2635, "sentence": ["go", "to", "green", "or", "red", "room", "to", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "red_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "to", "prop_1", "or", "prop_2", "to", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 2, 2, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "  \"green or red room\": \"(prop_1 or prop_2)\","}
{"id": 1864, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 949, "sentence": ["go", "into", "the", "green", "room", "through", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_2", "through", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F prop_2), and before that, it must have been in the red room. This can be captured by saying that prop_1 holds until prop_2 becomes true: (prop_1 U prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n  \"red room\": \"prop_1\",\n  \"green room\": \"prop_2\",\n  \"go into the green room through the red room\": \"(prop_1 U prop_2)\"\n}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 769, "sentence": ["go", "to", "the", "red", "room", "and", "push", "the", "yellow", "thing", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "push", "the", "yellow", "thing", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (finally prop_1) and (finally prop_2) FINISH"}
{"id": 3288, "sentence": ["go", "to", "the", "green", "room", "while", "avoiding", "the", "red", "room", "on", "the", "way"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "red", "prop_2", "the", "way"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(green room). The phrase \"while avoiding the red room on the way\" means that until we reach the green room, we must never be in the red room (prop_2). So, \"avoiding the red room on the way\" translates to globally not prop_2 until prop_1 is reached.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the green room\": \"F prop_1\",\n  \"avoiding the red room on the way\": \"G (not prop_2) U prop_1\"\n}\n\n3. *FINAL:* (G (not prop_2) U prop_1)"}
{"id": 1215, "sentence": ["go", "from", "the", "red", "room", "to", "the", "red", "room", "by", "going", "through", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "from", "the", "red", "room", "to", "the", "prop_2", "by", "going", "through", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_1 and F (prop_2 and F prop_1)) FINISH"}
{"id": 1067, "sentence": ["go", "thru", "the", "red", "box", "to", "get", "to", "the", "green", "box"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "thru", "the", "prop_1", "box", "to", "get", "to", "the", "prop_2", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 implies F prop_2) FINISH"}
{"id": 1905, "sentence": ["move", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) holds true. Since the command is about eventually being in the yellow room, we use the \"finally\" (F)"}
{"id": 2009, "sentence": ["move", "to", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F)"}
{"id": 443, "sentence": ["go", "to", "the", "red", "room", "get", "the", "chair", "and", "then", "go", "back", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "get", "the", "chair", "and", "then", "go", "back", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "ly(prop_1) and (prop_1 implies finally(prop_2)) and (prop_2 implies finally(prop_3))"}
{"id": 3094, "sentence": ["move", "to", "the", "large", "red", "room", "while", "avoiding", "the", "small", "green", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_1", "while", "avoiding", "the", "small", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* globally(not(prop_2)) and finally(prop_1) FINISH"}
{"id": 2101, "sentence": ["go", "to", "green", "area", "by", "avoiding", "blue", "area"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "area", "by", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "- This can be expressed as: globally (not prop_2) until prop_1, and eventually prop_1."}
{"id": 254, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 2216, "sentence": ["go", "through", "the", "green", "or", "yellow", "room", "to", "reach", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "prop_2", "to", "reach", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "  \"green or yellow room\": \"(prop_1 or prop_2)\","}
{"id": 2369, "sentence": ["move", "from", "blue", "room", "to", "red", "room", "then", "move", "to", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "from", "blue", "room", "to", "prop_1", "then", "move", "to", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "  \"then\": \"until and finally\""}
{"id": 2488, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F)"}
{"id": 1715, "sentence": ["go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F)"}
{"id": 828, "sentence": ["go", "to", "red", "or", "blue", "then", "green"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "to", "prop_1", "or", "prop_2", "then", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 2, 0, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* ((prop_1 or prop_2) until prop_3) FINISH"}
{"id": 2559, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 2817, "sentence": ["go", "to", "the", "blue", "room", "but", "do", "not", "use", "the", "yellow", "room", "to", "get", "there"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "use", "the", "yellow", "prop_2", "get", "there"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F prop_1), where prop_1 stands for \"being in the blue room.\" The phrase \"do not use the yellow room to get there\" means that on the way to the blue room, the yellow room (prop_2) should never be visited. This is captured by stating that globally (always) not prop_2 holds until prop_1 is reached: (not prop_2) U prop_1.\n\n2. *Explanation dictionary* \u2013 {\"go to the blue room\": \"F prop_1\", \"do not use the yellow room to get there\": \"(not prop_2) U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 1583, "sentence": ["move", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(representing \"in the green room\") is true. Since the command implies that at some future point the system should be in the green room, we use the \"finally\" (F)"}
{"id": 626, "sentence": ["take", "a", "path", "to", "reach", "the", "blue", "colour", "place", "by", "not", "taking", "the", "route", "which", "is", "red", "and", "black"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["take", "a", "path", "to", "reach", "the", "prop_1", "colour", "place", "by", "not", "taking", "the", "route", "which", "is", "prop_2", "and", "black"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (G not (prop_2 and prop_3)) and (F prop_1) FINISH"}
{"id": 2235, "sentence": ["go", "through", "the", "yellow", "or", "green", "room", "and", "enter", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "and", "enter", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally (prop_1 or prop_2)) and (finally prop_3) FINISH"}
{"id": 640, "sentence": ["move", "to", "the", "large", "blue", "room", "while", "avoiding", "the", "small", "red", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_1", "while", "avoiding", "the", "small", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (not prop_2) until prop_1 FINISH"}
{"id": 2415, "sentence": ["move", "to", "the", "blue", "room", "and", "then", "move", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "then", "move", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 U (F prop_2)) FINISH"}
{"id": 1468, "sentence": ["go", "through", "the", "yellow", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (F (prop_1 and F prop_2)) FINISH"}
{"id": 972, "sentence": ["go", "through", "the", "yellow", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 implies F prop_2) FINISH"}
{"id": 574, "sentence": ["go", "into", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F)"}
{"id": 1288, "sentence": ["go", "to", "the", "yellow", "room", "via", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "via", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 2297, "sentence": ["go", "to", "the", "blue", "room", "and", "then", "go", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "then", "go", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "  \"and then\": \"F (prop_1 and F prop_2)\""}
{"id": 581, "sentence": ["go", "through", "the", "yellow", "or", "red", "room", "and", "enter", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "and", "enter", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (finally (prop_1 or prop_2)) and (finally prop_3) FINISH"}
{"id": 1461, "sentence": ["travel", "through", "the", "green", "room", "to", "the", "red", "rectangular", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["travel", "through", "the", "prop_1", "to", "the", "red", "rectangular", "room", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) and finally prop_2 FINISH"}
{"id": 1040, "sentence": ["go", "through", "yellow", "room", "to", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 878, "sentence": ["follow", "the", "path", "through", "the", "blue", "room", "to", "get", "to", "the", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["follow", "the", "path", "through", "the", "prop_1", "to", "get", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_2), but only after passing through the blue room (prop_1). This means that the yellow room is eventually reached (F prop_2), and until then, the system must pass through the blue room (prop_1). So, the path requires that prop_1 holds until prop_2 is reached, which is expressed as (prop_1 U prop_2).\n\n2. *Explanation dictionary* \u2013 {\"blue room\": \"prop_1\", \"yellow room\": \"prop_2\", \"follow the path through the blue room to get to the yellow room\": \"(prop_1 U prop_2)\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 489, "sentence": ["the", "robot", "has", "to", "go", "through", "the", "yellow", "or", "red", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["the", "robot", "has", "to", "go", "through", "the", "prop_2", "or", "prop_1", "to", "get", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "  \"yellow or red room\": \"(prop_1 or prop_2)\","}
{"id": 462, "sentence": ["go", "from", "the", "blue", "room", "to", "the", "red", "room", "then", "push", "the", "chair", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "from", "the", "blue", "room", "to", "the", "prop_1", "then", "push", "the", "chair", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(being in the blue room) and prop_2 (being in the red room). The formula requires that starting from prop_1, eventually prop_2 is reached. This is expressed as prop_1 U prop_2, meaning \"prop_1 holds until prop_2 becomes true.\"\n\n- \"then push the chair to the blue room\": Represented by prop_3 (pushing the chair to the blue room). This should happen after reaching the red room (prop_2). So, after prop_2 becomes true, eventually prop_3 should happen. This is expressed as F prop_3, but only after prop_2.\n\nCombining these, the overall formula states: \"prop_1 holds until prop_2, and after prop_2, eventually prop_3.\"\n\n2. *Explanation dictionary*:\n\n{\n  \"go from the blue room to the red room\": \"(prop_1 until prop_2)"}
{"id": 680, "sentence": ["go", "to", "blue", "without", "going", "to", "green"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "without", "going", "to", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(assuming prop_1 means \"go to blue\"). The phrase \"without going to green\" means that \"go to green\" (prop_2) never occurs before \"go to blue\". So, \"go to blue without going to green\" means that eventually prop_1 happens, and until that happens, prop_2 never happens.\n\n2. *Explanation dictionary* \u2013 {\"go to blue\": \"F prop_1\", \"without going to green\": \"not prop_2 U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 2685, "sentence": ["head", "to", "the", "blue", "rectangular", "room", "without", "passing", "through", "a", "yellow", "square", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["head", "to", "the", "blue", "rectangular", "room", "without", "passing", "through", "a", "yellow", "square", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* ((not prop_2) U prop_1) FINISH"}
{"id": 1527, "sentence": ["move", "through", "the", "red", "room", "and", "out", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "the", "prop_1", "and", "out", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(being in the blue room) will occur. So the overall formula states that eventually prop_1 happens, and after that, eventually prop_2 happens.\n\n2. *Explanation dictionary* \u2013 {\"move through the red room\": \"F prop_1\", \"and out into the blue room\": \"F prop_2\"}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 3191, "sentence": ["drive", "through", "the", "room", "that", "is", "not", "yellow", "and", "enter", "the", "green", "room", "on", "the", "other", "side"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["drive", "through", "the", "room", "that", "is", "not", "prop_2", "and", "enter", "the", "prop_1", "on", "the", "other", "side"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(eventually being in that room), and then entering the green room on the other side corresponds to \"finally prop_2\" after that. To express the sequence, we use \"until\" or \"implies\" with \"finally.\" Here, we can say: \"finally prop_1 and after that finally prop_2,\" which can be expressed as \"finally (prop_1 and finally prop_2)"}
{"id": 3170, "sentence": ["go", "to", "the", "red", "room", "but", "do", "not", "take", "the", "blue", "room", "to", "get", "there"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "take", "the", "blue", "prop_2", "get", "there"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_2) should never be visited. So, we want to express that eventually prop_1 holds, and until then, prop_2 never holds.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\": \"F prop_1\",\n  \"do not take the blue room to get there\": \"G (not prop_2) until prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 1135, "sentence": ["walk", "through", "the", "red", "room", "until", "you", "reach", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["walk", "through", "the", "prop_1", "until", "you", "reach", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 2463, "sentence": ["move", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) holds true. Since the command is about eventually being in the blue room, we use the \"finally\" (F) operator applied to prop_1.\n\n2. *Explanation dictionary* \u2013 {\"move to the blue room\": \"finally prop_1\"}\n\n3. *FINAL:* (finally prop_1)"}
{"id": 411, "sentence": ["go", "to", "the", "red", "room", "then", "get", "the", "chair", "then", "go", "back", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "get", "the", "chair", "then", "go", "back", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F (prop_1 and F prop_2)) and (F (prop_"}
{"id": 2811, "sentence": ["move", "to", "yellow", "room", "but", "avoid", "the", "red", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "prop_1", "but", "avoid", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 3224, "sentence": ["go", "to", "the", "green", "room", "while", "avoiding", "the", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (not prop_2) until prop_1 FINISH"}
{"id": 1477, "sentence": ["go", "through", "the", "green", "room", "to", "get", "to", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "get", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and ((not prop_2) U prop_1) FINISH"}
{"id": 736, "sentence": ["push", "the", "object", "in", "the", "red", "room", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["push", "the", "object", "in", "the", "prop_1", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 implies finally prop_2) FINISH"}
{"id": 2094, "sentence": ["move", "to", "room", "not", "using", "red", "into", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "room", "not", "using", "prop_2", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* F (not prop_1 and prop_2) FINISH"}
{"id": 368, "sentence": ["go", "into", "the", "green", "room", "while", "totally", "avoiding", "the", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "while", "totally", "avoiding", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (G (not prop_2)) and (F prop_1) FINISH"}
{"id": 701, "sentence": ["move", "to", "the", "blue", "room", "avoiding", "the", "green", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "avoiding", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(blue room) is true: F prop_1.\n- \"avoiding the green room\" means that at no point before reaching the blue room should the system be in the green room (prop_2). This can be expressed as: prop_2 is never true until prop_1 is true, i.e., (not prop_2) U prop_1.\n\nCombining these, the system must eventually reach the blue room, and until then, it must avoid the green room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"move to the blue room\": \"F prop_1\",\n  \"avoiding the green room\": \"(not prop_2) U prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 2150, "sentence": ["go", "to", "the", "red", "room", "avoiding", "the", "yellow", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "avoiding", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (G (not prop_2)) and (F prop_1) FINISH"}
{"id": 3183, "sentence": ["walk", "through", "any", "room", "except", "the", "yellow", "room", "to", "enter", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["walk", "through", "any", "room", "except", "the", "prop_2", "to", "enter", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* ( (not prop_3) U prop_2 ) and F prop_2 FINISH"}
{"id": 3202, "sentence": ["go", "to", "red", "area", "by", "avoiding", "blue", "area"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "area", "by", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(where prop_1 = \"red area\").\n- \"by avoiding blue area\" means that at all times before reaching the red area, the blue area is not entered, represented as (not prop_2) U prop_1 (where prop_2 = \"blue area\").\nCombining these, the system must avoid blue area until it reaches red area.\n\n2. *Explanation dictionary* \u2013 {\"red area\": \"prop_1\", \"blue area\": \"prop_2\", \"go to red area\": \"F prop_1\", \"avoiding blue area until red area\": \"(not prop_2) U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 59, "sentence": ["go", "thru", "the", "blue", "to", "get", "to", "the", "green"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "thru", "the", "prop_1", "to", "get", "to", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(blue) holds, and before that, we have not yet reached prop_2 (green). The phrase \"to get to the green\" means that eventually prop_2 (green) must be reached. So, the overall formula states that eventually prop_1 (blue) is true, and eventually after that, prop_2 (green) is true.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go thru the blue\": \"F prop_1\",\n  \"to get to the green\": \"F prop_2\"\n}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 1857, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) holds true. Since the command implies that at some future point the agent should be in the yellow room, we use the \"finally\" (F)"}
{"id": 3253, "sentence": ["go", "into", "the", "green", "room", "but", "do", "not", "enter", "the", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "but", "do", "not", "enter", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 1991, "sentence": ["go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F)"}
{"id": 353, "sentence": ["go", "to", "the", "green", "room", "but", "avoid", "the", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G not prop_2) FINISH"}
{"id": 326, "sentence": ["move", "to", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 2256, "sentence": ["go", "to", "the", "blue", "room", "through", "green", "and", "yellow"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "to", "the", "prop_3", "through", "green", "prop_1", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 3, 3, 0, 1, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(finally) the system reaches the blue room (prop_1), but only after passing through green (prop_2) and yellow (prop_3)"}
{"id": 2645, "sentence": ["move", "through", "the", "yellow", "or", "green", "room", "to", "the", "red", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "through", "the", "prop_2", "or", "prop_1", "to", "the", "red", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* ((prop_1 or prop_2) until prop_3) FINISH"}
{"id": 1861, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 2537, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 1255, "sentence": ["move", "into", "the", "red", "room", "but", "only", "via", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "into", "the", "prop_2", "but", "only", "via", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_2). This can be expressed by stating that prop_1 (being in the red room) can only happen after prop_2 (being in the green room) has occurred. Using temporal logic, this is captured by saying that prop_1 eventually happens (F prop_1)"}
{"id": 1231, "sentence": ["move", "into", "the", "red", "room", "through", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "into", "the", "prop_2", "through", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1), but only after having passed through the green room (prop_2). This can be expressed as: eventually (red room) and until then (green room) holds. So, the system must be in the green room until it reaches the red room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"red room\": \"prop_1\",\n  \"green room\": \"prop_2\",\n  \"move into the red room through the green room\": \"prop_2 U prop_1\"\n}\n\n3. *FINAL:* (prop_2 U prop_1)"}
{"id": 3260, "sentence": ["go", "through", "the", "room", "that", "isn", "t", "blue", "and", "enter", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "room", "that", "isn", "t", "prop_2", "and", "enter", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally (not prop_1)) and (finally prop_2) FINISH"}
{"id": 1076, "sentence": ["instead", "of", "going", "through", "the", "red", "room", "move", "through", "the", "yellow", "room", "to", "enter", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["instead", "of", "going", "through", "the", "red", "room", "move", "through", "the", "prop_1", "to", "enter", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* globally not prop_1 and finally (prop_2 and next prop_3) FINISH"}
{"id": 1882, "sentence": ["move", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) holds true. Since the command is about eventually being in the blue room, we use the \"finally\" (F) operator applied to prop_1.\n\n2. *Explanation dictionary* \u2013 {\"move to the blue room\": \"finally prop_1\"}\n\n3. *FINAL:* (finally prop_1)"}
{"id": 120, "sentence": ["the", "robot", "goes", "through", "the", "green", "to", "get", "to", "blue"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["the", "robot", "goes", "through", "the", "prop_1", "to", "get", "to", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (not prop_2 U prop_1) FINISH"}
{"id": 377, "sentence": ["move", "into", "the", "red", "room", "and", "push", "the", "chair", "back", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "into", "the", "prop_1", "and", "push", "the", "chair", "back", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F) for each and combine them with \"and.\"\n\n2. *Explanation dictionary* \u2013 {\"move into the red room\": \"F prop_1\", \"push the chair back into the blue room\": \"F prop_2\", \"and\": \"and\"}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 1392, "sentence": ["go", "through", "the", "yellow", "room", "into", "the", "blue", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1 and F prop_2).\n\n2. *Explanation dictionary* \u2013 {\"yellow room\": \"prop_1\", \"blue room\": \"prop_2\", \"go through the yellow room into the blue room\": \"F(prop_1 and F prop_2)\"}\n\n3. *FINAL:* (F(prop_1 and F prop_2))"}
{"id": 3332, "sentence": ["go", "through", "the", "yellow", "or", "the", "blue", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "yellow_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "the", "prop_2", "to", "get", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* ((prop_1 or prop_2) until prop_3) FINISH"}
{"id": 378, "sentence": ["go", "to", "the", "red", "room", "and", "push", "the", "chair", "in", "front", "of", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "push", "the", "chair", "in", "front", "of", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally prop_1) and (finally prop_2) FINISH"}
{"id": 2658, "sentence": ["go", "through", "either", "the", "red", "or", "the", "green", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "red_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "either", "the", "prop_2", "or", "the", "prop_1", "to", "get", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 0, 1, 1, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally (prop_1 or prop_2)) and (finally prop_3) FINISH"}
{"id": 256, "sentence": ["go", "into", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 1711, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 2764, "sentence": ["don", "t", "go", "through", "the", "red", "room", "towards", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["don", "t", "go", "through", "the", "prop_2", "towards", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* not (prop_1 until prop_2) FINISH"}
{"id": 1700, "sentence": ["go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) is true. Since the command is about eventually being in the green room, we use the \"finally\" (F)"}
{"id": 2650, "sentence": ["up", "through", "the", "green", "or", "red", "box", "to", "reach", "the", "blue", "box"], "tl": ["finally", "(", "(", "green_room", "or", "red_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["up", "through", "the", "prop_1", "or", "prop_2", "box", "to", "reach", "the", "prop_3", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 3, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (true until (prop_1 or prop_2)) and finally prop_3 FINISH"}
{"id": 6, "sentence": ["follow", "the", "path", "through", "the", "blue", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["follow", "the", "path", "through", "the", "prop_1", "to", "get", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), and from there, eventually reach the green room (prop_2). The blue room is visited before the green room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"blue room\": \"prop_1\",\n  \"green room\": \"prop_2\",\n  \"follow the path through the blue room\": \"F prop_1\",\n  \"to get to the green room\": \"F prop_2\",\n  \"blue room before green room\": \"F (prop_1 and F prop_2)\"\n}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 341, "sentence": ["go", "to", "the", "green", "room", "without", "entering", "a", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "without", "entering", "a", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(being in a yellow room) be true. This can be expressed as \"not prop_2 until prop_1\". Combining these, the formula states that eventually prop_1 holds, and until then, prop_2 never holds.\n\n2. *Explanation dictionary* \u2013 {\"go to the green room\": \"F prop_1\", \"without entering a yellow room\": \"not prop_2 U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 286, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 402, "sentence": ["go", "to", "the", "red", "room", "go", "behind", "the", "chair", "then", "bring", "the", "chair", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "go", "behind", "the", "chair", "then", "bring", "the", "chair", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and ( (not prop_2) U (prop_1 and F prop_2) ) and ( (not prop_3)"}
{"id": 2011, "sentence": ["go", "to", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 1417, "sentence": ["go", "towards", "the", "blue", "room", "through", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "towards", "the", "prop_2", "through", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_2) is reached, but only after passing through the red room (prop_1). This means that the red room must be visited at some point before the blue room is reached. We can express this as: the blue room is eventually reached (F prop_2), and until then, the red room must be visited (prop_1 U prop_2).\n\n2. *Explanation dictionary* \u2013 {\"red room\": \"prop_1\", \"blue room\": \"prop_2\", \"through the red room before blue room\": \"prop_1 U prop_2\", \"go towards the blue room\": \"F prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 1282, "sentence": ["go", "to", "the", "blue", "area", "through", "yellow", "area"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "area", "through", "prop_1", "area"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1), but before that, it must pass through the yellow area (prop_2). This can be expressed as: the blue area is eventually reached (F prop_1), and until then, the system must be in the yellow area (prop_2). More precisely, the blue area is reached eventually, and until that moment, the system stays in the yellow area. This is captured by (prop_2 U prop_1).\n\n2. *Explanation dictionary* \u2013 {\"blue area\": \"prop_1\", \"yellow area\": \"prop_2\", \"go to the blue area through yellow area\": \"(prop_2 U prop_1)\"}\n\n3. *FINAL:* (prop_2 U prop_1)"}
{"id": 586, "sentence": ["move", "the", "robot", "through", "the", "yellow", "or", "red", "small", "room", "and", "then", "to", "the", "large", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "the", "robot", "through", "the", "prop_2", "or", "red", "small", "prop_3", "and", "then", "to", "the", "large", "green", "room"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "  \"yellow or red small room\": \"(prop_3 and (prop_1 or"}
{"id": 1400, "sentence": ["pass", "through", "the", "yellow", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "prop_1", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 implies F prop_2) FINISH"}
{"id": 1778, "sentence": ["go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F)"}
{"id": 2347, "sentence": ["go", "into", "the", "blue", "room", "then", "go", "into", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "then", "go", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 and finally prop_2) FINISH"}
{"id": 37, "sentence": ["enter", "the", "green", "room", "through", "the", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_2", "through", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F) prop_2 (enter green room) happens, and before that, prop_1 (enter blue room) must have occurred. This is captured by prop_1 until prop_2 (prop_1 U prop_2).\n\n2. *Explanation dictionary* \u2013 {\"enter the blue room\": \"prop_1\", \"enter the green room\": \"prop_2\", \"enter the green room through the blue room\": \"prop_1 U prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 764, "sentence": ["go", "to", "the", "red", "room", "take", "the", "yellow", "color", "object", "from", "there", "and", "go", "to", "green", "room", "with", "this", "object"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "take", "the", "yellow", "color", "object", "from", "there", "and", "go", "to", "green", "prop_2", "this", "object"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and ( (not prop_2) U ("}
{"id": 2909, "sentence": ["move", "to", "the", "blue", "room", "without", "entering", "a", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "without", "entering", "a", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(blue room) is true: F prop_1.\n- \"without entering a yellow room\" means that until the blue room is reached, the system never enters a yellow room (prop_2). So, globally before reaching the blue room, prop_2 is false.\n- This can be expressed as: prop_2 is never true before prop_1 becomes true, i.e., (not prop_2) holds until prop_1.\n\n2. *Explanation dictionary*:\n{\n  \"move to the blue room\": \"F prop_1\",\n  \"without entering a yellow room\": \"not prop_2 U prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 447, "sentence": ["move", "to", "the", "red", "room", "grab", "the", "chair", "then", "move", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "grab", "the", "chair", "then", "move", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "F prop_1 and (prop_1 \u2192 F prop_2) and (prop_2 \u2192 F prop_3)"}
{"id": 960, "sentence": ["go", "into", "the", "yellow", "room", "and", "then", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "and", "then", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 and finally prop_2) FINISH"}
{"id": 2045, "sentence": ["go", "to", "green", "area", "avoiding", "blue", "area"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "area", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(green area) is true: F prop_1.\n- \"avoiding blue area\" means that at no point before reaching the green area should prop_2 (blue area) be true. This can be expressed as: prop_2 is never true until prop_1 is true, i.e., (not prop_2) U prop_1.\n\nCombining these, the system must avoid blue area until it reaches the green area.\n\n2. *Explanation dictionary* \u2013\n{\n  \"green area\": \"prop_1\",\n  \"blue area\": \"prop_2\",\n  \"go to green area\": \"F prop_1\",\n  \"avoiding blue area\": \"(not prop_2) U prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 237, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 131, "sentence": ["move", "through", "green", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "prop_1", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(green room) holds continuously until we reach prop_2 (blue room).\n- \"to the blue room\" means eventually prop_2 (blue room) is reached.\nThus, the formula states that prop_1 holds until prop_2 is reached, and prop_2 will eventually be true.\n\n2. *Explanation dictionary* \u2013\n{\"green room\": \"prop_1\", \"blue room\": \"prop_2\", \"move through green room to the blue room\": \"prop_1 U prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 600, "sentence": ["move", "through", "the", "green", "or", "yellow", "rooms", "and", "enter", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "through", "the", "prop_1", "or", "prop_2", "rooms", "and", "enter", "the", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally (prop_1 or prop_2)) and (finally prop_3) FINISH"}
{"id": 2744, "sentence": ["go", "to", "blue", "room", "while", "avoiding", "green", "rooms"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "while", "avoiding", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (not(prop_2)) U prop_1 FINISH"}
{"id": 1669, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 2499, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 1714, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 899, "sentence": ["go", "through", "the", "red", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_2) and ((not prop_2) U prop_1) FINISH"}
{"id": 357, "sentence": ["enter", "the", "room", "that", "isn", "t", "yellow", "and", "then", "proceed", "to", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "room", "that", "isn", "t", "prop_2", "and", "then", "proceed", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (prop_1 and not prop_2) implies finally prop_3 FINISH"}
{"id": 64, "sentence": ["move", "to", "the", "large", "green", "room", "by", "passing", "through", "the", "small", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_2", "by", "passing", "through", "the", "small", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) by passing through the small blue room (prop_2) first. This means that prop_2 must hold at some point before prop_1 is reached. Using temporal logic, this is expressed as: prop_2 holds until prop_1 holds, and eventually prop_1 holds.\n\n2. *Explanation dictionary* \u2013\n{\n  \"small blue room\": \"prop_2\",\n  \"large green room\": \"prop_1\",\n  \"passing through the small blue room before reaching the large green room\": \"prop_2 U prop_1\",\n  \"eventually reaching the large green room\": \"F prop_1\"\n}\n\n3. *FINAL:* (prop_2 U prop_1)"}
{"id": 499, "sentence": ["enter", "the", "red", "room", "then", "enter", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_1", "then", "enter", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 and (not prop_2 until prop_2)) FINISH"}
{"id": 1045, "sentence": ["go", "through", "the", "blue", "room", "until", "you", "get", "to", "the", "red"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "until", "you", "get", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 549, "sentence": ["move", "to", "the", "middle", "of", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "middle", "of", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F)"}
{"id": 287, "sentence": ["go", "to", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 2668, "sentence": ["go", "through", "the", "yellow", "or", "red", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "to", "get", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F (prop_1 or prop_2)) and (F prop_3) FINISH"}
{"id": 2562, "sentence": ["move", "to", "yellow", "or", "blue", "room", "them", "move", "to", "green", "room"], "tl": ["finally", "(", "(", "blue_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "to", "prop_2", "or", "prop_1", "them", "move", "to", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F (prop_1 or prop_2)) and (F (prop_3)) and (not prop_3 until"}
{"id": 2594, "sentence": ["move", "through", "the", "blue", "or", "red", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "through", "the", "prop_2", "or", "prop_1", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_3) and (F (prop_1 or prop_2))"}
{"id": 913, "sentence": ["go", "through", "blue", "room", "to", "get", "to", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "to", "get", "to", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_2) and ((not prop_2) U prop_1) FINISH"}
{"id": 628, "sentence": ["go", "to", "blue", "but", "not", "through", "red"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "but", "not", "through", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(finally) prop_1 (blue) should be true. The phrase \"but not through red\" means that until we reach blue, red (prop_2) should never be true. So, \"not through red\" translates to \"globally not prop_2 until prop_1\". Combining these, we get: \"not prop_2 until prop_1\" and \"finally prop_1\".\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to blue\": \"F prop_1\",\n  \"not through red\": \"not prop_2 U prop_1\"\n}\n\n3. *FINAL:* (not prop_2 U prop_1)"}
{"id": 2092, "sentence": ["enter", "green", "room", "via", "the", "non", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "prop_1", "via", "the", "non", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(entering the green room).\n- \"non red room\" means \"not red room,\" so \"red room\" is prop_2, and \"non red room\" is \"not prop_2.\"\n- \"via the non red room\" implies that before entering the green room (prop_1), the system must have been in the non red room (not prop_2).\n- Using temporal logic, this can be expressed as: globally, if eventually prop_1 (enter green room) happens, then before that, prop_1 is preceded by being in the non red room (not prop_2).\n- More precisely, \"enter green room\" (prop_1) occurs eventually, and until then, the system is in the non red room (not prop_2).\n- So, the formula is: F prop_1 and (not prop_2)"}
{"id": 1798, "sentence": ["go", "into", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 670, "sentence": ["to", "reach", "the", "blue", "room", "do", "not", "go", "through", "the", "red", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["to", "reach", "the", "prop_1", "do", "not", "go", "through", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(blue room) is true, so we use finally(prop_1). The phrase \"do not go through the red room\" means that at no point before reaching the blue room should prop_2 (red room) be true. This can be expressed as \"not prop_2 until prop_1\", i.e., (not prop_2) U prop_1.\n\n2. *Explanation dictionary* \u2013 {\"to reach the blue room\": \"finally(prop_1)\", \"do not go through the red room\": \"(not prop_2) U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 246, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 3005, "sentence": ["don", "t", "go", "through", "the", "green", "room", "towards", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["don", "t", "go", "through", "the", "prop_2", "towards", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* globally (not (F (prop_1 and F prop_2))) FINISH"}
{"id": 2390, "sentence": ["move", "to", "the", "red", "room", "then", "move", "to", "the", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "then", "move", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (not prop_2 U prop_1) FINISH"}
{"id": 2564, "sentence": ["the", "robot", "has", "to", "go", "through", "the", "blue", "or", "yellow", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "blue_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["the", "robot", "has", "to", "go", "through", "the", "prop_1", "or", "prop_2", "to", "get", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1 or prop_2)\" where prop_1 = \"blue room\" and prop_2 = \"yellow room\". The phrase \"to get to the green room\" means that eventually the robot will be in the green room, prop_3. The \"has to go through\" implies that before reaching the green room, the robot must have passed through the blue or yellow room. This can be expressed as: globally, if the green room is reached, then previously the blue or yellow room was visited. In LTL, this is expressed as: \"globally (prop_3 implies (not prop_3 until (prop_1 or prop_2)))"}
{"id": 2132, "sentence": ["move", "to", "the", "room", "that", "isn", "t", "yellow", "and", "then", "move", "into", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "room", "that", "isn", "t", "prop_2", "and", "then", "move", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(finally) reaching a room where \"not yellow\" holds. We represent \"yellow\" as prop_1, so \"not yellow\" is (not prop_1). Thus, \"move to the room that isn't yellow\" corresponds to F(not prop_1).\n   - \"move into the red room\": After the first part, move into the red room. Represent \"red\" as prop_2. Since this happens after the first, we use \"until\" or sequence. The phrase \"and then\" suggests that after reaching a non-yellow room, eventually reach a red room. So, after F(not prop_1), eventually F(prop_2).\n   Combining these, the overall formula is: F(not prop_1) and then F(prop_2). To express the sequence, we can say: F(not prop_1 and F(prop_2))"}
{"id": 2573, "sentence": ["go", "thru", "the", "blue", "or", "red", "box", "to", "get", "to", "the", "green", "box"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "thru", "the", "prop_2", "or", "prop_1", "box", "to", "get", "to", "the", "prop_3", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 3, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(finally) either the blue box or the red box is reached, so F (prop_1 or prop_2), where prop_1 = blue box, prop_2 = red box. The phrase \"to get to the green box\" means that eventually the green box is reached, so F prop_3. Since the command implies that the green box is reached after going through the blue or red box, we express that the green box is eventually reached and that before that, the blue or red box is reached. This can be captured by saying that the green box is eventually reached, and until then, the blue or red box is reached at some point. A suitable formula is: F prop_3 and (not prop_3) U (prop_1 or prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n  \"go thru the blue or red box\": \"(prop_1 or prop_2)\",\n  \"to get to the green box\": \"prop_3\",\n  \"eventually reach green box\": \"F prop_3\",\n  \"before green box, reach blue or red box\": \"(not prop_3)"}
{"id": 2268, "sentence": ["go", "to", "red", "room", "and", "then", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "and", "then", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (prop_1 and (prop_1 implies finally prop_2)) FINISH"}
{"id": 997, "sentence": ["navigate", "through", "blue", "to", "reach", "red"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["navigate", "through", "prop_1", "to", "reach", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) holds.\n- \"to reach red\": Eventually, the system must reach a state where \"red\" (prop_2) holds.\n- Combining these, the system must eventually reach \"red\" (prop_2), and until then, it must be in states where \"blue\" (prop_1) holds.\n\n2. *Explanation dictionary* \u2013\n{\n  \"blue\": \"prop_1\",\n  \"red\": \"prop_2\",\n  \"navigate through blue\": \"prop_1\",\n  \"to reach red\": \"F prop_2\",\n  \"navigate through blue to reach red\": \"prop_1 U prop_2\"\n}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 2189, "sentence": ["avoid", "the", "yellow", "rooms", "on", "your", "way", "into", "the", "blue", "rooms"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "rooms", "on", "your", "way", "into", "the", "prop_1", "rooms"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) should never be true, so globally not prop_1 (G not prop_1). The phrase \"on your way into the blue rooms\" means that eventually you reach the blue rooms (prop_2), so finally prop_2 (F prop_2). The avoidance of yellow rooms must hold until you reach the blue rooms, so (not prop_1) U prop_2.\n\n2. *Explanation dictionary* \u2013 {\"avoid the yellow rooms\": \"not prop_1\", \"on your way into the blue rooms\": \"F prop_2\", \"avoid yellow rooms until blue rooms\": \"(not prop_1) U prop_2\"}\n\n3. *FINAL:* (not prop_1)"}
{"id": 128, "sentence": ["go", "through", "the", "green", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F prop_1) and (F prop_2)"}
{"id": 1365, "sentence": ["go", "through", "the", "green", "room", "to", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1), and after that, eventually be in the red room (prop_2). This can be expressed as: eventually prop_1, and then eventually prop_2 after prop_1.\n\n2. *Explanation dictionary* \u2013 {\"green room\": \"prop_1\", \"red room\": \"prop_2\", \"go through the green room to the red room\": \"F (prop_1 and F prop_2)\"}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 1394, "sentence": ["go", "through", "the", "green", "room", "into", "the", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "into", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F prop_1). The phrase \"into the yellow room\" after that corresponds to \"eventually prop_2\" after prop_1 has occurred, which can be expressed as \"prop_1 until prop_2\" or more precisely, \"F (prop_1 and F prop_2)\". To ensure the order, we use \"F (prop_1 and F prop_2)\".\n\n2. *Explanation dictionary* \u2013 {\"go through the green room\": \"F prop_1\", \"into the yellow room\": \"F prop_2\", \"go through the green room into the yellow room\": \"F (prop_1 and F prop_2)\"}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 327, "sentence": ["go", "to", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) is true. The phrase \"go to\" implies that at some future point, the system should be in the \"red room.\" Therefore, we use the \"finally\" (F)"}
{"id": 366, "sentence": ["go", "to", "the", "green", "room", "but", "avoid", "using", "the", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "using", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G not prop_2) FINISH"}
{"id": 2975, "sentence": ["go", "to", "yellow", "area", "by", "avoiding", "green", "area"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "area", "by", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(where prop_1 = \"yellow area\").\n- \"by avoiding green area\" means that at all times before reaching the yellow area, the green area is not entered, represented as (not prop_2) U prop_1 (where prop_2 = \"green area\").\n- Combining these, the system must avoid green area until it reaches yellow area.\n\n2. *Explanation dictionary* \u2013\n{\"yellow area\": \"prop_1\", \"green area\": \"prop_2\", \"go to yellow area\": \"F prop_1\", \"avoiding green area\": \"(not prop_2) U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 3217, "sentence": ["go", "to", "the", "green", "room", "while", "avoiding", "the", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_2) is not visited. This is captured by the \"until\" operator with a negation of prop_2 until prop_1 becomes true.\n\n2. *Explanation dictionary* \u2013 {\"go to the green room\": \"prop_1\", \"avoiding the yellow room\": \"not prop_2\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 1286, "sentence": ["go", "to", "green", "room", "before", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "before", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (not prop_2) until prop_1 FINISH"}
{"id": 241, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 2331, "sentence": ["go", "to", "the", "blue", "room", "then", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and ( (not prop_2) U prop_1 ) FINISH"}
{"id": 2465, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 2352, "sentence": ["move", "to", "the", "yellow", "room", "move", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "move", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2 and (not prop_2 until prop_1)) FINISH"}
{"id": 3166, "sentence": ["go", "to", "the", "red", "room", "while", "avoiding", "the", "blue", "room", "on", "the", "way"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "blue", "prop_2", "the", "way"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (not(prop_2)) U (prop_1) FINISH"}
{"id": 1536, "sentence": ["move", "through", "the", "hallway", "to", "the", "yellow", "room", "but", "only", "if", "it", "takes", "you", "through", "a", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "the", "hallway", "to", "the", "prop_2", "but", "only", "if", "it", "takes", "you", "through", "a", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_2).\n- \"but only if it takes you through a green room\" means that reaching the yellow room should only happen if at some point before, a green room (prop_1) was visited.\n- So, the formula states: eventually (yellow room) and before that, eventually (green room).\n- This can be expressed as: (F prop_2) and (F prop_1), but since the command says \"only if\", the presence of green room is a precondition for reaching yellow room.\n- So, globally, if you reach yellow room, then previously you must have passed through green room.\n- Since LTL does not have past operators, we can express this as: \"if eventually yellow room, then eventually green room before that\".\n- Alternatively, we can say: \"yellow room is eventually reached only if green room is eventually reached\".\n- So, the formula is: (F prop_2) implies (F prop_1)"}
{"id": 12, "sentence": ["go", "through", "the", "blue", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (finally prop_1) and (prop_1 until prop_2) FINISH"}
{"id": 367, "sentence": ["travel", "to", "the", "green", "room", "through", "the", "room", "that", "isn", "t", "yellow"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["travel", "to", "the", "prop_1", "through", "the", "room", "that", "isn", "t", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(where prop_2 stands for \"yellow\"). Using temporal logic, we express that eventually (F) we reach the green room (prop_1), and until then (U), we are in a room that is not yellow (not prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n  \"travel to the green room\": \"F prop_1\",\n  \"through the room that isn't yellow\": \"not prop_2 U prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 621, "sentence": ["go", "to", "the", "blue", "room", "but", "do", "not", "use", "the", "red", "room", "to", "get", "there"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "use", "the", "red", "prop_2", "get", "there"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (G (not prop_2)) and (F prop_1) FINISH"}
{"id": 2183, "sentence": ["go", "to", "the", "blue", "room", "but", "do", "not", "enter", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "enter", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 2548, "sentence": ["go", "into", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F)"}
{"id": 1369, "sentence": ["pass", "through", "the", "green", "rom", "to", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "prop_1", "rom", "to", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (F (prop_1 and F prop_2)) FINISH"}
{"id": 236, "sentence": ["move", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(representing \"in the red room\") is true. Since the command implies that at some future point the system should be in the red room, we use the \"finally\" (F)"}
{"id": 1295, "sentence": ["go", "to", "red", "room", "through", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_2", "through", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_2 until prop_1) FINISH"}
{"id": 688, "sentence": ["do", "not", "take", "the", "green", "room", "to", "reach", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["do", "not", "take", "the", "prop_2", "to", "reach", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* globally (not (prop_1 until prop_2)) FINISH"}
{"id": 1578, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) holds true. Since the command implies that at some future point the agent should be in the yellow room, we use the \"finally\" (F)"}
{"id": 238, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 1636, "sentence": ["move", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 301, "sentence": ["move", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(representing \"in the red room\") holds true. Since the command is about eventually being in the red room, we use the \"finally\" (F)"}
{"id": 914, "sentence": ["go", "through", "blue", "room", "to", "get", "to", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "to", "get", "to", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (not F prop_2 or F (prop_1 and F prop_2)) FINISH"}
{"id": 1738, "sentence": ["move", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) holds. Since the command is about eventually being in the blue room, we use the \"finally\" (F) operator applied to prop_1.\n\n2. *Explanation dictionary* \u2013 {\"move to the blue room\": \"finally prop_1\"}\n\n3. *FINAL:* (finally prop_1)"}
{"id": 2701, "sentence": ["enter", "the", "blue", "room", "without", "crossing", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "crossing", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (not prop_2 U prop_1) FINISH"}
{"id": 2131, "sentence": ["move", "to", "the", "room", "that", "isn", "t", "blue", "and", "then", "move", "into", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "room", "that", "isn", "t", "prop_2", "and", "then", "move", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "F(not prop_1 and F(prop_2))"}
{"id": 977, "sentence": ["go", "to", "the", "blue", "room", "then", "to", "the", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_2) should be reached. This is captured by \"prop_1 until prop_2\" or more precisely, \"prop_1 holds until prop_2 happens,\" meaning the system stays in the blue room until it reaches the red room.\n\n2. *Explanation dictionary* \u2013 {\"go to the blue room\": \"prop_1\", \"then to the red room\": \"prop_1 U prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 1876, "sentence": ["move", "to", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(representing \"in blue room\") holds. Since the command is about moving to the blue room, the formula should express that eventually (finally)"}
{"id": 441, "sentence": ["move", "to", "the", "red", "room", "then", "move", "the", "chair", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "then", "move", "the", "chair", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(an atomic proposition indicating that the agent is in the red room).\n- \"move the chair to the blue room\" is represented by prop_2 (an atomic proposition indicating that the chair is in the blue room).\n- The word \"then\" implies that after prop_1 becomes true, eventually prop_2 should become true. This is captured by the \"until\" or \"finally\" operator. Here, we use \"finally\" to express that prop_2 eventually happens after prop_1.\n- To ensure the sequence, we say: first, prop_1 holds, and then eventually prop_2 holds. This can be expressed as: prop_1 holds now or in the future, and after that, prop_2 eventually holds.\n- A suitable formula is: F prop_1 and (prop_1 implies F prop_2), or more simply: F (prop_1 and F prop_2)"}
{"id": 753, "sentence": ["go", "to", "the", "orange", "room", "then", "push", "the", "chair", "from", "the", "orange", "room", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "orange", "room", "then", "push", "the", "chair", "from", "the", "orange", "prop_2", "into", "the", "green", "room"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1) U (prop_2) FINISH"}
{"id": 207, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 2095, "sentence": ["move", "to", "room", "not", "using", "blue", "into", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "room", "not", "using", "prop_2", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (G (not prop_2)) and (F prop_1) FINISH"}
{"id": 2350, "sentence": ["go", "into", "the", "red", "room", "then", "go", "into", "the", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "then", "go", "into", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1 U prop_2)"}
{"id": 1245, "sentence": ["go", "through", "the", "green", "room", "in", "to", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "in", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(finally) the system is in the green room (prop_1), and after that, eventually the system is in the red room (prop_2). This can be expressed as: eventually prop_1 holds, and after that, eventually prop_2 holds. Using temporal logic, this is: F (prop_1 and F prop_2).\n\n2. *Explanation dictionary* \u2013 {\"green room\": \"prop_1\", \"red room\": \"prop_2\", \"go through the green room into the red room\": \"F (prop_1 and F prop_2)\"}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 3257, "sentence": ["go", "to", "the", "green", "room", "without", "passing", "through", "the", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "without", "passing", "through", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (not prop_2) until prop_1 FINISH"}
{"id": 3147, "sentence": ["go", "to", "the", "red", "room", "or", "the", "yellow", "room", "and", "head", "straight", "away", "to", "the", "yellow", "room", "avoiding", "the", "blue", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "red", "room", "or", "the", "yellow", "room", "and", "head", "straight", "away", "to", "the", "prop_1", "avoiding", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(finally prop_1) or ( (globally (not prop_3)) and (finally prop_2) )"}
{"id": 2348, "sentence": ["go", "into", "the", "yellow", "room", "then", "go", "into", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "then", "go", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 and (not prop_2 until prop_2)) and F prop_2 FINISH"}
{"id": 3297, "sentence": ["move", "to", "the", "green", "room", "without", "entering", "a", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "without", "entering", "a", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(green room) holds, so we use finally(prop_1). The phrase \"without entering a yellow room\" means that at no point before reaching the green room should prop_2 (yellow room) be true. This is captured by globally(not(prop_2)) until finally(prop_1), or more precisely, \"not prop_2\" holds until prop_1 holds. So the formula is: (not prop_2) U prop_1.\n\n2. *Explanation dictionary* \u2013 {\"move to the green room\": \"F prop_1\", \"without entering a yellow room\": \"(not prop_2) U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 2946, "sentence": ["walk", "to", "the", "red", "room", "while", "avoiding", "the", "green", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["walk", "to", "the", "prop_1", "while", "avoiding", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (finally(prop_1) and globally(not(prop_2))) FINISH"}
{"id": 717, "sentence": ["do", "not", "enter", "the", "blue", "room", "through", "the", "green", "room", "but", "by", "the", "red", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["do", "not", "enter", "the", "blue", "room", "through", "the", "green", "room", "but", "by", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* globally (not prop_1 and prop_2) FINISH"}
{"id": 463, "sentence": ["move", "to", "the", "red", "room", "and", "move", "the", "red", "chair", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "red", "room", "and", "move", "the", "prop_1", "chair", "to", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally prop_1) and (finally prop_2) FINISH"}
{"id": 3164, "sentence": ["go", "to", "green", "area", "avoiding", "red", "area"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "area", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (G (not prop_2)) and (F prop_1) FINISH"}
{"id": 3118, "sentence": ["pass", "through", "the", "non", "red", "room", "to", "reach", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["pass", "through", "the", "non", "prop_2", "to", "reach", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(not prop_1, where prop_1 represents \"red room\") until we reach the green room (prop_2 represents \"green room\"). The phrase \"to reach the green room\" indicates that eventually the green room is reached. So the formula is: globally, not red room holds until green room is reached, and eventually green room is reached.\n\n2. *Explanation dictionary* \u2013\n{\n  \"non red room\": \"not prop_1\",\n  \"green room\": \"prop_2\",\n  \"pass through the non red room to reach the green room\": \"(not prop_1) U prop_2\"\n}\n\n3. *FINAL:* (not prop_1)"}
{"id": 605, "sentence": ["pass", "through", "the", "green", "or", "yellow", "room", "and", "enter", "into", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["pass", "through", "the", "prop_1", "or", "prop_2", "and", "enter", "into", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally (prop_1 or prop_2)) and (finally prop_3) FINISH"}
{"id": 1710, "sentence": ["move", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) holds true. Since the command is about eventually being in the yellow room, we use the \"finally\" (F)"}
{"id": 1919, "sentence": ["move", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(representing \"in the green room\") holds true. Since the command is about moving to a location, the temporal operator \"finally\" (F)"}
{"id": 2505, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) holds true. Since the command implies that at some future point the agent should be in the blue room, we use the \"finally\" (F)"}
{"id": 1423, "sentence": ["move", "through", "the", "red", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "the", "prop_1", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) and remain there until it reaches the blue room (prop_2). The phrase \"to the blue room\" means that eventually the system reaches the blue room. So, the system is in the red room until it reaches the blue room, and eventually it reaches the blue room.\n\n2. *Explanation dictionary* \u2013 {\"move through the red room\": \"prop_1 U prop_2\", \"to the blue room\": \"F prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 841, "sentence": ["the", "robot", "must", "move", "through", "the", "red", "or", "blue", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["the", "robot", "must", "move", "through", "the", "prop_1", "or", "prop_2", "to", "get", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 2335, "sentence": ["go", "to", "the", "blue", "room", "then", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (F prop_1 implies F prop_2) FINISH"}
{"id": 2452, "sentence": ["move", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) holds true. Since the command is about eventually being in the yellow room, we use the \"finally\" (F)"}
{"id": 1329, "sentence": ["go", "to", "the", "green", "room", "and", "then", "go", "to", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "then", "go", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F (prop_2)) and (prop_1 implies F prop_2) FINISH"}
{"id": 745, "sentence": ["go", "to", "the", "red", "room", "move", "behind", "the", "yellow", "object", "then", "move", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "move", "behind", "the", "yellow", "object", "then", "move", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "   - (prop_1 and F prop_2)"}
{"id": 2575, "sentence": ["go", "thru", "the", "yellow", "or", "red", "box", "to", "get", "to", "the", "blue", "box"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "thru", "the", "prop_2", "or", "prop_1", "box", "to", "get", "to", "the", "prop_3", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 3, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "  \"yellow or red box\": \"(prop_1 or prop_2)\","}
{"id": 2705, "sentence": ["avoid", "the", "red", "room", "and", "move", "to", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "and", "move", "to", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (globally (not prop_1)) and (finally prop_2) FINISH"}
{"id": 896, "sentence": ["go", "to", "the", "yellow", "room", "through", "the", "blue", "one"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "through", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1), but only after passing through the blue room (prop_2). This can be expressed as: eventually (F) prop_1, and before that, prop_2 must occur. Using until (U), we say that prop_2 holds until prop_1 is reached.\n\n2. *Explanation dictionary* \u2013 {\"go to the yellow room\": \"F prop_1\", \"through the blue one\": \"prop_2 U prop_1\"}\n\n3. *FINAL:* (prop_2 U prop_1)"}
{"id": 657, "sentence": ["go", "through", "the", "red", "and", "to", "the", "blue"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "and", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F prop_1) and (F prop_2)"}
{"id": 938, "sentence": ["go", "through", "blue", "to", "reach", "yellow"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "to", "reach", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(blue) must hold continuously until \"reach yellow\" (prop_2) becomes true. \"To reach yellow\" indicates that eventually prop_2 (yellow) will be true. So, the formula states that prop_1 holds until prop_2 occurs, and prop_2 eventually occurs.\n\n2. *Explanation dictionary* \u2013 {\"go through blue\": \"prop_1 U prop_2\", \"to reach yellow\": \"F prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 1585, "sentence": ["go", "in", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "in", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* F prop_1 FINISH"}
{"id": 844, "sentence": ["go", "through", "the", "red", "and", "blue", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "and", "prop_2", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "  \"go through the red and blue room to the green room\": \"F (prop_1 and prop_2) and F prop_3 and ((not prop_3) U (prop_1 and prop_2))\""}
{"id": 2568, "sentence": ["go", "through", "the", "yellow", "or", "blue", "room", "and", "enter", "the", "green", "room"], "tl": ["finally", "(", "(", "blue_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "and", "enter", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F (prop_1 or prop_2)) and (F prop_3) FINISH"}
{"id": 588, "sentence": ["enter", "the", "yellow", "or", "red", "room", "and", "proceed", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["enter", "the", "prop_2", "or", "prop_1", "and", "proceed", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* finally ( (prop_1 or prop_2) and finally prop_3 ) FINISH"}
{"id": 3100, "sentence": ["go", "to", "the", "green", "room", "but", "avoid", "the", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (finally prop_1) and (globally (not prop_2)) FINISH"}
{"id": 3347, "sentence": ["enter", "the", "yellow", "room", "through", "either", "the", "red", "or", "or", "blue", "rooms"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["enter", "the", "prop_3", "through", "either", "the", "red", "prop_1", "or", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 3, 3, 0, 0, 0, 1, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_2) or the blue room (prop_3).\n- Using temporal logic, this can be expressed as: eventually (F) prop_1 (enter yellow room), and before that, the system was in prop_2 or prop_3.\n- To express \"through either the red or blue rooms\" before entering the yellow room, we can say that prop_1 is true eventually, and until then, prop_2 or prop_3 must have been true at some point.\n- A suitable formula is: F prop_1 and (prop_2 or prop_3) U prop_1.\n\n2. *Explanation dictionary*:\n{\n  \"enter the yellow room\": \"prop_1\",\n  \"red room\": \"prop_2\",\n  \"blue room\": \"prop_3\",\n  \"through either the red or blue rooms\": \"(prop_2 or prop_3)"}
{"id": 282, "sentence": ["move", "to", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 2904, "sentence": ["go", "towards", "the", "blue", "room", "and", "avoid", "the", "green", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "towards", "the", "prop_1", "and", "avoid", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 2067, "sentence": ["the", "robot", "avoids", "blue", "to", "get", "to", "the", "green"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["the", "robot", "avoids", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (G (not prop_1)) and (F prop_2) FINISH"}
{"id": 2696, "sentence": ["go", "to", "the", "blue", "room", "but", "do", "not", "use", "the", "green", "room", "to", "get", "there"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "use", "the", "green", "prop_2", "get", "there"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and ((not prop_2) U prop_1) FINISH"}
{"id": 1896, "sentence": ["go", "to", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F)"}
{"id": 3323, "sentence": ["pass", "through", "either", "the", "blue", "or", "yellow", "room", "to", "reach", "the", "green", "room"], "tl": ["finally", "(", "(", "yellow_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["pass", "through", "either", "the", "prop_2", "or", "prop_1", "to", "reach", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(finally) either prop_1 (blue room) or prop_2 (yellow room) must be true. The phrase \"to reach the green room\" means that eventually (finally) prop_3 (green room) must be true. Since the command implies that passing through the blue or yellow room happens before reaching the green room, we express that the green room is eventually reached, and before that, the blue or yellow room is passed through. This can be captured by stating that eventually prop_3 holds, and until then, eventually prop_1 or prop_2 holds. More precisely, we want that prop_3 is eventually true, and before that, prop_1 or prop_2 is eventually true. This can be expressed as: (F (prop_1 or prop_2)) and (F prop_3) and (prop_3 implies that prop_1 or prop_2 happened before)"}
{"id": 1588, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 1229, "sentence": ["move", "to", "the", "blue", "room", "by", "going", "through", "the", "red", "room", "first"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_2", "by", "going", "through", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) and finally prop_2 FINISH"}
{"id": 946, "sentence": ["move", "through", "the", "blue", "room", "into", "the", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "the", "prop_1", "into", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(where prop_1 = \"in blue room\"). The phrase \"into the yellow room\" means \"eventually being in the yellow room,\" represented by F prop_2 (where prop_2 = \"in yellow room\"). Since the command implies moving through the blue room before entering the yellow room, we express that eventually the blue room is visited before eventually the yellow room is visited. This can be captured by \"F (prop_1 and F prop_2)\".\n\n2. *Explanation dictionary* \u2013 {\"move through the blue room\": \"F prop_1\", \"into the yellow room\": \"F prop_2\", \"move through the blue room into the yellow room\": \"F (prop_1 and F prop_2)\"}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 1838, "sentence": ["move", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(representing \"in the green room\") holds true. Since the command is about moving to a location, the temporal operator \"finally\" (F)"}
{"id": 3106, "sentence": ["enter", "the", "red", "room", "without", "passing", "the", "blue", "one"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "passing", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(not prop_2)"}
{"id": 1604, "sentence": ["move", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(representing \"in the green room\")"}
{"id": 425, "sentence": ["move", "to", "the", "red", "room", "get", "the", "chair", "move", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "get", "the", "chair", "move", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(moving to red room).\n   - \"get the chair\": represented as prop_2 (getting the chair).\n   - \"move to the blue room\": represented as prop_3 (moving to blue room).\n\n   The temporal order is that prop_1 happens first, then prop_2, then prop_3. Using \"until\" and \"finally\" operators, we specify that prop_1 holds until prop_2 eventually happens, and prop_2 holds until prop_3 eventually happens.\n\n2. *Explanation dictionary*:\n   {\n     \"move to the red room\": \"prop_1\",\n     \"get the chair\": \"prop_2\",\n     \"move to the blue room\": \"prop_3\"\n   }\n\n3. *FINAL:* (prop_1 U (prop_2 U prop_3))"}
{"id": 1225, "sentence": ["pass", "through", "the", "small", "green", "room", "to", "get", "to", "the", "large", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "small", "prop_1", "to", "get", "to", "the", "large", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) and finally prop_2 FINISH"}
{"id": 1072, "sentence": ["move", "to", "the", "yellow", "room", "and", "then", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "then", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 U prop_2) and (F prop_2) FINISH"}
{"id": 2403, "sentence": ["go", "to", "blue", "room", "go", "to", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "go", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(where prop_1 represents being in the blue room), and \"go to green room\" maps to finally prop_2 (where prop_2 represents being in the green room)"}
{"id": 232, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 963, "sentence": ["go", "to", "red", "rectangle", "via", "blue", "square"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_2", "rectangle", "via", "prop_1", "square"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_2 until prop_1) and finally prop_1 FINISH"}
{"id": 2398, "sentence": ["move", "to", "the", "red", "room", "and", "then", "move", "to", "the", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "then", "move", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (F prop_1 implies F prop_2) FINISH"}
{"id": 2620, "sentence": ["go", "green", "or", "yellow", "to", "red"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "prop_1", "or", "prop_2", "to", "prop_3"], "lifted_sentence_prop_ids": [0, 1, 0, 2, 0, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* ((prop_1 or prop_2) until prop_3) FINISH"}
{"id": 2683, "sentence": ["head", "to", "the", "yellow", "rectangular", "room", "without", "passing", "through", "a", "red", "square", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["head", "to", "the", "prop_1", "rectangular", "room", "without", "passing", "through", "a", "red", "square", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (globally (not prop_2)) and (finally prop_1) FINISH"}
{"id": 2400, "sentence": ["go", "to", "yellow", "room", "go", "to", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "go", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1 \u2192 F prop_2). Since we only have the operators listed, we can write: F prop_1 and (not prop_2 until prop_1) and F prop_2. But to keep it concise, we can write: F prop_1 and (F prop_2 after prop_1), which is: F prop_1 and (G (not prop_2) U prop_1)"}
{"id": 2896, "sentence": ["avoid", "red", "rooms", "while", "going", "to", "the", "green", "one"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "prop_2", "rooms", "while", "going", "to", "the", "prop_1", "one"], "lifted_sentence_prop_ids": [0, 2, 0, 0, 0, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) should never occur, so we use globally not prop_1: G (not prop_1). The phrase \"while going to the green one\" means that until we reach the green room (prop_2), we must avoid red rooms. So, \"going to the green one\" is represented by eventually reaching prop_2: F prop_2. The entire command means: \"Until we reach the green room (prop_2), always avoid red rooms (prop_1)\". This is expressed as: (not prop_1) holds globally until prop_2 occurs, i.e., (not prop_1) U prop_2.\n\n2. *Explanation dictionary* \u2013\n{\n  \"avoid red rooms\": \"not prop_1\",\n  \"while going to the green one\": \"(not prop_1) U prop_2\"\n}\n\n3. *FINAL:* (not prop_1)"}
{"id": 2445, "sentence": ["move", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) holds true. Since the command implies that at some future point the agent should be in the blue room, we use the \"finally\" (F)"}
{"id": 2416, "sentence": ["move", "to", "the", "yellow", "room", "and", "then", "move", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "then", "move", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 and (F prop_2)) FINISH"}
{"id": 7, "sentence": ["go", "through", "the", "blue", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_2), and before that, it must have passed through the blue room (prop_1). This means that the green room is eventually reached (F prop_2), and until then, the blue room must be true at some point (F prop_1), and the blue room occurs before the green room. To express \"go through the blue room to the green room,\" we can say: eventually prop_2 holds, and until prop_2 holds, prop_1 must hold at some point. More precisely, the blue room must be visited before the green room is reached. This can be expressed as: F prop_2 and (not prop_2) U prop_1, meaning that before reaching prop_2, prop_1 must occur.\n\n2. *Explanation dictionary* \u2013\n{\n  \"blue room\": \"prop_1\",\n  \"green room\": \"prop_2\",\n  \"go through the blue room to the green room\": \"(F prop_2) and ((not prop_2) U prop_1)"}
{"id": 3056, "sentence": ["enter", "the", "room", "that", "isnt", "green", "then", "go", "to", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "room", "that", "isnt", "prop_2", "then", "go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* F (prop_1 and not prop_2) implies F prop_3 FINISH"}
{"id": 1975, "sentence": ["go", "to", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 3102, "sentence": ["go", "to", "red", "without", "going", "through", "blue"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "without", "going", "through", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(finally) the proposition prop_1 (representing \"red\") becomes true: F prop_1. The phrase \"without going through blue\" means that until we reach red, blue (prop_2) must never be true. This is expressed as: not prop_2 U prop_1.\n\n2. *Explanation dictionary* \u2013 {\"go to red\": \"F prop_1\", \"without going through blue\": \"not prop_2 U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 782, "sentence": ["pass", "through", "the", "non", "blue", "room", "to", "reach", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["pass", "through", "the", "non", "prop_2", "to", "reach", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(not prop_1, assuming prop_1 = \"blue room\") until we reach the green room (prop_2 = \"green room\"). The phrase \"to reach the green room\" indicates that eventually the green room is reached. So the formula states: globally, it is always the case that we continue in non-blue rooms until finally the green room is reached.\n\n2. *Explanation dictionary* \u2013\n{\n  \"non blue room\": \"not prop_1\",\n  \"green room\": \"prop_2\",\n  \"pass through the non blue room to reach the green room\": \"(not prop_1) U prop_2\"\n}\n\n3. *FINAL:* (not prop_1)"}
{"id": 2642, "sentence": ["pass", "through", "the", "green", "or", "yellow", "room", "and", "enter", "into", "the", "red", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["pass", "through", "the", "prop_1", "or", "prop_2", "and", "enter", "into", "the", "red", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (finally (prop_1 or prop_2)) and (finally prop_3) FINISH"}
{"id": 678, "sentence": ["go", "through", "the", "room", "that", "is", "not", "green", "to", "get", "to", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "room", "that", "is", "not", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F (not prop_1)) and (F (prop_2)) FINISH"}
{"id": 540, "sentence": ["go", "in", "and", "then", "go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "in", "and", "then", "go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "  \"and then\": \"implies finally\""}
{"id": 1850, "sentence": ["go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F)"}
{"id": 77, "sentence": ["go", "through", "the", "door", "to", "the", "blue", "room", "and", "continue", "into", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "door", "to", "the", "prop_1", "and", "continue", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F) to indicate that both prop_1 and prop_2 should eventually occur.\n\n2. *Explanation dictionary* \u2013 {\"go through the door to the blue room\": \"F prop_1\", \"continue into the green room\": \"F prop_2\", \"and\": \"and\"}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 3280, "sentence": ["pass", "through", "the", "non", "blue", "room", "to", "enter", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["pass", "through", "the", "non", "prop_2", "to", "enter", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(where prop_1 stands for \"blue room\"). \"Enter the red room\" means eventually prop_2 (where prop_2 stands for \"red room\"). So, the formula states that globally, we stay in the non-blue room until we reach the red room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"non blue room\": \"not prop_1\",\n  \"red room\": \"prop_2\",\n  \"pass through the non blue room to enter the red room\": \"(not prop_1) U prop_2\"\n}\n\n3. *FINAL:* (not prop_1)"}
{"id": 1915, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 925, "sentence": ["travel", "through", "the", "blue", "square", "room", "to", "the", "large", "red", "rectangular", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["travel", "through", "the", "prop_1", "square", "room", "to", "the", "large", "red", "rectangular", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 U prop_2) FINISH"}
{"id": 920, "sentence": ["please", "go", "to", "the", "yellow", "room", "through", "the", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["please", "go", "to", "the", "prop_2", "through", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_2), but only after passing through the blue room (prop_1). This can be expressed as: eventually (F) the yellow room is reached, and until then, the blue room must be visited. Using the until operator (U), we say that the system stays in the blue room until it reaches the yellow room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"blue room\": \"prop_1\",\n  \"yellow room\": \"prop_2\",\n  \"go to the yellow room through the blue room\": \"prop_1 U prop_2\"\n}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 1687, "sentence": ["move", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) holds true. Since the command is about eventually being in the blue room, we use the \"finally\" (F) operator applied to prop_1.\n\n2. *Explanation dictionary* \u2013 {\"move to the blue room\": \"finally prop_1\"}\n\n3. *FINAL:* (finally prop_1)"}
{"id": 175, "sentence": ["go", "through", "the", "green", "room", "into", "the", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (prop_1 U prop_2) FINISH"}
{"id": 2421, "sentence": ["go", "to", "the", "red", "room", "go", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "go", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(finally) prop_1 will be true. After that, \"go to the blue room\" means that eventually prop_2 will be true. To express that prop_2 is reached after prop_1, we use the until operator: prop_1 must be true eventually, and until then, prop_2 is not true; after prop_1, prop_2 must eventually be true. This can be captured by: finally prop_1 and then finally prop_2 after prop_1. More precisely, we can write: finally prop_1 and (prop_1 implies finally prop_2). Alternatively, to ensure the order, we can write: finally (prop_1 and finally prop_2). But to be precise, we use: finally prop_1 and (not prop_2 until prop_1)"}
{"id": 903, "sentence": ["go", "to", "the", "red", "area", "through", "blue", "area"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "area", "through", "prop_1", "area"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_2) and (F prop_1) and (not prop_1 until prop_2) FINISH"}
{"id": 2940, "sentence": ["enter", "the", "blue", "room", "without", "entering", "a", "red", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "entering", "a", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 1806, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F)"}
{"id": 1559, "sentence": ["go", "through", "red", "rooms", "to", "get", "to", "the", "blue", "one"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "rooms", "to", "get", "to", "the", "prop_2", "one"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(G) the system is in red rooms (prop_1). The phrase \"to get to the blue one\" means eventually (F) the system reaches the blue room (prop_2). Combining these, the system must always be in red rooms until it eventually reaches the blue room.\n\n2. *Explanation dictionary* \u2013 {\"go through red rooms\": \"G prop_1\", \"to get to the blue one\": \"F prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 806, "sentence": ["go", "to", "the", "green", "room", "while", "avoiding", "the", "blue", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_2) is not visited. This is captured by \"not prop_2 until prop_1\". Since the command implies eventually reaching the green room, we use \"finally prop_1\". Combining these, we get \"not prop_2 until prop_1\" and \"finally prop_1\".\n\n2. *Explanation dictionary* \u2013 {\"go to the green room\": \"prop_1\", \"avoiding the blue room\": \"not prop_2\", \"while avoiding the blue room\": \"not prop_2 until prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 544, "sentence": ["go", "to", "the", "other", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "other", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F)"}
{"id": 2924, "sentence": ["go", "through", "the", "room", "that", "is", "not", "green", "to", "get", "to", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "room", "that", "is", "not", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (not prop_1) until prop_2 FINISH"}
{"id": 39, "sentence": ["the", "robot", "moves", "through", "the", "blue", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["the", "robot", "moves", "through", "the", "prop_1", "to", "get", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 271, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 1875, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F)"}
{"id": 1197, "sentence": ["go", "into", "the", "green", "room", "by", "way", "of", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_2", "by", "way", "of", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_2) and ((not prop_2) U prop_1) FINISH"}
{"id": 1107, "sentence": ["move", "to", "the", "large", "red", "room", "by", "passing", "through", "the", "small", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_2", "by", "passing", "through", "the", "small", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_2) and (prop_1 U prop_2) FIN"}
{"id": 1813, "sentence": ["enter", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["enter", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(an instruction to perform an action), it can be interpreted as requiring that eventually the action \"enter the blue room\" happens. Therefore, we use the \"finally\" (F)"}
{"id": 136, "sentence": ["move", "to", "blue", "room", "through", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "prop_2", "through", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_2), but only after passing through the green room (prop_1). This can be expressed as: eventually (F) the blue room is reached, and before that, the green room must be visited. The \"through the green room\" implies that the green room is visited at some point before reaching the blue room. So, the green room (prop_1) must occur before the blue room (prop_2). This can be captured by stating that the blue room is eventually reached, and until then, the green room must be visited at least once. Using until (U), we can say that the blue room is reached, and until then, the green room is true at some point. More precisely, the green room is eventually true before the blue room is reached. This can be expressed as: F prop_2 and prop_1 occurs before prop_2. One way to express \"prop_1 occurs before prop_2\" is: not prop_2 until prop_1. So the full formula is: (F prop_2) and (not prop_2 U prop_1)"}
{"id": 2115, "sentence": ["go", "to", "the", "blue", "room", "while", "avoiding", "the", "yellow", "rooms"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_2) are not visited. This is captured by the formula: (not prop_2) U prop_1.\n\n2. *Explanation dictionary* \u2013 {\"go to the blue room\": \"prop_1\", \"avoiding the yellow rooms\": \"not prop_2\", \"while avoiding the yellow rooms\": \"(not prop_2) U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 502, "sentence": ["first", "go", "to", "red", "room", "then", "go", "to", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["first", "go", "to", "prop_1", "then", "go", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(assuming prop_1 means \"in red room\"). The phrase \"then go to green room\" means that after being in the red room, eventually the system must be in the green room (prop_2). So the formula states: \"prop_1 until prop_2\" but since \"first\" means we start with prop_1 and then eventually prop_2, the correct temporal logic is \"prop_1 until prop_2\" or more precisely \"prop_1 holds until prop_2 becomes true\".\n\n2. *Explanation dictionary* \u2013 {\"first go to red room\": \"prop_1\", \"then go to green room\": \"prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 546, "sentence": ["move", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) holds true. Since the command is about eventually being in the green room, we use the \"finally\" (F)"}
{"id": 3014, "sentence": ["move", "to", "the", "red", "room", "avoiding", "the", "green", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "avoiding", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(not prop_2) until prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 3273, "sentence": ["move", "to", "the", "large", "green", "room", "while", "avoiding", "the", "small", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_1", "while", "avoiding", "the", "small", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (not(prop_2)) U prop_1 FINISH"}
{"id": 1923, "sentence": ["go", "to", "the", "yellow"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F)"}
{"id": 2091, "sentence": ["enter", "blue", "room", "via", "the", "non", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "prop_1", "via", "the", "non", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(finally) the system enters the blue room (prop_1), and before that, it must have passed through the non-yellow room (not prop_2). So, \"enter blue room\" maps to prop_1, \"yellow room\" maps to prop_2, and \"non yellow room\" maps to not prop_2. The phrase \"via the non yellow room\" implies that before entering the blue room, the system must have been in the non-yellow room. This can be expressed as: the system is eventually in the blue room, and until then, it must have been in the non-yellow room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"enter blue room\": \"prop_1\",\n  \"yellow room\": \"prop_2\",\n  \"non yellow room\": \"not prop_2\",\n  \"via the non yellow room\": \"not prop_2 U prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 2760, "sentence": ["go", "to", "the", "blue", "room", "while", "avoiding", "the", "green", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (globally (not prop_2)) and (finally prop_1) FINISH"}
{"id": 1933, "sentence": ["move", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) holds true. Since the command implies that at some future point the agent should be in the blue room, we use the \"finally\" (F)"}
{"id": 466, "sentence": ["go", "to", "the", "red", "room", "get", "the", "chair", "and", "take", "it", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "get", "the", "chair", "and", "take", "it", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "F prop_1 and F prop_2 and F prop_3"}
{"id": 1909, "sentence": ["move", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) holds true. Since the command is about eventually being in the blue room, we use the \"finally\" (F) operator applied to prop_1.\n\n2. *Explanation dictionary* \u2013 {\"move to the blue room\": \"finally prop_1\"}\n\n3. *FINAL:* (finally prop_1)"}
{"id": 1642, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 1267, "sentence": ["enter", "the", "red", "room", "through", "the", "green", "door", "only"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_2", "through", "the", "green", "prop_1", "only"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 1, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1), it must have done so through the green door (prop_2), and no other way. This can be interpreted as: globally, if the red room is entered, then it was preceded by passing through the green door, and no other entry is allowed. Since we only have temporal operators and propositions, we can express this as: globally, if prop_1 (enter red room) occurs, then previously (in the immediate previous step) prop_2 (through green door)"}
{"id": 3235, "sentence": ["travel", "to", "the", "yellow", "room", "without", "going", "through", "the", "blue", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["travel", "to", "the", "prop_1", "without", "going", "through", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (not(prop_2)) U (finally(prop_1)) FINISH"}
{"id": 1788, "sentence": ["move", "to", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F)"}
{"id": 437, "sentence": ["go", "to", "red", "room", "move", "chair", "to", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "move", "chair", "to", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F (prop_1 implies F prop_2)) FINISH"}
{"id": 79, "sentence": ["move", "toward", "the", "blue", "room", "then", "into", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "toward", "the", "prop_1", "then", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(U) captures the sequence: prop_1 holds until prop_2 becomes true.\n\n2. *Explanation dictionary* \u2013 {\"move toward the blue room\": \"prop_1\", \"then\": \"until\", \"move into the green room\": \"prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 3208, "sentence": ["enter", "the", "room", "that", "isn", "t", "blue", "and", "proceed", "through", "to", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "room", "that", "isn", "t", "prop_2", "and", "proceed", "through", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* G((not prop_1) implies F prop_2) FINISH"}
{"id": 2043, "sentence": ["go", "to", "blue", "area", "avoiding", "yellow", "area"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "area", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(not prop_2)"}
{"id": 2086, "sentence": ["go", "to", "the", "red", "room", "but", "do", "not", "enter", "the", "yellow", "room", "first"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "enter", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (G (not prop_2 U prop_1)) and (F prop_1) FINISH"}
{"id": 1456, "sentence": ["enter", "the", "yellow", "room", "and", "exit", "into", "the", "blue", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_1", "and", "exit", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (prop_1 implies F prop_2) FINISH"}
{"id": 1256, "sentence": ["move", "into", "the", "yellow", "room", "but", "only", "via", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "into", "the", "prop_2", "but", "only", "via", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_2) must be visited. This can be expressed as: eventually prop_1 holds, and until then, prop_2 must have occurred. More precisely, the yellow room is eventually reached (F prop_1), and before that, the green room must be visited (prop_2 occurs before prop_1). This can be captured by saying that prop_1 is eventually true, and until prop_1 becomes true, prop_2 must have been true at some point. Since LTL does not have past operators, we can express that prop_1 is eventually true, and that prop_1 can only be reached after prop_2 has occurred. One way is: prop_1 eventually holds, and until prop_1 holds, prop_2 must hold at some point. This can be expressed as: F prop_1 and (not prop_1)"}
{"id": 187, "sentence": ["move", "into", "the", "red", "room", "and", "stay", "on", "the", "first", "square", "you", "end", "up", "on"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "into", "the", "prop_1", "and", "stay", "on", "the", "first", "square", "you", "end", "up", "on"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "  \"and\": \"and\""}
{"id": 1745, "sentence": ["go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F)"}
{"id": 718, "sentence": ["go", "to", "the", "blue", "room", "and", "do", "not", "use", "the", "green", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "do", "not", "use", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (finally(prop_1) and globally(not(prop_2))) FINISH"}
{"id": 1137, "sentence": ["walk", "through", "the", "blue", "room", "until", "you", "reach", "the", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["walk", "through", "the", "prop_1", "until", "you", "reach", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 2850, "sentence": ["go", "to", "the", "green", "room", "but", "avoid", "the", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (finally(prop_1) and globally(not(prop_2))) FINISH"}
{"id": 3214, "sentence": ["go", "to", "the", "red", "room", "while", "avoiding", "the", "blue", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_2) must not be visited. This is captured by \"not prop_2\" holding globally until prop_1 becomes true.\n\n2. *Explanation dictionary* \u2013 {\"go to the red room\": \"prop_1\", \"avoiding the blue room\": \"not prop_2\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 45, "sentence": ["travel", "through", "the", "blue", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["travel", "through", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) and then moving on. The phrase \"to the green room\" means eventually reaching the green room (prop_2) after the blue room. So, we want to express that eventually prop_1 holds, and from that point, eventually prop_2 holds. This can be captured by stating that eventually prop_1 holds, and until then, prop_2 does not hold, and after prop_1, eventually prop_2 holds.\n\n2. *Explanation dictionary* \u2013 {\"travel through the blue room\": \"F prop_1\", \"to the green room\": \"F prop_2\", \"travel through the blue room to the green room\": \"F (prop_1 and F prop_2)\"}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 1407, "sentence": ["go", "through", "the", "red", "room", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_2) is reached. So, first eventually prop_1 holds, and then eventually prop_2 holds after that.\n\n2. *Explanation dictionary* \u2013 {\"go through the red room\": \"F prop_1\", \"into the blue room\": \"F prop_2\"}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 3069, "sentence": ["go", "towards", "the", "blue", "room", "and", "avoid", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "towards", "the", "prop_1", "and", "avoid", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 1816, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 850, "sentence": ["take", "the", "red", "or", "blue", "room", "into", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["take", "the", "prop_1", "or", "prop_2", "into", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 2, 2, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* finally ((prop_1 or prop_2) and prop_3) FINISH"}
{"id": 213, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 594, "sentence": ["go", "through", "yellow", "or", "red", "square", "to", "get", "to", "green", "square"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "prop_2", "or", "prop_1", "square", "to", "get", "to", "prop_3", "square"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1, 0, 0, 0, 0, 3, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* ((prop_1 or prop_2) U prop_3) and F prop_3 FINISH"}
{"id": 3249, "sentence": ["enter", "any", "room", "that", "isn", "t", "blue", "to", "end", "up", "in", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "any", "room", "that", "isn", "t", "prop_2", "to", "end", "up", "in", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F (not prop_1)) implies (F prop_2) FINISH"}
{"id": 1034, "sentence": ["travel", "through", "the", "blue", "room", "to", "the", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["travel", "through", "the", "prop_1", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) and remain there until it reaches the yellow room (prop_2). The phrase \"to the yellow room\" indicates that eventually the yellow room is reached. So, the formula states that eventually prop_2 (yellow room) is true, and until then, prop_1 (blue room) holds.\n\n2. *Explanation dictionary* \u2013 {\"travel through the blue room\": \"prop_1\", \"to the yellow room\": \"F prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 780, "sentence": ["avoid", "the", "blue", "room", "and", "move", "to", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "and", "move", "to", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (globally (not prop_1)) and (finally prop_2) FINISH"}
{"id": 2590, "sentence": ["enter", "the", "yellow", "or", "red", "room", "and", "proceed", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["enter", "the", "prop_2", "or", "prop_1", "and", "proceed", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* G ((prop_1 or prop_2) implies F prop_3) FINISH"}
{"id": 2897, "sentence": ["avoid", "red", "rooms", "while", "going", "to", "the", "yellow", "one"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "prop_2", "rooms", "while", "going", "to", "the", "prop_1", "one"], "lifted_sentence_prop_ids": [0, 2, 0, 0, 0, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) should never occur, so we use globally not prop_1: G (not prop_1). The phrase \"while going to the yellow one\" means that until we reach the yellow room (prop_2), we must avoid red rooms. Reaching the yellow room is eventually true: F prop_2. The \"while\" indicates that the avoidance of red rooms holds until the yellow room is reached, so we use (not prop_1) U prop_2.\n\n2. *Explanation dictionary* \u2013 {\"avoid red rooms\": \"not prop_1\", \"going to the yellow one\": \"prop_2\", \"while\": \"until\"}\n\n3. *FINAL:* (not prop_1)"}
{"id": 2675, "sentence": ["while", "avoiding", "the", "yellow", "room", "follow", "the", "shortest", "path", "to", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["while", "avoiding", "the", "prop_2", "follow", "the", "shortest", "path", "to", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (globally (not prop_1)) and (finally prop_2) FINISH"}
{"id": 1852, "sentence": ["i", "want", "you", "to", "go", "into", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["i", "want", "you", "to", "go", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(represented by prop_1) becomes true. Since the command expresses a desire for a future event, we use the \"finally\" (F)"}
{"id": 2761, "sentence": ["go", "to", "the", "blue", "room", "while", "avoiding", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(blue room). The phrase \"while avoiding the yellow room\" means that at all times until reaching the blue room, the yellow room (prop_2) is not visited. So, \"avoiding the yellow room\" maps to globally not prop_2 until prop_1 is reached.\n\n2. *Explanation dictionary* \u2013 {\"go to the blue room\": \"F prop_1\", \"avoiding the yellow room\": \"G (not prop_2)\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 876, "sentence": ["follow", "the", "path", "through", "the", "yellow", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["follow", "the", "path", "through", "the", "prop_1", "to", "get", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* ((prop_1 U prop_2) and F prop_2) FINISH"}
{"id": 2472, "sentence": ["move", "to", "the", "middle", "of", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "middle", "of", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 632, "sentence": ["got", "to", "blue", "room", "without", "going", "through", "red", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["got", "to", "prop_1", "without", "going", "through", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (not(prop_2)) U finally(prop_1) FINISH"}
{"id": 22, "sentence": ["go", "to", "the", "green", "room", "through", "blue"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "through", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and ((not prop_1) U prop_2) FINISH"}
{"id": 134, "sentence": ["move", "to", "reach", "the", "blue", "place", "by", "taking", "a", "path", "which", "has", "green", "colour", "and", "white", "colour", "in", "it", "while", "avoiding", "black", "yellow", "and", "red", "colour"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "reach", "the", "prop_2", "place", "by", "taking", "a", "path", "which", "has", "prop_1", "colour", "and", "white", "colour", "in", "it", "while", "avoiding", "black", "yellow", "and", "red", "colour"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1 = blue place reached).\n- \"path which has green colour and white colour in it\" means that along the path to the blue place, green and white colours must appear. This can be expressed as: until reaching prop_1, green (prop_2) and white (prop_3) colours must hold at some points. Since the path \"has\" these colours, we can require that eventually green and eventually white hold before reaching prop_1.\n- \"while avoiding black, yellow, and red colour\" means that black (prop_4), yellow (prop_5), and red (prop_6) colours never occur along the path until reaching the blue place. So globally until prop_1, not (black or yellow or red).\n\nPutting it all together:\n\n- F prop_1 (eventually reach blue place)\n- (F prop_2) and (F prop_3)"}
{"id": 387, "sentence": ["go", "into", "the", "room", "and", "find", "the", "chair", "then", "push", "it", "back", "into", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_2", "and", "find", "the", "chair", "then", "push", "it", "back", "into", "blue", "room"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F (prop_1 implies F prop_2)) and (F (prop_2 implies F prop_3)) FINISH"}
{"id": 995, "sentence": ["navigate", "through", "red", "to", "reach", "green"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["navigate", "through", "prop_1", "to", "reach", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) holds.\n- \"to reach green\": Eventually, the system must reach a state where \"green\" (prop_2) holds.\n- Combining these, the system must eventually reach green, and until it does, it must be in states where red holds.\n\n2. *Explanation dictionary* \u2013\n{\n  \"red\": \"prop_1\",\n  \"green\": \"prop_2\",\n  \"navigate through red\": \"prop_1 U prop_2\",\n  \"to reach green\": \"F prop_2\"\n}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 431, "sentence": ["go", "to", "the", "red", "room", "get", "the", "chair", "return", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "get", "the", "chair", "return", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and ( (not prop_1) U (F prop_2) ) and ( (not prop_2) U (F prop_3) ) FINISH"}
{"id": 3172, "sentence": ["go", "to", "the", "green", "room", "but", "do", "not", "take", "the", "red", "room", "to", "get", "there"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "take", "the", "red", "prop_2", "get", "there"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* globally(not(prop_2)) and finally(prop_1) FINISH"}
{"id": 1605, "sentence": ["move", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) holds true. Since the command implies that at some future point the system should be in the yellow room, we use the \"finally\" (F)"}
{"id": 1173, "sentence": ["move", "into", "the", "green", "room", "while", "being", "sure", "to", "pass", "through", "only", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "into", "the", "prop_2", "while", "being", "sure", "to", "pass", "through", "only", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (G (not prop_1 implies prop_2)) and (F prop_1) FINISH"}
{"id": 2993, "sentence": ["go", "through", "the", "room", "that", "isn", "t", "green", "and", "enter", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "room", "that", "isn", "t", "prop_2", "and", "enter", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F (not prop_1)) and (F prop_2) FINISH"}
{"id": 1332, "sentence": ["the", "robot", "goes", "through", "the", "yellow", "to", "get", "to", "blue"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["the", "robot", "goes", "through", "the", "prop_1", "to", "get", "to", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(representing \"robot goes through yellow\") must hold at some point before reaching the blue area. The phrase \"to get to blue\" means that eventually prop_2 (representing \"robot is at blue\") must be true. Combining these, we want that prop_1 holds until prop_2 becomes true.\n\n2. *Explanation dictionary* \u2013 {\"the robot goes through the yellow\": \"prop_1\", \"to get to blue\": \"F prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 2236, "sentence": ["go", "through", "the", "yellow", "or", "red", "room", "and", "enter", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "and", "enter", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (finally (prop_1 or prop_2)) and (finally prop_3) FINISH"}
{"id": 1670, "sentence": ["go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F)"}
{"id": 1204, "sentence": ["pass", "through", "the", "small", "yellow", "room", "to", "get", "to", "the", "large", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "small", "prop_1", "to", "get", "to", "the", "large", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_2), one must pass through the small yellow room (prop_1) first. This means that eventually (F) the large green room (prop_2) is reached, and until (U) that happens, the small yellow room (prop_1) must be true (passed through).\n\n2. *Explanation dictionary* \u2013 {\"small yellow room\": \"prop_1\", \"large green room\": \"prop_2\", \"pass through small yellow room to get to large green room\": \"prop_1 U prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 872, "sentence": ["go", "through", "yellow", "room", "to", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 1872, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F)"}
{"id": 1547, "sentence": ["go", "through", "the", "red", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "get", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) and finally prop_2 FINISH"}
{"id": 2758, "sentence": ["go", "to", "the", "green", "room", "while", "avoiding", "the", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (not prop_2) until prop_1 FINISH"}
{"id": 376, "sentence": ["go", "to", "the", "green", "room", "but", "avoid", "going", "through", "the", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "going", "through", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 2814, "sentence": ["go", "to", "the", "green", "room", "but", "do", "not", "use", "the", "red", "room", "to", "get", "there"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "use", "the", "red", "prop_2", "get", "there"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_1 implies not prop_2)) FINISH"}
{"id": 1182, "sentence": ["pass", "through", "the", "blue", "room", "to", "reach", "the", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "prop_1", "to", "reach", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_2) and (F prop_1 and (not prop_2 U prop_1)) FINISH"}
{"id": 3013, "sentence": ["going", "through", "the", "red", "room", "or", "the", "yellow", "room", "straight", "to", "the", "blue", "room", "avoiding", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["going", "through", "the", "red", "room", "or", "the", "yellow", "room", "straight", "to", "the", "prop_1", "avoiding", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1 or prop_2), where prop_1 = \"in red room\", prop_2 = \"in yellow room\".\n- \"straight to the blue room\" implies eventually reaching the blue room without detours, so \"finally prop_3\" where prop_3 = \"in blue room\".\n- \"avoiding the yellow room\" means never entering the yellow room, so \"globally not prop_2\".\n\nCombining these:\n\n- The path involves going through red or yellow room: F (prop_1 or prop_2)\n- Then eventually reaching blue room: F prop_3\n- While always avoiding yellow room: G not prop_2\n\nBut since \"or the yellow room\" is in conflict with \"avoiding the yellow room\", the phrase likely means \"going through the red room or the yellow room straight to the blue room, avoiding the yellow room\" means \"going through the red room (or the yellow room)"}
{"id": 2967, "sentence": ["go", "to", "the", "yellow", "room", "while", "avoiding", "the", "green", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_2) must not be visited. This is captured by \"not prop_2\" holding globally until prop_1 becomes true.\n\n2. *Explanation dictionary* \u2013 {\"go to the yellow room\": \"prop_1\", \"avoiding the green room\": \"not prop_2\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 318, "sentence": ["move", "into", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 2343, "sentence": ["move", "to", "the", "blue", "room", "and", "move", "into", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "move", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "     \"and\": \"F prop_1 and F prop_2\""}
{"id": 3334, "sentence": ["go", "through", "the", "red", "or", "the", "blue", "room", "to", "get", "to", "the", "yellow", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "the", "prop_2", "to", "get", "to", "the", "yellow", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "  \"red or blue room\": \"(prop_1 or prop_2)\","}
{"id": 2774, "sentence": ["go", "to", "the", "green", "room", "but", "do", "not", "pass", "through", "the", "red", "room", "on", "your", "way"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "pass", "through", "the", "red", "prop_2", "your", "way"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (not(prop_2)) U ("}
{"id": 3174, "sentence": ["avoiding", "red", "navigate", "to", "green"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoiding", "prop_2", "navigate", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 2, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (G (not prop_1)) and (F prop_2) FINISH"}
{"id": 2280, "sentence": ["go", "to", "the", "red", "room", "go", "to", "the", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "go", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F (prop_2 and (not prop_2 U prop_1))) FINISH"}
{"id": 2156, "sentence": ["go", "to", "the", "green", "room", "but", "avoid", "the", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 456, "sentence": ["go", "to", "the", "chair", "in", "the", "red", "room", "and", "then", "push", "the", "chair", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "chair", "in", "the", "prop_1", "and", "then", "push", "the", "chair", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2"}
{"id": 772, "sentence": ["move", "to", "the", "red", "room", "and", "then", "push", "the", "object", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "then", "push", "the", "object", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(e.g., the proposition that the agent is in the red room).\n- \"push the object into the green room\" is represented by prop_2 (e.g., the proposition that the object is in the green room)"}
{"id": 2996, "sentence": ["drive", "through", "the", "room", "that", "is", "not", "green", "and", "enter", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["drive", "through", "the", "room", "that", "is", "not", "prop_2", "and", "enter", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (finally (not prop_1))"}
{"id": 142, "sentence": ["go", "through", "the", "green", "room", "to", "reach", "the", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "reach", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F prop_blue), and before that, the green room must be passed through. This means that until the blue room is reached, the green room must be true at some point. We can express this as: eventually the blue room (F prop_2), and until then, the green room (prop_1) must occur. More precisely, the green room must be visited before the blue room is reached, so we can say: F prop_2 and prop_1 U prop_2.\n\n2. *Explanation dictionary* \u2013 {\"green room\": \"prop_1\", \"blue room\": \"prop_2\", \"reach the blue room eventually\": \"F prop_2\", \"go through the green room before blue room\": \"prop_1 U prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 260, "sentence": ["move", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 2818, "sentence": ["go", "through", "the", "room", "that", "isn", "t", "green", "and", "enter", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "room", "that", "isn", "t", "prop_2", "and", "enter", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F (not prop_1)) and (F prop_2) FINISH"}
{"id": 115, "sentence": ["go", "via", "green", "color", "path", "to", "reach", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "via", "prop_1", "color", "path", "to", "reach", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(representing \"green color path\").\n- \"to reach blue room\" means that eventually the system should reach a state where prop_2 (representing \"blue room\") holds.\n- The phrase \"via green color path\" implies that before reaching the blue room, the system must be on the green color path.\n- This can be captured by saying: eventually prop_2 holds, and until then, prop_1 holds continuously.\n- Using temporal logic, this is expressed as: F prop_2 and prop_1 U prop_2.\n\n2. *Explanation dictionary* \u2013\n{\n  \"green color path\": \"prop_1\",\n  \"blue room\": \"prop_2\",\n  \"go via green color path to reach blue room\": \"(prop_1 U prop_2) and F prop_2\"\n}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 3333, "sentence": ["go", "through", "the", "red", "or", "the", "yellow", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "the", "prop_2", "to", "get", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* F (prop_3 and F (prop_1 or prop_2)) FINISH"}
{"id": 3205, "sentence": ["go", "to", "green", "area", "by", "avoiding", "yellow", "area"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "area", "by", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(where prop_1 = \"green area\").\n- \"by avoiding yellow area\" means that at all times before reaching the green area, the yellow area is not entered. This can be expressed as \"yellow area\" (prop_2) is never true until \"green area\" is reached, i.e., not prop_2 U prop_1.\n- Combining these, the system must avoid yellow area until it reaches green area, and eventually reach green area.\n\n2. *Explanation dictionary* \u2013\n{\n  \"green area\": \"prop_1\",\n  \"yellow area\": \"prop_2\",\n  \"go to green area\": \"F prop_1\",\n  \"avoiding yellow area\": \"not prop_2\",\n  \"avoiding yellow area until green area\": \"not prop_2 U prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 1741, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F)"}
{"id": 989, "sentence": ["go", "to", "large", "green", "room", "through", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "large", "prop_2", "through", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* finally (prop_1 and finally prop_2) FINISH"}
{"id": 2243, "sentence": ["go", "through", "the", "green", "or", "the", "yellow", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "the", "prop_2", "to", "get", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_3). To get there, one must go through either the green room (prop_1) or the yellow room (prop_2). This means that before eventually reaching the blue room, the system must have passed through either the green or yellow room. We can express this as: eventually (prop_3) and before that, either prop_1 or prop_2 must have occurred. Using temporal logic, this can be captured by stating that prop_3 eventually holds (F prop_3), and that prop_3 is preceded by prop_1 or prop_2. Since LTL does not have past operators, we can express the requirement as: eventually prop_3, and globally, if prop_3 has not yet occurred, then eventually prop_1 or prop_2 must occur before prop_3. Alternatively, a simpler approach is to say: eventually prop_3, and before that, eventually prop_1 or prop_2. So the formula is: (F prop_3) and (F prop_1 or F prop_2)"}
{"id": 1080, "sentence": ["go", "to", "the", "yellow", "room", "then", "to", "then", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "to", "then", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), and after that, eventually reach the green room (prop_2). This can be expressed as \"eventually prop_1\" followed by \"eventually prop_2\" after prop_1 has occurred. Using temporal logic, this is captured by \"F (prop_1 and F prop_2)\".\n\n2. *Explanation dictionary* \u2013 {\"go to the yellow room\": \"prop_1\", \"then to the green room\": \"F prop_2\"}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 1550, "sentence": ["go", "through", "the", "green", "room", "to", "get", "to", "the", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "get", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1). The phrase \"to get to the yellow room\" means that after going through the green room, the system must eventually reach the yellow room (prop_2). So, the formula states that eventually prop_1 holds, and from that point on, eventually prop_2 holds.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go through the green room\": \"F prop_1\",\n  \"to get to the yellow room\": \"F prop_2\"\n}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 2059, "sentence": ["the", "robot", "is", "to", "move", "towards", "the", "blue", "room", "without", "entering", "a", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["the", "robot", "is", "to", "move", "towards", "the", "prop_1", "without", "entering", "a", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G not prop_2) FINISH"}
{"id": 170, "sentence": ["go", "through", "the", "green", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "get", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) where prop_1 represents \"in the green room\". The phrase \"to get to the blue room\" means that after going through the green room, eventually the blue room is reached, so we use finally(prop_2) where prop_2 represents \"in the blue room\". The entire command implies that the blue room is eventually reached, but only after the green room has been visited. This can be expressed as: eventually (green room) and then eventually (blue room) after that. In LTL, this can be captured by: finally(prop_1) and finally(prop_2) and globally (not prop_2 implies not prop_1 until prop_2), but since the command is about going through green room to get to blue room, a simpler way is: finally(prop_1) and finally(prop_2) and prop_1 happens before prop_2. To express \"prop_1 happens before prop_2\", we can say: not prop_2 until prop_1, and then finally prop_2. So the formula is: (not prop_2)"}
{"id": 2070, "sentence": ["avoid", "red", "area", "on", "way", "to", "green", "area", "each", "time"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "prop_2", "area", "on", "way", "to", "prop_1", "area", "each", "time"], "lifted_sentence_prop_ids": [0, 2, 0, 0, 0, 0, 1, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_2), we must not be in the red area (prop_1).\n\n2. *Explanation dictionary* \u2013\n{\n  \"red area\": \"prop_1\",\n  \"green area\": \"prop_2\",\n  \"on way to green area\": \"not prop_2 U prop_2\",\n  \"avoid red area on way to green area each time\": \"G (not prop_1 U prop_2)\"\n}\n\n3. *FINAL:* G (not prop_1 U prop_2)"}
{"id": 646, "sentence": ["go", "only", "through", "rooms", "that", "are", "not", "red", "to", "get", "to", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "only", "through", "rooms", "that", "are", "not", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_2), the system only passes through rooms that are not red (not prop_1). This means that until the blue room is reached, it is always true that the current room is not red.\n\n2. *Explanation dictionary* \u2013 {\"not red\": \"not prop_1\", \"blue room\": \"prop_2\", \"only through rooms that are not red to get to the blue room\": \"not prop_1 U prop_2\"}\n\n3. *FINAL:* (not prop_1)"}
{"id": 126, "sentence": ["go", "to", "green", "room", "then", "to", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "then", "to", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* ((not prop_2) U prop_1) and (prop_1 \u2192 F prop_2) FINISH"}
{"id": 2551, "sentence": ["go", "from", "the", "blue", "room", "to", "the", "red", "room", "then", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "from", "the", "blue", "room", "to", "the", "red", "room", "then", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1 and F (prop_2 and F prop_3))"}
{"id": 1186, "sentence": ["the", "robot", "goes", "through", "the", "blue", "to", "get", "to", "the", "yellow"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["the", "robot", "goes", "through", "the", "prop_1", "to", "get", "to", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1 U prop_2)"}
{"id": 2935, "sentence": ["enter", "the", "yellow", "room", "without", "crossing", "the", "green", "one"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "crossing", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* ((not prop_2) U prop_1) FINISH"}
{"id": 3200, "sentence": ["get", "to", "the", "green", "area", "by", "avoiding", "the", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["get", "to", "the", "prop_1", "area", "by", "avoiding", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* globally(not(prop_2)) and finally(prop_1) FINISH"}
{"id": 1592, "sentence": ["move", "into", "the", "green", "room", "and", "stay", "on", "the", "first", "square", "you", "end", "up", "on"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "into", "the", "prop_1", "and", "stay", "on", "the", "first", "square", "you", "end", "up", "on"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(finally) prop_1, where prop_1 stands for \"being in the green room\".\n- \"stay on the first square you end up on\": After reaching the green room (prop_1), the agent should remain on the same square forever. We represent the first square as prop_2, and \"stay on\" means globally prop_2 holds after prop_1 is reached.\n\nSince the agent moves into the green room eventually (F prop_1), and from that point on, it stays on the first square (G prop_2), we combine these as: F prop_1 and after that G prop_2.\n\nHowever, to express \"stay on the first square you end up on\", we need to capture that once prop_1 is true, prop_2 holds globally from that point on.\n\nOne way is: F (prop_1 and G prop_2)"}
{"id": 575, "sentence": ["go", "from", "the", "blue", "room", "to", "the", "red", "room", "then", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "from", "the", "blue", "room", "to", "the", "red", "room", "then", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 and F prop_2) and (prop_2 implies F prop_3)"}
{"id": 1544, "sentence": ["go", "through", "the", "yellow", "room", "and", "into", "the", "blue", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "and", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1 and F prop_2)"}
{"id": 1181, "sentence": ["pass", "through", "the", "blue", "room", "to", "reach", "the", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "prop_1", "to", "reach", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and ( (not prop_2) U prop_1 ) and (F prop_2) FINISH"}
{"id": 2298, "sentence": ["go", "to", "the", "yellow", "room", "and", "then", "go", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "then", "go", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1) until (prop_2) and finally (prop_2) FINISH"}
{"id": 1901, "sentence": ["go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F)"}
{"id": 2652, "sentence": ["go", "to", "red", "room", "through", "green", "or", "yellow", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "to", "prop_3", "through", "green", "prop_1", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 3, 3, 0, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and ((prop_2 or prop_3) U prop_1) FINISH"}
{"id": 2354, "sentence": ["move", "to", "the", "red", "room", "move", "to", "the", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "move", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 implies F prop_2) FINISH"}
{"id": 1455, "sentence": ["enter", "the", "red", "room", "and", "exit", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_1", "and", "exit", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (prop_1 U prop_2) FINISH"}
