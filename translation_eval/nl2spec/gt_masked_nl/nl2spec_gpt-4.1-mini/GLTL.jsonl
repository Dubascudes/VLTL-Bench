{"id": 1738, "sentence": ["move", "the", "robot", "from", "the", "red", "room", "to", "the", "yellow", "or", "red", "room", "to", "the", "big", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "the", "robot", "from", "the", "red", "room", "to", "the", "prop_2", "or", "prop_1", "to", "the", "big", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 and F ( (prop_2 or prop_1"}
{"id": 2969, "sentence": ["move", "to", "the", "yellow", "room", "and", "move", "into", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "move", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "     \"and\": \"until\""}
{"id": 5313, "sentence": ["move", "through", "the", "red", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* F (prop_1 and (not prop_2) U prop_2) FINISH"}
{"id": 5588, "sentence": ["the", "robot", "has", "to", "go", "through", "the", "red", "or", "yellow", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["the", "robot", "has", "to", "go", "through", "the", "prop_1", "or", "prop_2", "to", "get", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F) with (prop_1 or prop_2) where prop_1 = red room, prop_2 = yellow room. The phrase \"to get to the blue room\" means that eventually the robot will be in the blue room, so we use finally (F) prop_3 where prop_3 = blue room. The word \"to\" indicates that the first event (going through red or yellow room) must happen before the second event (getting to blue room). This is captured by the \"until\" operator: the robot is not in the blue room until it has gone through the red or yellow room. So the formula is: (F (prop_1 or prop_2)) and (F prop_3) and ((not prop_3) U (prop_1 or prop_2)).\n\n2. *Explanation dictionary* \u2013\n{\n  \"go through the red or yellow room\": \"F (prop_1 or prop_2)"}
{"id": 3333, "sentence": ["move", "to", "the", "yellow", "room", "without", "using", "the", "blue", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "without", "using", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (not(prop_2) U prop_1) FINISH"}
{"id": 8424, "sentence": ["get", "to", "the", "red", "rectangle", "but", "do", "not", "go", "through", "the", "yellow", "square"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["get", "to", "the", "prop_1", "rectangle", "but", "do", "not", "go", "through", "the", "prop_2", "square"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(finally) the proposition prop_1 (representing \"at the red rectangle\") should be true: F prop_1. The phrase \"but do not go through the yellow square\" means that at no point before reaching the red rectangle should the proposition prop_2 (representing \"at the yellow square\") be true. This can be expressed as \"prop_2 is never true until prop_1 is true,\" i.e., not prop_2 until prop_1, or equivalently, (not prop_2) U prop_1.\n\n2. *Explanation dictionary* \u2013 {\"get to the red rectangle\": \"F prop_1\", \"do not go through the yellow square\": \"(not prop_2) U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 10110, "sentence": ["cross", "the", "blue", "room", "only", "to", "reach", "the", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["cross", "the", "prop_1", "only", "to", "reach", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 7651, "sentence": ["to", "reach", "the", "red", "room", "do", "not", "go", "through", "the", "yellow", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["to", "reach", "the", "prop_1", "do", "not", "go", "through", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "  \"not prop_2 before prop_1\": \"not prop_2 U prop_1\""}
{"id": 2565, "sentence": ["travel", "to", "the", "green", "room", "but", "do", "not", "go", "through", "the", "blue", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["travel", "to", "the", "prop_1", "but", "do", "not", "go", "through", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (not (prop_2 U prop_1)) FINISH"}
{"id": 6268, "sentence": ["move", "to", "the", "blue", "room", "without", "entering", "a", "green", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "without", "entering", "a", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) where prop_1 stands for \"in blue room\". The phrase \"without entering a green room\" means that at no point before reaching the blue room should the green room be entered, so globally(not(prop_2)) until finally(prop_1), where prop_2 stands for \"in green room\".\n\n2. *Explanation dictionary* \u2013 {\"move to the blue room\": \"F prop_1\", \"without entering a green room\": \"G (not prop_2) U F prop_1\"}\n\n3. *FINAL:* (G (not prop_2) U F prop_1)"}
{"id": 6034, "sentence": ["got", "to", "green", "room", "without", "going", "through", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["got", "to", "prop_1", "without", "going", "through", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(green room) becomes true, so we use finally(prop_1). The phrase \"without going through red room\" means that prop_2 (red room) is never true before reaching prop_1, so prop_2 must not occur until prop_1 is reached, which is expressed as (not prop_2) until prop_1.\n\n2. *Explanation dictionary* \u2013 {\"got to green room\": \"F prop_1\", \"without going through red room\": \"(not prop_2) U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 10258, "sentence": ["go", "to", "red", "but", "not", "through", "blue"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "but", "not", "through", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (not prop_2) until prop_1 FINISH"}
{"id": 4407, "sentence": ["go", "to", "the", "green", "room", "but", "avoid", "going", "through", "the", "blue", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "going", "through", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* globally(not(prop_2)) and finally(prop_1) FINISH"}
{"id": 8241, "sentence": ["leave", "the", "blue", "room", "and", "enter", "the", "red", "room", "and", "go", "behind", "the", "object", "and", "push", "it", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["leave", "the", "blue", "room", "and", "enter", "the", "prop_1", "and", "go", "behind", "the", "object", "and", "push", "it", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "- prop_1 holds until prop_2 happens,"}
{"id": 5587, "sentence": ["enter", "into", "the", "room", "that", "is", "not", "green", "and", "continue", "through", "that", "room", "into", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "into", "the", "room", "that", "is", "not", "prop_2", "and", "continue", "through", "that", "room", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F (prop_1 and not prop_2)) and (F prop_3) FINISH"}
{"id": 10066, "sentence": ["reach", "blue", "room", "without", "going", "through", "green", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["reach", "prop_1", "without", "going", "through", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(represented by prop_1), and at no point before reaching the blue room should the system be in the green room (represented by prop_2). This can be expressed as: \"Eventually prop_1 holds, and until then prop_2 never holds.\" Using temporal logic, this is: (not prop_2) U prop_1.\n\n2. *Explanation dictionary* \u2013 {\"reach blue room\": \"F prop_1\", \"without going through green room\": \"not prop_2 until prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 10031, "sentence": ["go", "to", "the", "blue", "room", "without", "passing", "through", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "without", "passing", "through", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(blue room). The phrase \"without passing through the yellow room\" means that at no point before reaching the blue room should prop_2 (yellow room) be true. This can be expressed by stating that globally, until we reach the blue room, the yellow room is not visited.\n\n2. *Explanation dictionary* \u2013 {\"go to the blue room\": \"F prop_1\", \"without passing through the yellow room\": \"G (not prop_2) U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 9653, "sentence": ["pass", "through", "the", "blue", "room", "to", "reach", "the", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "prop_1", "to", "reach", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_2) and (F prop_1 and (not prop_2 U prop_1)) FINISH"}
{"id": 3194, "sentence": ["go", "to", "the", "red", "area", "through", "blue", "area"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "area", "through", "prop_1", "area"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1), but before that, it must pass through the blue area (prop_2). This can be expressed as: the red area is eventually reached (F prop_1), and until then, the blue area is visited (prop_2). More precisely, the red area is reached eventually, and before that, the system must be in the blue area at some point. This can be captured by saying: \"prop_2 until prop_1\" (prop_2 U prop_1), which means prop_2 holds until prop_1 becomes true. Since the command says \"through blue area,\" it implies that blue area is visited before red area. So the formula is: F prop_1 and prop_2 U prop_1.\n\n2. *Explanation dictionary* \u2013\n{\n  \"red area\": \"prop_1\",\n  \"blue area\": \"prop_2\",\n  \"go to the red area\": \"F prop_1\",\n  \"through blue area\": \"prop_2 U prop_1\"\n}\n\n3. *FINAL:* (F prop_1)"}
{"id": 2393, "sentence": ["move", "to", "yellow", "room", "but", "avoid", "the", "red", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "prop_1", "but", "avoid", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 10465, "sentence": ["only", "go", "through", "rooms", "that", "are", "not", "yellow", "to", "get", "to", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["only", "go", "through", "rooms", "that", "are", "not", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (globally (prop_1 implies (not prop_2))) and (finally prop_3) FINISH"}
{"id": 8907, "sentence": ["go", "through", "yellow", "to", "get", "to", "blue"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "to", "get", "to", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_2) and (not prop_2 U prop_1) FINISH"}
{"id": 8633, "sentence": ["enter", "the", "room", "that", "isnt", "red", "then", "go", "to", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "room", "that", "isnt", "prop_2", "then", "go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F not prop_1), and after that, eventually enter the blue room (F prop_2). To express the ordering, we can say: \"Eventually (not prop_1) holds, and from that point on, eventually prop_2 holds.\" Using until and finally operators, we can write: (F (not prop_1)) and ( (not prop_1) U prop_2 ), or more simply: (F (not prop_1)) and (F prop_2)"}
{"id": 7723, "sentence": ["enter", "blue", "room", "via", "the", "non", "green", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "prop_1", "via", "the", "non", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(entering the blue room).\n- \"non green room\" corresponds to not prop_2 (not being in the green room).\n- \"via the non green room\" means that before entering the blue room, the system must have been in the non green room.\n- Using temporal logic, this can be expressed as: eventually (F) prop_1 (enter blue room), and until that happens, globally (G) the system is in the non green room (not prop_2).\n\n2. *Explanation dictionary*:\n{\"enter blue room\": \"prop_1\", \"non green room\": \"not prop_2\", \"via the non green room\": \"not prop_2 U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 5097, "sentence": ["travel", "to", "the", "blue", "room", "but", "do", "not", "go", "through", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["travel", "to", "the", "prop_1", "but", "do", "not", "go", "through", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* globally(not(prop_2)) and finally(prop_1) FINISH"}
{"id": 2391, "sentence": ["go", "to", "the", "chair", "in", "the", "red", "room", "and", "then", "push", "the", "chair", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "chair", "in", "the", "prop_1", "and", "then", "push", "the", "chair", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "This is captured by: prop_1 and (prop_1 until prop_2), or more simply, prop_1 and finally prop_2 after prop_1."}
{"id": 6240, "sentence": ["go", "to", "blue", "room", "through", "green", "or", "red", "room"], "tl": ["finally", "(", "(", "green_room", "or", "red_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "to", "prop_3", "through", "green", "prop_1", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 3, 3, 0, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "  \"through green or red room\": \"G (prop_2 or prop_3) until prop_1\""}
{"id": 6360, "sentence": ["avoid", "the", "yellow", "rooms", "on", "your", "way", "into", "the", "red", "rooms"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "rooms", "on", "your", "way", "into", "the", "prop_1", "rooms"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) should never be true, so globally not prop_1 (G not prop_1). The phrase \"on your way into the red rooms\" means that until you reach a red room (prop_2), you must avoid yellow rooms. So, \"avoid yellow rooms until red rooms\" translates to (not prop_1) U prop_2.\n\n2. *Explanation dictionary* \u2013 {\"avoid the yellow rooms\": \"not prop_1\", \"on your way into the red rooms\": \"U prop_2\"}\n\n3. *FINAL:* (not prop_1)"}
{"id": 5993, "sentence": ["go", "the", "red", "or", "yellow", "room", "into", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "the", "prop_1", "or", "prop_2", "into", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 2, 2, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "  \"red or yellow room\": \"(prop_1 or prop_2)\","}
{"id": 10997, "sentence": ["enter", "the", "red", "room", "by", "going", "though", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_2", "by", "going", "though", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_2 until prop_1) FINISH"}
{"id": 8164, "sentence": ["enter", "the", "yellow", "room", "through", "the", "green", "door", "only"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_2", "through", "the", "green", "prop_1", "only"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 1, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1), it must have done so by passing through the green door (prop_2)"}
{"id": 4156, "sentence": ["the", "robot", "must", "move", "through", "the", "yellow", "or", "blue", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "yellow_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["the", "robot", "must", "move", "through", "the", "prop_1", "or", "prop_2", "to", "get", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "  \"yellow or blue room\": \"(prop_1 or prop_2)\","}
{"id": 4320, "sentence": ["don", "t", "go", "through", "the", "green", "room", "towards", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["don", "t", "go", "through", "the", "prop_2", "towards", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* globally (not (prop_1 until prop_2)) FINISH"}
{"id": 2730, "sentence": ["go", "to", "the", "green", "room", "but", "avoid", "going", "through", "the", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "going", "through", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (finally prop_1) and (globally (not prop_2)) FINISH"}
{"id": 4499, "sentence": ["go", "through", "the", "blue", "or", "red", "room", "and", "enter", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "and", "enter", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F (prop_1 or prop_2)) and (F prop_3) FINISH"}
{"id": 4230, "sentence": ["get", "to", "the", "red", "rectangle", "but", "do", "not", "go", "through", "the", "yellow", "square"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["get", "to", "the", "prop_1", "rectangle", "but", "do", "not", "go", "through", "the", "prop_2", "square"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (globally(not(prop_2)) and finally(prop_1)) FINISH"}
{"id": 9616, "sentence": ["go", "through", "the", "green", "or", "red", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "green_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* ((prop_1 or prop_2) U prop_3) FINISH"}
{"id": 8607, "sentence": ["go", "through", "the", "room", "which", "isn", "t", "green", "to", "get", "to", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "room", "which", "isn", "t", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (not prop_1) until prop_2 FINISH"}
{"id": 3509, "sentence": ["move", "through", "the", "green", "room", "to", "get", "to", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "the", "prop_1", "to", "get", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) and finally prop_2 FINISH"}
{"id": 10240, "sentence": ["go", "to", "the", "blue", "room", "then", "go", "to", "the", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "go", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (not F prop_2 U prop_1) FINISH"}
{"id": 605, "sentence": ["the", "robot", "goes", "through", "the", "yellow", "to", "get", "to", "blue"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["the", "robot", "goes", "through", "the", "prop_1", "to", "get", "to", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_2) and (not prop_2 U prop_1) FINISH"}
{"id": 10654, "sentence": ["go", "from", "the", "blue", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "from", "the", "blue", "prop_2", "to", "the", "green", "room"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), eventually the system reaches the green room (prop_2). So, \"from the blue room\" maps to prop_1 being true now, and \"to the green room\" maps to eventually prop_2 being true. The overall formula states that whenever we are in the blue room, eventually we will be in the green room.\n\n2. *Explanation dictionary* \u2013 {\"from the blue room\": \"prop_1\", \"to the green room\": \"F prop_2\"}\n\n3. *FINAL:* (prop_1 implies F prop_2)"}
{"id": 4197, "sentence": ["go", "to", "the", "blue", "room", "but", "don", "t", "go", "through", "the", "green", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "don", "t", "go", "through", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (finally(prop_1) and globally(not(prop_2))) FINISH"}
{"id": 3077, "sentence": ["go", "through", "the", "room", "that", "isn", "t", "red", "and", "enter", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "room", "that", "isn", "t", "prop_2", "and", "enter", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (finally (not prop_1)) and (finally prop_2) FINISH"}
{"id": 9619, "sentence": ["go", "into", "the", "red", "room", "but", "do", "not", "enter", "the", "blue", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "but", "do", "not", "enter", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 5601, "sentence": ["go", "through", "yellow", "room", "to", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 664, "sentence": ["go", "to", "the", "red", "room", "and", "take", "the", "chair", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "take", "the", "chair", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(finally) reaching the red room, so F prop_1, where prop_1 represents \"in the red room\".\n- \"take the chair to the blue room\": This implies that after taking the chair, eventually the chair is in the blue room. We can represent \"taking the chair\" as prop_2, and \"chair in the blue room\" as prop_3. Since the command implies that after going to the red room, the chair is taken and then moved to the blue room, we can express that after prop_2 (taking the chair), eventually prop_3 holds.\n\nTo combine these, we can say: eventually prop_1 (go to red room) and then eventually (prop_2 and eventually prop_3)"}
{"id": 2159, "sentence": ["get", "to", "the", "blue", "room", "by", "avoiding", "the", "green", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["get", "to", "the", "prop_1", "by", "avoiding", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (globally(not(prop_2)) and finally(prop_1)) FINISH"}
{"id": 9981, "sentence": ["go", "through", "the", "blue", "room", "to", "enter", "the", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "enter", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_2) and ((not prop_2) U prop_1) FINISH"}
{"id": 6085, "sentence": ["move", "to", "the", "red", "room", "grab", "the", "chair", "then", "move", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "grab", "the", "chair", "then", "move", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F(prop_1 and F(prop_2 and F(prop_3)))) FINISH"}
{"id": 3099, "sentence": ["move", "to", "blue", "room", "not", "using", "green", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "prop_1", "not", "using", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (not prop_2) U prop_1 and finally prop_1 FINISH"}
{"id": 6760, "sentence": ["move", "the", "robot", "from", "the", "red", "room", "to", "the", "yellow", "or", "red", "room", "to", "the", "big", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "the", "robot", "from", "the", "red", "room", "to", "the", "prop_2", "or", "prop_1", "to", "the", "big", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. FINAL: (prop_1) and F (prop_2 or prop_1) and F prop_3 FINISH"}
{"id": 2033, "sentence": ["go", "through", "the", "passage", "into", "the", "blue", "room", "but", "only", "if", "you", "go", "through", "a", "yellow", "or", "red", "room", "first"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "passage", "into", "the", "prop_3", "but", "only", "if", "you", "go", "through", "a", "yellow", "prop_2", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(yellow room) or prop_3 (red room) must have occurred.\n- \"but only if\" indicates an implication: going through the passage into the blue room implies that previously a yellow or red room was visited.\n- Since temporal logic is future-oriented, to express \"first\" we use \"until\" or \"implies\" with \"finally\".\n- The formula states: if prop_1 happens, then previously (or before) prop_2 or prop_3 must have happened.\n- Since past operators are not allowed, we express this as: prop_1 implies that eventually (in the past)"}
{"id": 1732, "sentence": ["move", "toward", "the", "red", "room", "then", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "toward", "the", "prop_1", "then", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1) U (prop_2) FINISH"}
{"id": 10104, "sentence": ["go", "through", "the", "green", "room", "into", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "into", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (not prop_2 U prop_1) FINISH"}
{"id": 10180, "sentence": ["go", "through", "the", "red", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_2), but only after having passed through the red room (prop_1). This can be expressed as: the blue room is eventually reached (F prop_2), and until then, the red room must be visited (prop_1 U prop_2).\n\n2. *Explanation dictionary* \u2013 {\"red room\": \"prop_1\", \"blue room\": \"prop_2\", \"go through the red room to the blue room\": \"(prop_1 U prop_2)\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 8189, "sentence": ["go", "to", "the", "blue", "room", "or", "the", "yellow", "room", "and", "head", "straight", "away", "to", "the", "green", "room", "avoiding", "the", "yellow", "room"], "tl": ["finally", "(", "(", "yellow_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "or", "the", "yellow", "room", "and", "head", "straight", "away", "to", "the", "green", "prop_3", "the", "yellow", "room", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F(prop_1) or F(prop_2)) and (G(not prop_2) until prop_3) and F(prop_3)"}
{"id": 4587, "sentence": ["go", "to", "red", "room", "get", "chair", "go", "to", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "get", "chair", "go", "to", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and ( (not prop_2) U prop_2 ) and ( (not prop_3) U prop_3 ) FINISH"}
{"id": 7964, "sentence": ["go", "through", "the", "red", "or", "green", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "red_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "to", "get", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(finally) the system will be in a state where either prop_1 (red room) or prop_2 (green room) holds. The phrase \"to get to the blue room\" means that eventually (finally) the system will be in a state where prop_3 (blue room) holds. Since the command implies that the blue room is reached after going through the red or green room, we express that the blue room is eventually reached, and before that, the red or green room is eventually reached. This can be captured by stating that eventually the blue room is reached, and before that, the red or green room is reached. One way to express this is: \"finally (prop_3 and previously finally (prop_1 or prop_2))\". However, since we don't have past operators, we can express that the blue room is eventually reached, and until then, the red or green room is eventually reached. Alternatively, we can say: \"finally prop_3 and finally (prop_1 or prop_2)\". But to capture the order, we can say: \"finally (prop_1 or prop_2)"}
{"id": 3287, "sentence": ["the", "robot", "goes", "through", "red", "to", "get", "to", "blue"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["the", "robot", "goes", "through", "prop_1", "to", "get", "to", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) and finally prop_2 FINISH"}
{"id": 5125, "sentence": ["move", "through", "the", "green", "room", "to", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "the", "prop_1", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) and finally prop_2 FINISH"}
{"id": 2214, "sentence": ["go", "to", "red", "room", "bring", "chair", "back", "to", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "bring", "chair", "back", "to", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F (prop_2 and prop_3)) FINISH"}
{"id": 7501, "sentence": ["go", "in", "and", "then", "go", "into", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "in", "and", "then", "go", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "- Using \"prop_1 and next finally prop_2\" or \"prop_1 and finally prop_2\" captures the sequence."}
{"id": 1198, "sentence": ["go", "to", "blue", "without", "going", "to", "red"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "without", "going", "to", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(where prop_1 represents \"blue\"). The phrase \"without going to red\" means \"not prop_2\" (where prop_2 represents \"red\") holds until we reach blue. So, \"go to blue without going to red\" translates to: prop_2 is never true before prop_1 becomes true, i.e., (not prop_2) holds until prop_1.\n\n2. *Explanation dictionary* \u2013 {\"go to blue\": \"F prop_1\", \"without going to red\": \"not prop_2 U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 3976, "sentence": ["go", "to", "red", "room", "go", "to", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "go", "to", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(where prop_1 means \"in red room\"), and \"go to yellow room\" as \"eventually prop_2\" (where prop_2 means \"in yellow room\"). The temporal ordering is captured by stating that prop_2 is eventually true after prop_1 has been reached, which can be expressed as \"eventually (prop_1 and eventually prop_2)\". More precisely, we want: eventually prop_1, and after that, eventually prop_2. This can be expressed as: F (prop_1 and F prop_2).\n\n2. *Explanation dictionary* \u2013 {\"go to red room\": \"F prop_1\", \"go to yellow room\": \"F prop_2\", \"go to red room then go to yellow room\": \"F (prop_1 and F prop_2)\"}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 1366, "sentence": ["the", "robot", "avoids", "yellow", "to", "get", "to", "the", "green"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["the", "robot", "avoids", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (globally (not prop_1)) and (finally prop_2) FINISH"}
{"id": 10362, "sentence": ["without", "stepping", "on", "red", "spaces", "move", "into", "the", "blue", "room", "then", "stop", "once", "you", "enter", "it"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["without", "stepping", "on", "prop_2", "spaces", "move", "into", "the", "prop_1", "then", "stop", "once", "you", "enter", "it"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* G (not prop_1) and F prop_2 and G (prop_2 implies G prop_3) FINISH"}
{"id": 10812, "sentence": ["enter", "blue", "room", "through", "yellow", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "prop_2", "through", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 2, 2, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_2 until prop_1) FINISH"}
{"id": 6362, "sentence": ["go", "to", "blue", "but", "not", "through", "red"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "but", "not", "through", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(finally) prop_1 (blue) should be true: F prop_1. The phrase \"but not through red\" means that until we reach blue, we must never pass through red, so globally (G) not prop_2 (red) holds until blue is reached. This is expressed as (not prop_2) U prop_1.\n\n2. *Explanation dictionary* \u2013 {\"go to blue\": \"F prop_1\", \"not through red\": \"(not prop_2) U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 4981, "sentence": ["move", "to", "the", "large", "red", "room", "while", "avoiding", "the", "small", "green", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_1", "while", "avoiding", "the", "small", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (G (not prop_2)) and (F prop_1) FINISH"}
{"id": 11004, "sentence": ["enter", "the", "room", "that", "isn", "t", "yellow", "and", "proceed", "through", "to", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "room", "that", "isn", "t", "prop_2", "and", "proceed", "through", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. FINAL: (prop_2 and not prop_1) and finally prop_3 FINISH"}
{"id": 3581, "sentence": ["go", "towards", "the", "yellow", "room", "and", "avoid", "the", "red", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "towards", "the", "prop_1", "and", "avoid", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 10596, "sentence": ["go", "into", "the", "red", "room", "and", "push", "the", "chair", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "and", "push", "the", "chair", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F) operator on both and combine them with \"and.\"\n\n2. *Explanation dictionary* \u2013 {\"go into the red room\": \"F prop_1\", \"push the chair into the green room\": \"F prop_2\", \"and\": \"and\"}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 6062, "sentence": ["go", "to", "the", "red", "room", "get", "the", "chair", "and", "bring", "it", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "get", "the", "chair", "and", "bring", "it", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "F prop_1 and (prop_1 \u2192 F prop_2) and (prop_2 \u2192 F prop_3)"}
{"id": 6146, "sentence": ["go", "into", "the", "red", "room", "then", "go", "into", "the", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "then", "go", "into", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1 U prop_2)"}
{"id": 8740, "sentence": ["go", "to", "the", "red", "room", "push", "the", "chair", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "push", "the", "chair", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 implies F prop_2) FINISH"}
{"id": 6135, "sentence": ["go", "to", "the", "red", "room", "and", "push", "the", "yellow", "object", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "push", "the", "yellow", "object", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (finally prop_1) and (finally prop_2) FINISH"}
{"id": 5169, "sentence": ["move", "from", "the", "red", "box", "into", "the", "green", "box", "by", "way", "of", "the", "blue", "or", "red", "box", "avoiding", "the", "yellow", "box"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "from", "the", "red", "box", "into", "the", "prop_3", "box", "by", "way", "of", "the", "prop_2", "or", "prop_1", "box", "avoiding", "the", "yellow", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 and G not prop_4 and F (prop_3 or prop_1) and F prop_2) FINISH"}
{"id": 6448, "sentence": ["go", "through", "the", "red", "and", "blue", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "and", "prop_2", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* F ((prop_1 and prop_2) and F prop_3) FINISH"}
{"id": 5098, "sentence": ["first", "enter", "the", "red", "room", "and", "then", "proceed", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["first", "enter", "the", "prop_1", "and", "then", "proceed", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 and (not prop_2 until prop_2)) FINISH"}
{"id": 5636, "sentence": ["move", "the", "robot", "through", "the", "yellow", "or", "blue", "small", "room", "and", "then", "to", "the", "large", "green", "room"], "tl": ["finally", "(", "(", "blue_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "the", "robot", "through", "the", "prop_2", "or", "blue", "small", "prop_3", "and", "then", "to", "the", "large", "green", "room"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F(prop_1 or prop_2) and F prop_3) and (not F prop_3 or F(prop_1 or prop_2)) FINISH"}
{"id": 3179, "sentence": ["go", "to", "the", "green", "room", "but", "avoid", "going", "through", "the", "blue", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "going", "through", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* globally(not(prop_2)) and finally(prop_1) FINISH"}
{"id": 5467, "sentence": ["enter", "the", "green", "room", "and", "exit", "into", "the", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_1", "and", "exit", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 and prop_2) FINISH"}
{"id": 5506, "sentence": ["enter", "the", "room", "that", "is", "not", "yellow", "which", "will", "lead", "to", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "room", "that", "is", "not", "prop_2", "which", "will", "lead", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (not prop_1) and (F prop_2) FINISH"}
{"id": 870, "sentence": ["go", "through", "either", "the", "yellow", "or", "the", "green", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "either", "the", "prop_2", "or", "the", "prop_1", "to", "get", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 0, 1, 1, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(finally) either prop_1 (yellow room) or prop_2 (green room) must be true. The phrase \"to get to the blue room\" means that eventually (finally) prop_3 (blue room) must be true. Since the command implies that the blue room is reached after going through either the yellow or green room, we express that eventually the blue room is reached, and before that, eventually either the yellow or green room is reached. This can be captured by stating that eventually the blue room is reached, and before that, eventually the yellow or green room is reached.\n\n2. *Explanation dictionary* \u2013\n{\n  \"either the yellow or the green room\": \"(prop_1 or prop_2)\",\n  \"go through either the yellow or the green room\": \"F (prop_1 or prop_2)\",\n  \"to get to the blue room\": \"F prop_3\",\n  \"go through either the yellow or the green room to get to the blue room\": \"F prop_3 and F (prop_1 or prop_2)\"\n}\n\n3. *FINAL:* (F prop_3)"}
{"id": 3721, "sentence": ["go", "the", "red", "room", "get", "dog", "and", "go", "back", "to", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "the", "prop_1", "get", "dog", "and", "go", "back", "to", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F (prop_1 implies (F prop_2))) and (F (prop_2 implies (F prop_3))) FINISH"}
{"id": 4681, "sentence": ["instead", "of", "going", "through", "the", "red", "room", "move", "through", "the", "blue", "room", "to", "enter", "the", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["instead", "of", "going", "through", "the", "red", "room", "move", "through", "the", "prop_1", "to", "enter", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "- This can be expressed as: not prop_1 implies (prop_2 until prop_3)."}
{"id": 1360, "sentence": ["go", "through", "the", "room", "which", "isn", "t", "red", "to", "get", "to", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "room", "which", "isn", "t", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (not prop_1) until prop_2 FINISH"}
{"id": 7045, "sentence": ["go", "to", "the", "green", "room", "through", "yellow"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "through", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_2 U prop_1) FINISH"}
{"id": 3129, "sentence": ["go", "through", "the", "red", "room", "until", "you", "get", "to", "the", "green"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "until", "you", "get", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 6488, "sentence": ["the", "robot", "avoids", "red", "to", "get", "to", "green"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["the", "robot", "avoids", "prop_2", "to", "get", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (G (not prop_1)) and (F prop_2) FINISH"}
{"id": 6986, "sentence": ["enter", "green", "room", "via", "the", "non", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "prop_1", "via", "the", "non", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(not prop_2).\n- So, the system must eventually enter the green room (prop_1), and before that, it must be in the non-yellow room (not prop_2).\n- This can be expressed as: prop_1 is eventually true, and until prop_1 becomes true, the system is in the non-yellow room (not prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n  \"enter green room\": \"prop_1\",\n  \"yellow room\": \"prop_2\",\n  \"non yellow room\": \"not prop_2\",\n  \"via the non yellow room\": \"until prop_1, not prop_2\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 2382, "sentence": ["move", "from", "the", "red", "box", "into", "the", "yellow", "box", "by", "way", "of", "the", "blue", "or", "red", "box", "avoiding", "the", "yellow", "box"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "from", "the", "red", "box", "into", "the", "yellow", "box", "by", "way", "of", "the", "prop_2", "or", "prop_1", "box", "avoiding", "the", "prop_3", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 3, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (prop_1 and F (prop_3 or prop_1) and F prop_2 and (not prop_2 U prop_2)) FINISH"}
{"id": 8335, "sentence": ["go", "through", "the", "opposite", "of", "the", "green", "room", "to", "reach", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "opposite", "of", "the", "prop_2", "to", "reach", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(green room) is false (not prop_1). \"Go through\" suggests that we must be in the opposite of the green room until we reach the blue room (prop_2). Thus, the formula states that globally, eventually the blue room is reached, and until then, we remain in the opposite of the green room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"the green room\": \"prop_1\",\n  \"the opposite of the green room\": \"not prop_1\",\n  \"the blue room\": \"prop_2\",\n  \"go through the opposite of the green room to reach the blue room\": \"(not prop_1) U prop_2\"\n}\n\n3. *FINAL:* (not prop_1)"}
{"id": 7408, "sentence": ["entering", "any", "room", "that", "isn", "t", "yellow", "will", "lead", "you", "to", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["entering", "any", "room", "that", "isn", "t", "prop_2", "will", "lead", "you", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* globally (not prop_1 implies finally prop_2) FINISH"}
{"id": 1127, "sentence": ["go", "to", "the", "green", "room", "but", "avoid", "the", "blue", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally(prop_1) and globally(not(prop_2))) FINISH"}
{"id": 2571, "sentence": ["go", "to", "red", "or", "blue", "then", "green"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "to", "prop_1", "or", "prop_2", "then", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 2, 0, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* ((prop_1 or prop_2) until prop_3) FINISH"}
{"id": 7528, "sentence": ["move", "into", "the", "blue", "room", "through", "the", "yellow", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "into", "the", "prop_2", "through", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_2 U prop_1) FINISH"}
{"id": 1823, "sentence": ["avoid", "green", "rooms", "while", "going", "to", "the", "blue", "one"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "prop_2", "rooms", "while", "going", "to", "the", "prop_1", "one"], "lifted_sentence_prop_ids": [0, 2, 0, 0, 0, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) should never be true, so globally not prop_1 (G not prop_1). The phrase \"while going to the blue one\" means that until we reach the blue room (prop_2), we must avoid green rooms. So, \"going to the blue one\" is represented by eventually prop_2 (F prop_2), and \"avoid green rooms while going to the blue one\" means that until prop_2 becomes true, prop_1 is always false. This is captured by (not prop_1) U prop_2.\n\n2. *Explanation dictionary* \u2013 {\"avoid green rooms\": \"not prop_1\", \"going to the blue one\": \"prop_2\", \"avoid green rooms while going to the blue one\": \"(not prop_1) U prop_2\"}\n\n3. *FINAL:* (not prop_1)"}
{"id": 5843, "sentence": ["go", "through", "the", "room", "that", "isn", "t", "green", "and", "enter", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "room", "that", "isn", "t", "prop_2", "and", "enter", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (finally (not prop_1)) and (finally prop_2) FINISH"}
{"id": 5123, "sentence": ["enter", "the", "green", "room", "by", "any", "room", "that", "is", "not", "red"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "by", "any", "room", "that", "is", "not", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* F (prop_1) and (not prop_3) U prop_1 FINISH"}
{"id": 3264, "sentence": ["go", "through", "the", "red", "room", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_2) is reached. So, first F prop_1 (eventually red room), and then from that point, eventually prop_2 (green room). This can be expressed as F (prop_1 and F prop_2).\n\n2. *Explanation dictionary* \u2013 {\"go through the red room\": \"F prop_1\", \"into the green room\": \"F prop_2\", \"go through the red room into the green room\": \"F (prop_1 and F prop_2)\"}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 4412, "sentence": ["only", "go", "through", "the", "blue", "or", "yellow", "to", "get", "to", "the", "green"], "tl": ["finally", "(", "(", "blue_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["only", "go", "through", "the", "prop_1", "or", "prop_2", "to", "get", "to", "the", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "  \"only go through the blue or yellow\": \"G((not prop_3) implies (prop_1 or prop_2))\","}
{"id": 3774, "sentence": ["move", "to", "red", "room", "pick", "up", "yellow", "thing", "move", "to", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "prop_1", "pick", "up", "yellow", "thing", "move", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "   - (prop_1 U prop_2)"}
{"id": 5959, "sentence": ["drive", "through", "the", "room", "that", "is", "not", "green", "and", "enter", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["drive", "through", "the", "room", "that", "is", "not", "prop_2", "and", "enter", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F (not prop_1)) and (F prop_2) FINISH"}
{"id": 949, "sentence": ["go", "through", "the", "green", "or", "yellow", "room", "and", "go", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "prop_2", "and", "go", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F (prop_1 or prop_2)) and (F prop_3) FINISH"}
{"id": 10306, "sentence": ["enter", "the", "room", "that", "isnt", "green", "then", "go", "to", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "room", "that", "isnt", "prop_2", "then", "go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1 and not prop_2). The word \"then\" indicates a temporal sequence, so after entering the non-green room, we must \"go to the blue room\" eventually. We use prop_3 for \"go to the blue room\". The temporal operator \"until\" or \"finally\" can express this sequence. Here, we use \"until\" to say that we are in the first state until the second happens, or more simply, \"finally\" to say that after entering the non-green room, eventually we go to the blue room. Since the command is sequential, we can express it as: first, eventually enter the non-green room, and then eventually go to the blue room after that. To capture the order, we use \"until\" or \"implies\" with \"finally\". The simplest is: (finally (enter and not green)) and (finally (go to blue room))"}
{"id": 3125, "sentence": ["avoid", "the", "red", "room", "and", "end", "at", "the", "blue", "rectangular", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "and", "end", "at", "the", "blue", "rectangular", "room", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (G (not prop_1)) and (F (prop_2) and G (prop_2)) FINISH"}
{"id": 2742, "sentence": ["go", "through", "the", "room", "that", "is", "not", "green", "to", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "room", "that", "is", "not", "prop_2", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* finally (not prop_1) and finally prop_2 FINISH"}
{"id": 10352, "sentence": ["move", "to", "the", "blue", "room", "but", "don", "t", "go", "through", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "but", "don", "t", "go", "through", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (finally prop_1) and (globally (not prop_2)) FINISH"}
{"id": 10030, "sentence": ["make", "your", "way", "to", "the", "green", "room", "while", "avoiding", "the", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["make", "your", "way", "to", "the", "prop_1", "while", "avoiding", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (G (not prop_2)) and (F prop_1) FINISH"}
{"id": 141, "sentence": ["first", "go", "to", "red", "room", "then", "go", "to", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["first", "go", "to", "prop_1", "then", "go", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) and finally prop_2 FINISH"}
{"id": 10418, "sentence": ["go", "through", "the", "green", "or", "yellow", "room", "to", "get", "to", "the", "red", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "prop_2", "to", "get", "to", "the", "red", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F (prop_1 or prop_2)) and (F"}
{"id": 1501, "sentence": ["go", "to", "the", "green", "room", "without", "entering", "a", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "without", "entering", "a", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 7936, "sentence": ["the", "robot", "goes", "through", "the", "green", "to", "get", "to", "red"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["the", "robot", "goes", "through", "the", "prop_1", "to", "get", "to", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(green) holds before reaching prop_2 (red). The phrase \"to get to red\" indicates that eventually prop_2 (red) must be true. So, the robot must eventually reach green (prop_1), and then eventually reach red (prop_2) after that. This can be expressed as: eventually prop_1 holds, and from that point, eventually prop_2 holds. Using temporal logic, this is: F (prop_1 and F prop_2).\n\n2. *Explanation dictionary* \u2013 {\"goes through the green\": \"F prop_1\", \"to get to red\": \"F prop_2\"}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 65, "sentence": ["move", "to", "blue", "room", "not", "using", "green", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "prop_1", "not", "using", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (globally (not prop_2)) and (finally prop_1) FINISH"}
{"id": 10725, "sentence": ["go", "through", "green", "rooms", "to", "get", "to", "the", "blue", "one"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "rooms", "to", "get", "to", "the", "prop_2", "one"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 3560, "sentence": ["enter", "the", "red", "room", "without", "passing", "the", "blue", "one"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "passing", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(not prop_2)"}
{"id": 4080, "sentence": ["go", "to", "the", "green", "but", "do", "not", "go", "through", "red"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "go", "through", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (globally(not(prop_2)) until finally(prop_1)) FINISH"}
{"id": 9107, "sentence": ["go", "through", "the", "yellow", "and", "red", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "and", "prop_1", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(both), and then eventually reach the blue room. Since \"through the yellow and red room\" implies passing both rooms before reaching the blue room, we can express that the blue room is eventually reached, and before that, both yellow and red rooms are visited. We can model \"going through\" as eventually visiting yellow and red rooms (prop_1 and prop_2), and then eventually reaching the blue room (prop_3). To ensure the order, we can say: eventually (yellow and red rooms) and then eventually blue room. However, since the order between yellow and red is not specified, we can just require both to be visited before blue. One way is: (F (prop_1 and prop_2)) and then F prop_3, but to ensure that blue room is reached after both yellow and red rooms, we can say: (F (prop_1 and prop_2)) and ( (not prop_3) U (prop_1 and prop_2) )"}
{"id": 6257, "sentence": ["go", "through", "the", "opposite", "of", "the", "green", "room", "to", "reach", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "opposite", "of", "the", "prop_2", "to", "reach", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(not prop_1, assuming prop_1 = green room). The phrase \"to reach the blue room\" means that eventually the blue room (prop_2) is reached. So the formula states that eventually (F) the opposite of the green room (not prop_1) is true, and eventually (F) the blue room (prop_2) is true. To express \"go through ... to reach ...\", we can say that eventually the blue room is reached, and before that, the opposite of the green room is visited. This can be captured by: F(prop_2) and (not prop_1) U prop_2.\n\n2. *Explanation dictionary* \u2013\n{\n  \"the green room\": \"prop_1\",\n  \"the opposite of the green room\": \"not prop_1\",\n  \"the blue room\": \"prop_2\",\n  \"go through the opposite of the green room to reach the blue room\": \"(not prop_1) U prop_2\"\n}\n\n3. *FINAL:* (not prop_1)"}
{"id": 4495, "sentence": ["go", "through", "either", "the", "red", "or", "blue", "room", "to", "reach", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "either", "the", "prop_1", "or", "prop_2", "to", "reach", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* ((prop_1 or prop_2) U prop_3) FINISH"}
{"id": 10864, "sentence": ["go", "to", "the", "blue", "room", "but", "do", "not", "pass", "through", "the", "red", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "pass", "through", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2 until prop_1)) FINISH"}
{"id": 1854, "sentence": ["go", "to", "the", "blue", "room", "keep", "going", "and", "stop", "when", "you", "reach", "the", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "keep", "going", "and", "stop", "when", "you", "reach", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(where prop_1 = \"blue room\"). \"Keep going\" implies continuing some behavior until a condition is met. \"Stop when you reach the yellow room\" means that upon reaching the yellow room (prop_2), the behavior should cease. This can be captured by \"keep going\" until \"yellow room\" is reached, i.e., (true U prop_2). Combining these, the agent should eventually reach the blue room, then continue until the yellow room is reached.\n\n2. *Explanation dictionary* \u2013\n{\n  \"blue room\": \"prop_1\",\n  \"yellow room\": \"prop_2\",\n  \"go to the blue room\": \"F prop_1\",\n  \"stop when you reach the yellow room\": \"prop_2\",\n  \"keep going and stop when you reach the yellow room\": \"(true U prop_2)\"\n}\n\n3. *FINAL:* (F prop_1) and (true U prop_2)"}
{"id": 5820, "sentence": ["go", "through", "the", "yellow", "or", "green", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_3) and ((prop_1 or prop_2) U prop_3) FINISH"}
{"id": 1950, "sentence": ["go", "to", "the", "green", "area", "through", "yellow", "area"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "area", "through", "prop_1", "area"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_2) is reached, and before that, the path must go through the yellow area (prop_1). This can be expressed as: the green area is eventually reached (F prop_2), and until then, the yellow area must hold (prop_1 U prop_2).\n\n2. *Explanation dictionary* \u2013 {\"yellow area\": \"prop_1\", \"green area\": \"prop_2\", \"go to the green area through yellow area\": \"(prop_1 U prop_2)\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 10905, "sentence": ["go", "through", "the", "red", "and", "to", "the", "green"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "and", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(where prop_1 represents \"red\"). The phrase \"and to the green\" means that after going through red, we eventually reach green (prop_2). So the overall formula states: eventually prop_1 and eventually prop_2, with the order implied by \"through the red and to the green\" meaning prop_1 happens before prop_2. This can be expressed as: eventually prop_1 and then eventually prop_2 after prop_1, which is captured by (F prop_1) and (F prop_2) with the ordering enforced by (prop_1 U prop_2) or more simply by (F prop_1 and F prop_2 and prop_1 precedes prop_2). Using until operator, we can say: prop_1 until prop_2, meaning prop_1 holds until prop_2 occurs, but since \"go through the red and to the green\" implies first red then green, the formula is: F prop_1 and (prop_1 U prop_2)"}
{"id": 3209, "sentence": ["enter", "the", "blue", "or", "red", "room", "and", "proceed", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["enter", "the", "prop_2", "or", "prop_1", "and", "proceed", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) and F prop_3 FINISH"}
{"id": 2202, "sentence": ["move", "to", "the", "red", "room", "then", "push", "the", "chair", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "then", "push", "the", "chair", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 and (not prop_2 until prop_2)) FINISH"}
{"id": 7016, "sentence": ["go", "to", "the", "red", "room", "then", "to", "the", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 implies F prop_2) FINISH"}
{"id": 2536, "sentence": ["pass", "thru", "either", "the", "green", "or", "yellow", "box", "to", "get", "to", "the", "blue", "box"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["pass", "thru", "either", "the", "prop_1", "or", "prop_2", "box", "to", "get", "to", "the", "prop_3", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 3, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F (prop_1 or prop_2)) and F prop_3 FINISH"}
{"id": 8206, "sentence": ["go", "to", "the", "green", "room", "through", "the", "yellow", "or", "blue", "room"], "tl": ["finally", "(", "(", "yellow_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "to", "the", "prop_3", "through", "the", "yellow", "prop_1", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 3, 3, 0, 0, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "  \"through the yellow or blue room\": \"((prop_2 or prop_3) U prop_1)\""}
{"id": 6169, "sentence": ["go", "through", "the", "blue", "room", "to", "reach", "the", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "reach", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_2) and (prop_2 implies F prop_1) FIN"}
{"id": 1553, "sentence": ["go", "from", "the", "red", "room", "to", "the", "blue", "room", "by", "going", "through", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "from", "the", "red", "room", "to", "the", "prop_2", "by", "going", "through", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_2), and on the way, it must pass through the red room (prop_1). Since the start is in the red room, and the path must go through the red room before reaching the blue room, we can express this as: eventually (blue room) and until then, the system stays in or passes through the red room. More precisely, the system must be in the red room until it reaches the blue room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"red room\": \"prop_1\",\n  \"blue room\": \"prop_2\",\n  \"go from the red room to the blue room by going through the red room\": \"prop_1 U prop_2\"\n}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 4431, "sentence": ["get", "to", "the", "blue", "room", "by", "avoiding", "the", "red", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["get", "to", "the", "prop_1", "by", "avoiding", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (globally (not prop_2)) and (finally prop_1) FINISH"}
{"id": 327, "sentence": ["go", "from", "the", "red", "room", "to", "the", "blue", "room", "by", "going", "through", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "from", "the", "red", "room", "to", "the", "prop_2", "by", "going", "through", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1) and (prop_1 U prop_2) and (F prop_2) FINISH"}
{"id": 4064, "sentence": ["avoid", "the", "blue", "room", "to", "reach", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "to", "reach", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (globally (not prop_1)) and (finally prop_2) FINISH"}
{"id": 6735, "sentence": ["follow", "the", "path", "through", "the", "red", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["follow", "the", "path", "through", "the", "prop_1", "to", "get", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1 U prop_2)"}
{"id": 8551, "sentence": ["move", "toward", "either", "the", "red", "or", "green", "room", "then", "into", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "red_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "toward", "either", "the", "prop_2", "or", "prop_1", "then", "into", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1 or prop_2). The phrase \"then into the blue room\" means that after reaching the red or green room, eventually the blue room is reached. This is captured by the until operator: (prop_1 or prop_2) U prop_3, but since \"then\" implies a sequence, we use F (prop_1 or prop_2) and after that F prop_3. To express that after reaching red or green room, eventually blue room is reached, we use: (F (prop_1 or prop_2)) and ( (prop_1 or prop_2) \u2192 F prop_3 ). To ensure the sequence, we can write: (F (prop_1 or prop_2)) and G ( (prop_1 or prop_2) \u2192 F prop_3 ).\n\n2. *Explanation dictionary* \u2013\n{\n  \"move toward either the red or green room\": \"F (prop_1 or prop_2)\",\n  \"then into the blue room\": \"G ((prop_1 or prop_2)"}
{"id": 9917, "sentence": ["go", "through", "the", "blue", "room", "until", "you", "get", "to", "the", "green"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "until", "you", "get", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 3057, "sentence": ["enter", "the", "room", "that", "isn", "t", "red", "and", "proceed", "through", "to", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "room", "that", "isn", "t", "prop_2", "and", "proceed", "through", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. FINAL: (prop_2 and not prop_1) and finally prop_3 FINISH"}
{"id": 9598, "sentence": ["don", "t", "go", "through", "the", "red", "room", "towards", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["don", "t", "go", "through", "the", "prop_2", "towards", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* globally (not (prop_1 and finally prop_2)) FINISH"}
{"id": 10274, "sentence": ["enter", "the", "blue", "room", "and", "then", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_1", "and", "then", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 and finally prop_2) FINISH"}
{"id": 2346, "sentence": ["go", "through", "the", "red", "or", "yellow", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "prop_2", "to", "get", "to", "the", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* ((prop_1 or prop_2) until prop_3"}
{"id": 6751, "sentence": ["cross", "the", "yellow", "room", "only", "to", "reach", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["cross", "the", "prop_1", "only", "to", "reach", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_2), one must have crossed the yellow room (prop_1) beforehand. This can be expressed as: globally, if eventually prop_2 holds, then previously prop_1 must have held. Since we only have future operators, we express this as: globally, if prop_2 eventually holds, then prop_1 must have held before or at the same time. Because past operators are not allowed, we can express this as: globally, prop_2 implies that prop_1 has occurred before or at the same time, which can be approximated as: globally, prop_2 implies that prop_1 holds until prop_2. So the formula is: G (prop_2 implies (prop_1 U prop_2))"}
{"id": 406, "sentence": ["move", "toward", "the", "green", "room", "then", "into", "the", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "toward", "the", "prop_1", "then", "into", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (prop_1 and finally prop_2) FINISH"}
{"id": 1549, "sentence": ["move", "to", "the", "red", "room", "and", "then", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "then", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 implies F prop_2) FINISH"}
{"id": 8887, "sentence": ["first", "go", "to", "red", "room", "then", "go", "to", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["first", "go", "to", "prop_1", "then", "go", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(assuming prop_1 means \"in red room\"). The phrase \"then go to green room\" means that after being in the red room, eventually the system must be in the green room (prop_2). So the formula states: \"prop_1 until prop_2\" but since \"first\" means we start with prop_1 and then eventually prop_2, the correct temporal logic is \"prop_1 until prop_2\" or more precisely \"prop_1 holds until prop_2 becomes true\".\n\n2. *Explanation dictionary* \u2013 {\"first go to red room\": \"prop_1\", \"then go to green room\": \"prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 8392, "sentence": ["go", "to", "the", "red", "room", "go", "the", "yellow", "chair", "push", "the", "yellow", "chair", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "go", "the", "yellow", "chair", "push", "the", "yellow", "chair", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. FINAL: (F prop_1) and (F prop_2) and (F (prop_"}
{"id": 10172, "sentence": ["avoid", "the", "yellow", "room", "and", "enter", "the", "green", "room", "through", "either", "the", "red", "or", "yellow", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["avoid", "the", "yellow", "room", "and", "enter", "the", "prop_3", "through", "either", "the", "red", "prop_1", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(where prop_1 = \"in yellow room\"). The phrase \"enter the green room through either the red or yellow room\" means that eventually the system enters the green room (prop_2), and before that, it must have passed through either the red room (prop_3) or the yellow room (prop_1). Since we are avoiding the yellow room, the only way to enter the green room is through the red room, but the command allows either red or yellow. So the formula expresses that eventually prop_2 holds, and before that, the system was in prop_3 or prop_1. This can be expressed as: F prop_2 and (prop_3 or prop_1) holds before prop_2. Using until, we can say (prop_3 or prop_1)"}
{"id": 9483, "sentence": ["go", "through", "yellow", "rooms", "to", "get", "to", "the", "blue", "one"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "rooms", "to", "get", "to", "the", "prop_2", "one"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) hold until it reaches the \"blue one\" (prop_2). The phrase \"to get to the blue one\" indicates that eventually the system must reach a state where \"blue one\" holds. Combining these, the system must stay in yellow rooms until it reaches the blue one.\n\n2. *Explanation dictionary* \u2013 {\"go through yellow rooms\": \"prop_1 U prop_2\", \"to get to the blue one\": \"F prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 10003, "sentence": ["move", "from", "blue", "room", "to", "red", "room", "then", "move", "to", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "from", "blue", "room", "to", "prop_1", "then", "move", "to", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (prop_1 and finally prop_2) FINISH"}
{"id": 3558, "sentence": ["move", "to", "the", "red", "room", "move", "to", "the", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "move", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(finally) prop_1 becomes true. After that, \"move to the yellow room\" means that eventually prop_2 becomes true. To express the sequence, we say: first finally prop_1, and then after that finally prop_2. Using temporal logic, this is: finally prop_1 and then (prop_1 until finally prop_2), but since we only have the given operators, the standard way is: finally prop_1 and then finally prop_2 holds after prop_1. This can be expressed as: finally prop_1 and (prop_1 implies finally prop_2). But to ensure the order, we use until: prop_1 until finally prop_2. Combining, the formula is: finally prop_1 and (not prop_2 until prop_1)"}
{"id": 1750, "sentence": ["enter", "the", "yellow", "room", "by", "going", "though", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_2", "by", "going", "though", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_2), but only after going through the green room (prop_1). This means that before entering the yellow room, the green room must have been entered. We can express this as: the yellow room is eventually entered, and until that happens, the green room must have been entered at some point before.\n\n2. *Explanation dictionary* \u2013 {\"enter the green room\": \"prop_1\", \"enter the yellow room\": \"prop_2\", \"enter yellow room by going through green room\": \"prop_1 until prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 10632, "sentence": ["go", "to", "the", "green", "room", "but", "do", "not", "take", "the", "yellow", "room", "to", "get", "there"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "take", "the", "yellow", "prop_2", "get", "there"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and ((not prop_2) U prop_1) FINISH"}
{"id": 639, "sentence": ["move", "to", "the", "red", "room", "and", "stop", "after", "entering"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "stop", "after", "entering"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (prop_1 implies prop_2)) FINISH"}
{"id": 2828, "sentence": ["go", "to", "the", "red", "room", "and", "then", "go", "into", "the", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "then", "go", "into", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (prop_1 and finally prop_2) FINISH"}
{"id": 2132, "sentence": ["go", "through", "the", "yellow", "or", "red", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "  \"yellow or red room\": \"(prop_1 or prop_2)\","}
{"id": 448, "sentence": ["go", "to", "the", "yellow", "room", "but", "don", "t", "go", "through", "the", "blue", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "don", "t", "go", "through", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally(prop_1) and globally(not(prop_2))) FINISH"}
{"id": 4070, "sentence": ["go", "to", "the", "red", "room", "then", "to", "then", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "to", "then", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F (prop_1 and F prop_2)) FINISH"}
{"id": 2604, "sentence": ["move", "into", "the", "blue", "room", "through", "the", "yellow", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "into", "the", "prop_2", "through", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) and finally prop_2 FINISH"}
{"id": 7433, "sentence": ["enter", "the", "yellow", "room", "then", "enter", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_1", "then", "enter", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 and finally prop_2) FINISH"}
{"id": 9274, "sentence": ["move", "to", "the", "red", "room", "and", "push", "the", "object", "back", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "push", "the", "object", "back", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(finally) prop_1, where prop_1 stands for \"being in the red room\".\n- \"push the object back into the blue room\": This can be represented as eventually prop_2, where prop_2 stands for \"object is in the blue room\".\n\nSince the command requires both actions to happen, we use \"and\" to combine the two \"finally\" formulas.\n\n2. *Explanation dictionary* \u2013\n{\"move to the red room\": \"F prop_1\", \"push the object back into the blue room\": \"F prop_2\"}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 6316, "sentence": ["go", "through", "the", "green", "or", "red", "room", "to", "reach", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "green_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "to", "reach", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(finally) the system will be in a state where either prop_1 (green room) or prop_2 (red room) holds. The phrase \"to reach the blue room\" means that eventually the system will be in a state where prop_3 (blue room) holds. Since the command implies that the blue room is reached after going through the green or red room, we express that the blue room is eventually reached, and before that, the system must have passed through the green or red room. This can be captured by stating that eventually prop_3 holds, and before that, prop_1 or prop_2 must have held at some point. One way to express this is: eventually prop_3 holds, and until then, prop_1 or prop_2 must have occurred. Alternatively, we can say that eventually prop_3 holds, and before that, eventually prop_1 or prop_2 holds. Since LTL does not have past operators, we can express this as: (F (prop_1 or prop_2)) and (F prop_3)"}
{"id": 4353, "sentence": ["please", "go", "to", "the", "red", "room", "through", "the", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["please", "go", "to", "the", "prop_2", "through", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_2 until prop_1) FINISH"}
{"id": 6236, "sentence": ["walk", "pass", "the", "red", "room", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["walk", "pass", "the", "prop_1", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1 and F prop_2)\"\n}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 8814, "sentence": ["avoid", "the", "yellow", "room", "and", "enter", "the", "green", "room", "through", "either", "the", "yellow", "or", "blue", "room"], "tl": ["finally", "(", "(", "yellow_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["avoid", "the", "yellow", "room", "and", "enter", "the", "prop_3", "through", "either", "the", "yellow", "prop_1", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(where prop_1 represents \"in yellow room\"). The phrase \"enter the green room through either the yellow or blue room\" means that eventually the system will be in the green room (prop_2), and before that, it must have been in either the yellow room (prop_1) or the blue room (prop_3). This can be expressed as: eventually (prop_2 and previously was in prop_1 or prop_3). Since we don't have a past operator, we can express that the green room is eventually reached, and before that, the system was in yellow or blue room, which can be captured by: eventually (prop_2 and (prop_1 or prop_3) until prop_2). But since \"until\" requires the first formula to hold until the second becomes true, we can write: (prop_1 or prop_3) U prop_2. Combining both parts: globally not prop_1 (avoid yellow room), and (prop_1 or prop_3) until prop_2 (enter green room through yellow or blue)"}
{"id": 6392, "sentence": ["go", "to", "red", "or", "yellow", "then", "green"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "to", "prop_1", "or", "prop_2", "then", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 2, 0, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* ((prop_1 or prop_2) until prop_3) FINISH"}
{"id": 948, "sentence": ["instead", "of", "going", "through", "the", "red", "room", "move", "through", "the", "blue", "room", "to", "enter", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["instead", "of", "going", "through", "the", "red", "room", "move", "through", "the", "prop_1", "to", "enter", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* globally (not prop_1) and finally (prop_2 and finally prop_3) FINISH"}
{"id": 5501, "sentence": ["go", "to", "blue", "area", "by", "avoiding", "yellow", "area"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "area", "by", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (not prop_2) until prop_1 FINISH"}
{"id": 4008, "sentence": ["go", "through", "blue", "to", "get", "to", "yellow"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "to", "get", "to", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 8444, "sentence": ["do", "not", "take", "the", "green", "room", "to", "reach", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["do", "not", "take", "the", "prop_2", "to", "reach", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* not (prop_1 until prop_2) FINISH"}
{"id": 5637, "sentence": ["go", "to", "the", "red", "room", "and", "do", "not", "use", "the", "green", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "do", "not", "use", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 and (not prop_2)) FINISH"}
{"id": 11089, "sentence": ["the", "robot", "has", "to", "go", "through", "the", "red", "or", "yellow", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["the", "robot", "has", "to", "go", "through", "the", "prop_1", "or", "prop_2", "to", "get", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F prop_3), and before that, it must have passed through either the red or yellow room. This can be expressed as: the blue room is eventually reached, and until then, the robot must have been in the red or yellow room at some point. More precisely, the robot must not reach the blue room without first having been in the red or yellow room. This can be captured by stating that until the blue room is reached, the robot is either in the red or yellow room or not yet in the blue room, but the red or yellow room must be visited before the blue room. This is commonly expressed as: the blue room is eventually reached, and until then, the robot is in the red or yellow room at some point. Using the until operator, we can say: (red or yellow room) until (blue room)"}
{"id": 1639, "sentence": ["go", "to", "the", "green", "room", "through", "the", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "through", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) and finally prop_2 FINISH"}
{"id": 4723, "sentence": ["go", "through", "red", "rooms", "to", "get", "to", "the", "blue", "one"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "rooms", "to", "get", "to", "the", "prop_2", "one"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(G) prop_1, where prop_1 represents \"being in a red room.\" The phrase \"to get to the blue one\" means eventually reaching a blue room, represented by finally (F) prop_2, where prop_2 represents \"being in a blue room.\" Combining these, the system should always be in red rooms until it eventually reaches a blue room.\n\n2. *Explanation dictionary* \u2013 {\"go through red rooms\": \"G prop_1\", \"to get to the blue one\": \"F prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 5076, "sentence": ["go", "towards", "the", "green", "room", "and", "avoid", "the", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "towards", "the", "prop_1", "and", "avoid", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 3565, "sentence": ["enter", "the", "room", "that", "isnt", "green", "then", "go", "to", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "room", "that", "isnt", "prop_2", "then", "go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (not prop_1) and F prop_2 FINISH"}
{"id": 9371, "sentence": ["go", "to", "the", "red", "room", "and", "get", "the", "chair", "and", "move", "it", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "get", "the", "chair", "and", "move", "it", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and ( (not prop_"}
{"id": 3365, "sentence": ["enter", "the", "blue", "room", "and", "then", "the", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_1", "and", "then", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (prop_1) U (prop_2) FINISH"}
{"id": 8070, "sentence": ["go", "to", "the", "blue", "room", "but", "do", "not", "use", "the", "yellow", "room", "to", "get", "there"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "use", "the", "yellow", "prop_2", "get", "there"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (globally (not prop_2)) and (finally prop_1) FINISH"}
{"id": 5906, "sentence": ["enter", "the", "green", "room", "through", "either", "the", "red", "or", "or", "yellow", "rooms"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["enter", "the", "prop_3", "through", "either", "the", "red", "prop_1", "or", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 3, 3, 0, 0, 0, 1, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_2) or the yellow room (prop_3).\n- Using temporal logic, \"entering the green room\" (prop_1) should eventually happen (F prop_1).\n- Before entering the green room, the system must have been in either the red or yellow room, so \"prop_2 or prop_3\" must hold immediately before prop_1.\n- This can be expressed as: eventually (prop_1 and previously (prop_2 or prop_3))"}
{"id": 6745, "sentence": ["enter", "the", "green", "room", "without", "passing", "the", "red", "one"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "passing", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(not prop_2)"}
{"id": 10152, "sentence": ["move", "to", "the", "green", "room", "but", "don", "t", "go", "through", "the", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "but", "don", "t", "go", "through", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (finally(prop_1) and globally(not(prop_2))) FINISH"}
{"id": 7423, "sentence": ["go", "through", "the", "yellow", "room", "to", "reach", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "reach", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_2) and ((not prop_2) U prop_1) FINISH"}
{"id": 10118, "sentence": ["go", "into", "the", "red", "room", "then", "go", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "then", "go", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(going into the green room) should become true. This is captured by the \"until\" operator: prop_1 holds until prop_2 happens, or more simply, prop_1 happens first, then eventually prop_2.\n\n2. *Explanation dictionary* \u2013 {\"go into the red room\": \"prop_1\", \"then go into the green room\": \"F prop_2\"}\n\n3. *FINAL:* (prop_1 and F prop_2)"}
{"id": 7302, "sentence": ["enter", "the", "red", "room", "by", "going", "though", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_2", "by", "going", "though", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1). However, before entering the red room, it must go through the green room (prop_2). This means that the green room must be visited first, and only after that can the red room be entered. We can express this as: eventually prop_1 (enter red room), and before that, prop_2 (enter green room) must occur. Using temporal logic, this can be captured by stating that prop_1 eventually holds, and until prop_1 holds, prop_2 must hold at some point before.\n\n2. *Explanation dictionary* \u2013\n{\n  \"enter the red room\": \"prop_1\",\n  \"going through the green room\": \"prop_2\",\n  \"enter red room by going through green room\": \"F (prop_2 and F prop_1)\"\n}\n\n3. *FINAL:* F (prop_2 and F prop_1)"}
{"id": 7750, "sentence": ["get", "to", "the", "green", "rectangle", "but", "do", "not", "go", "through", "the", "yellow", "square"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["get", "to", "the", "prop_1", "rectangle", "but", "do", "not", "go", "through", "the", "prop_2", "square"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (finally(prop_1) and globally(not(prop_2))) FINISH"}
{"id": 9484, "sentence": ["move", "through", "the", "room", "that", "isn", "t", "red", "into", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "through", "the", "room", "that", "isn", "t", "prop_2", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(not prop_1), and \"the green room\" as prop_2 being true. The phrase \"move through the room that isn't red\" suggests that while we are in the room, prop_1 is false, and then eventually we enter the green room (prop_2). This can be captured by stating that globally, until we reach the green room (prop_2), the room is not red (not prop_1), and finally, we eventually reach the green room (F prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n  \"room that isn't red\": \"not prop_1\",\n  \"green room\": \"prop_2\",\n  \"move through the room that isn't red into the green room\": \"(not prop_1) U prop_2\"\n}\n\n3. *FINAL:* (not prop_1)"}
{"id": 10932, "sentence": ["avoid", "the", "red", "room", "and", "move", "to", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "and", "move", "to", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* globally (not prop_1) and finally prop_2 FINISH"}
{"id": 6228, "sentence": ["go", "towards", "the", "red", "room", "through", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "towards", "the", "prop_2", "through", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) is reached, but only after the green room (prop_2) has been visited. This can be expressed as: the red room is eventually reached (F prop_1), and until then, the green room must be visited (prop_2 U prop_1).\n\n2. *Explanation dictionary* \u2013 {\"red room\": \"prop_1\", \"green room\": \"prop_2\", \"go towards the red room through the green room\": \"prop_2 U prop_1\"}\n\n3. *FINAL:* (prop_2 U prop_1)"}
{"id": 9957, "sentence": ["move", "through", "green", "room", "to", "the", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "prop_1", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 8427, "sentence": ["move", "to", "the", "red", "room", "push", "the", "chair", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "push", "the", "chair", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally prop_1) and (finally (prop_1 implies finally prop_2)) FINISH"}
{"id": 2656, "sentence": ["go", "to", "the", "green", "room", "while", "avoiding", "the", "blue", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1). The phrase \"while avoiding the blue room\" means that until we reach the green room, we must never be in the blue room, represented by prop_2. So, globally, until prop_1 becomes true, prop_2 must be false. This is captured by (not prop_2) U prop_1.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the green room\": \"prop_1\",\n  \"avoiding the blue room\": \"not prop_2\",\n  \"while avoiding the blue room\": \"(not prop_2) U prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 2754, "sentence": ["avoiding", "the", "red", "rectangle", "travel", "to", "the", "blue", "area"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoiding", "the", "prop_2", "rectangle", "travel", "to", "the", "prop_1", "area"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 0, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (globally (not prop_1)) and (finally prop_2) FINISH"}
{"id": 5825, "sentence": ["go", "thru", "the", "blue", "or", "red", "box", "to", "get", "to", "the", "green", "box"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "thru", "the", "prop_2", "or", "prop_1", "box", "to", "get", "to", "the", "prop_3", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 3, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "  \"blue or red box\": \"(prop_1 or prop_2)\","}
{"id": 9426, "sentence": ["go", "to", "the", "green", "room", "but", "do", "not", "pass", "through", "the", "red", "room", "on", "your", "way"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "pass", "through", "the", "red", "prop_2", "your", "way"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1), where prop_1 stands for \"in the green room\".\n\n- \"do not pass through the red room on your way\": This means that until you reach the green room, you never enter the red room. So globally, before reaching the green room, you are not in the red room. This can be expressed as (not prop_2) U prop_1, where prop_2 stands for \"in the red room\".\n\nCombining these, the formula states that you eventually reach the green room, and until then, you never enter the red room.\n\n2. *Explanation dictionary*:\n\n{\n  \"go to the green room\": \"F prop_1\",\n  \"do not pass through the red room on your way\": \"(not prop_2) U prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 8208, "sentence": ["go", "to", "the", "red", "room", "and", "then", "go", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "then", "go", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (not prop_2 until prop_1) FINISH"}
{"id": 6471, "sentence": ["progress", "through", "green", "rectangle", "room", "to", "the", "large", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["progress", "through", "prop_1", "rectangle", "room", "to", "the", "large", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F) being in the green rectangle room (prop_1). The phrase \"to the large red room\" indicates that after passing through the green rectangle room, we must eventually reach the large red room (prop_2). So the overall formula states: eventually prop_1 and then eventually prop_2, with the implication that prop_2 is reached after prop_1.\n\n2. *Explanation dictionary* \u2013\n{\n  \"progress through green rectangle room\": \"F prop_1\",\n  \"to the large red room\": \"F prop_2\"\n}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 8943, "sentence": ["go", "through", "the", "green", "room", "and", "into", "the", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "and", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F prop_1). The phrase \"and into the blue room\" means that after being in the green room, eventually the system will be in the blue room, which can be expressed as \"F prop_2\" after prop_1. Combining these, we get \"F (prop_1 and F prop_2)\".\n\n2. *Explanation dictionary* \u2013 {\"go through the green room\": \"F prop_1\", \"and into the blue room\": \"F prop_2 after prop_1\"}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 2654, "sentence": ["pass", "through", "the", "small", "yellow", "room", "to", "get", "to", "the", "large", "blue", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "small", "prop_1", "to", "get", "to", "the", "large", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_2) and ((not prop_2) U prop_1) FINISH"}
{"id": 2794, "sentence": ["go", "to", "the", "blue", "room", "via", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "via", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_2), but only after it has passed through the green room (prop_1). This can be expressed as: prop_1 holds at some point before prop_2 holds, and prop_2 eventually holds. Using temporal logic, this is \"prop_1 until prop_2\" (prop_1 U prop_2), and globally, prop_2 eventually holds (F prop_2).\n\n2. *Explanation dictionary* \u2013 {\"green room\": \"prop_1\", \"blue room\": \"prop_2\", \"go to the blue room via the green room\": \"(prop_1 U prop_2)\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 5827, "sentence": ["enter", "the", "blue", "room", "without", "crossing", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "crossing", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (not prop_2 U prop_1) FINISH"}
{"id": 4302, "sentence": ["cross", "the", "blue", "room", "only", "to", "reach", "the", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["cross", "the", "prop_1", "only", "to", "reach", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1 implies F prop_2)"}
{"id": 10182, "sentence": ["go", "to", "the", "yellow", "room", "but", "avoid", "the", "green", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (finally prop_1) and (globally not prop_2) FINISH"}
{"id": 11076, "sentence": ["enter", "the", "room", "that", "is", "not", "red", "which", "will", "lead", "to", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "room", "that", "is", "not", "prop_2", "which", "will", "lead", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* G ( (not prop_1) implies (F prop_2) ) FINISH"}
{"id": 1539, "sentence": ["please", "go", "to", "the", "green", "room", "through", "the", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["please", "go", "to", "the", "prop_2", "through", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* F (prop_2 and (prop_1 until prop_2)) FINISH"}
{"id": 9638, "sentence": ["travel", "through", "the", "yellow", "room", "into", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["travel", "through", "the", "prop_1", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1 and F prop_2)\"}\n\n3. *FINAL:* F(prop_1 and F prop_2)"}
{"id": 2155, "sentence": ["go", "to", "the", "green", "room", "without", "using", "the", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "without", "using", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(indicating being in the green room). The phrase \"without using the red room\" means that at no point before reaching the green room should the red room (prop_2) be visited. This can be expressed as: globally not prop_2 until prop_1 is reached.\n\n2. *Explanation dictionary* \u2013 {\"go to the green room\": \"prop_1\", \"without using the red room\": \"G (not prop_2) U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 7931, "sentence": ["the", "robot", "has", "to", "go", "through", "the", "red", "or", "yellow", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["the", "robot", "has", "to", "go", "through", "the", "prop_1", "or", "prop_2", "to", "get", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F) with (prop_1 or prop_2) where prop_1 = \"red room\" and prop_2 = \"yellow room\". The phrase \"to get to the blue room\" means that eventually the robot will be in the blue room, so we use finally (F)"}
{"id": 8765, "sentence": ["go", "through", "the", "yellow", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(where prop_1 = \"yellow room\"). The phrase \"to the green room\" means \"eventually be in the green room,\" represented by F prop_2 (where prop_2 = \"green room\"). The command implies that the green room is reached only after passing through the yellow room, so the green room is reached after the yellow room has been visited. This is captured by \"F (prop_1 and F prop_2)\" meaning eventually the yellow room is visited and then eventually the green room is visited afterward.\n\n2. *Explanation dictionary* \u2013\n{\n  \"yellow room\": \"prop_1\",\n  \"green room\": \"prop_2\",\n  \"go through the yellow room\": \"F prop_1\",\n  \"to the green room\": \"F prop_2\",\n  \"go through the yellow room to the green room\": \"F (prop_1 and F prop_2)\"\n}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 9632, "sentence": ["robot", "goes", "through", "green", "and", "ends", "up", "in", "blue"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["robot", "goes", "through", "prop_1", "and", "ends", "up", "in", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally(prop_1) and finally(prop_2) and (finally(prop_2) implies globally(prop_2))) FINISH"}
{"id": 6296, "sentence": ["the", "robot", "avoids", "the", "yellow", "to", "get", "to", "the", "blue"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["the", "robot", "avoids", "the", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (globally (not prop_1)) and (finally prop_2) FINISH"}
{"id": 4157, "sentence": ["go", "through", "the", "green", "room", "to", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (F (prop_1 and F prop_2)) FINISH"}
{"id": 1442, "sentence": ["move", "through", "the", "green", "or", "yellow", "rooms", "and", "enter", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "through", "the", "prop_1", "or", "prop_2", "rooms", "and", "enter", "the", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally (prop_1 or prop_2)) and (finally prop_3) FINISH"}
{"id": 3419, "sentence": ["go", "to", "the", "red", "room", "move", "the", "object", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "move", "the", "object", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and ("}
{"id": 10090, "sentence": ["enter", "the", "red", "room", "and", "then", "push", "the", "object", "into", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_1", "and", "then", "push", "the", "object", "into", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F prop_1) and (prop_1 implies F prop_2), but since we want a single formula using only the allowed operators, we can write: (F prop_1) and (G (prop_1 implies F prop_2))"}
{"id": 1923, "sentence": ["walk", "through", "any", "room", "except", "the", "blue", "room", "to", "enter", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["walk", "through", "any", "room", "except", "the", "prop_2", "to", "enter", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(represented by prop_2). Before entering the green room, the agent must walk through any room except the blue room. We represent \"walking through any room except the blue room\" as globally not being in the blue room (prop_1) until the green room (prop_2) is entered. So, \"except the blue room\" maps to \"not prop_1\", and \"walk through any room except the blue room to enter the green room\" maps to \"not prop_1 until prop_2\". Finally, since the green room must be eventually entered, we use \"finally prop_2\".\n\n2. *Explanation dictionary* \u2013\n{\n  \"blue room\": \"prop_1\",\n  \"green room\": \"prop_2\",\n  \"except the blue room\": \"not prop_1\",\n  \"walk through any room except the blue room to enter the green room\": \"(not prop_1) U prop_2\",\n  \"enter the green room\": \"prop_2\",\n  \"eventually enter the green room\": \"F prop_2\"\n}\n\n3. *FINAL:* (not prop_1)"}
{"id": 8355, "sentence": ["follow", "the", "green", "room", "to", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["follow", "the", "prop_1", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 6580, "sentence": ["go", "to", "green", "room", "but", "do", "not", "enter", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "but", "do", "not", "enter", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 3311, "sentence": ["go", "through", "either", "the", "blue", "or", "the", "yellow", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "blue_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "either", "the", "prop_1", "or", "the", "prop_2", "to", "get", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 0, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(finally) either prop_1 (blue room) or prop_2 (yellow room) must be true. The phrase \"to get to the green room\" means that eventually (finally) prop_3 (green room) must be true. To ensure that the green room is reached only after going through either the blue or yellow room, we specify that the green room is eventually reached and that before reaching the green room, the blue or yellow room must have been visited. This can be expressed as: eventually prop_3, and prop_3 is only reached after prop_1 or prop_2 has occurred. Using until, we can say that prop_3 is reached after prop_1 or prop_2: (prop_1 or prop_2) until prop_3.\n\n2. *Explanation dictionary* \u2013\n{\n  \"either the blue or the yellow room\": \"(prop_1 or prop_2)\",\n  \"go through either the blue or the yellow room\": \"F(prop_1 or prop_2)"}
{"id": 9067, "sentence": ["go", "through", "the", "yellow", "or", "red", "room", "and", "enter", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "and", "enter", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally (prop_1 or prop_2)) and (finally prop_3) FINISH"}
{"id": 6658, "sentence": ["going", "through", "the", "red", "room", "or", "the", "yellow", "room", "straight", "to", "the", "blue", "room", "avoiding", "the", "red", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["going", "through", "the", "red", "room", "or", "the", "yellow", "room", "straight", "to", "the", "prop_1", "avoiding", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "- First, eventually (prop_1 or prop_2) happens."}
{"id": 2912, "sentence": ["move", "to", "yellow", "or", "red", "room", "them", "move", "to", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "to", "prop_2", "or", "prop_1", "them", "move", "to", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "   F (prop_1 or prop_2) and G ( (not (prop_1 or prop_2)) implies (F prop_3) )"}
{"id": 8701, "sentence": ["go", "through", "the", "green", "or", "red", "room", "to", "reach", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "green_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "to", "reach", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "  \"green or red room\": \"(prop_1 or prop_2)\","}
{"id": 1183, "sentence": ["cross", "the", "blue", "room", "only", "to", "reach", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["cross", "the", "prop_1", "only", "to", "reach", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "  \"only\": \"prop_2 implies (prop_1"}
{"id": 393, "sentence": ["take", "the", "red", "or", "yellow", "room", "into", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["take", "the", "prop_1", "or", "prop_2", "into", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 2, 2, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "  \"take ... into the green room\": \"finally (prop_3 and (prop_1 or prop_2"}
{"id": 10137, "sentence": ["go", "to", "the", "red", "room", "and", "push", "the", "chair", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "push", "the", "chair", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "     \"and\": \"and\""}
{"id": 1511, "sentence": ["move", "to", "the", "room", "that", "isn", "t", "yellow", "and", "then", "move", "into", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "room", "that", "isn", "t", "prop_2", "and", "then", "move", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F (not"}
{"id": 239, "sentence": ["enter", "the", "green", "room", "without", "entering", "a", "blue", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "entering", "a", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (not prop_2 U prop_1) FINISH"}
{"id": 4108, "sentence": ["go", "into", "the", "blue", "room", "and", "then", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "and", "then", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 and finally prop_2) FINISH"}
{"id": 10023, "sentence": ["go", "to", "red", "room", "without", "going", "to", "green", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "without", "going", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(assuming prop_1 = \"in red room\"). The phrase \"without going to green room\" means that at no point before reaching the red room should the green room be visited, so globally not prop_2 (assuming prop_2 = \"in green room\") until finally prop_1.\n\n2. *Explanation dictionary* \u2013 {\"go to red room\": \"F prop_1\", \"without going to green room\": \"G (not prop_2) U F prop_1\"}\n\n3. *FINAL:* (G (not prop_2) U F prop_1)"}
{"id": 1005, "sentence": ["go", "to", "the", "yellow", "room", "then", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 1838, "sentence": ["go", "to", "the", "green", "room", "but", "do", "not", "use", "the", "red", "room", "to", "get", "there"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "use", "the", "red", "prop_2", "get", "there"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_2) should never be visited. This is captured by globally not prop_2 until prop_1 is reached, i.e., (not prop_2) U prop_1. Combining these, the entire formula states that eventually prop_1 holds, and until then, prop_2 never holds.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the green room\": \"finally prop_1\",\n  \"do not use the red room to get there\": \"(not prop_2) U prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 3861, "sentence": ["avoid", "the", "yellow", "room", "and", "move", "to", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "and", "move", "to", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (globally (not prop_1)) and (finally prop_2) FINISH"}
{"id": 1610, "sentence": ["avoiding", "blue", "navigate", "to", "green"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoiding", "prop_2", "navigate", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 2, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (G (not prop_1)) and (F prop_2) FINISH"}
{"id": 10536, "sentence": ["go", "to", "the", "blue", "room", "through", "red", "and", "green"], "tl": ["finally", "(", "(", "red_room", "or", "green_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "to", "the", "prop_3", "through", "red", "prop_1", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 3, 3, 0, 1, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "  \"through red and green\": \"(prop_2 and prop_3) U prop_1\""}
{"id": 7480, "sentence": ["move", "through", "the", "blue", "or", "red", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "through", "the", "prop_2", "or", "prop_1", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F (prop_1 or prop_2)) and (F prop_3) FINISH"}
{"id": 1412, "sentence": ["move", "the", "robot", "to", "the", "small", "red", "or", "green", "room", "and", "then", "to", "the", "large", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "red_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "the", "robot", "to", "the", "small", "prop_2", "or", "prop_1", "and", "then", "to", "the", "large", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1 or prop_2).\n- \"then to the large blue room\" means after the first event, eventually reach the large blue room, represented as prop_3. So after the first event, eventually prop_3 holds. This is expressed as (F (prop_1 or prop_2)) and then (F prop_3), but since \"and then\" implies the second event happens after the first, we use until to enforce ordering: the second event happens after the first.\n- To express \"then,\" we say: first eventually (prop_1 or prop_2), and after that, eventually prop_3. This can be captured as: (F (prop_1 or prop_2)) and ( (not prop_3) U prop_3 )"}
{"id": 3817, "sentence": ["go", "through", "either", "the", "yellow", "or", "the", "red", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "either", "the", "prop_2", "or", "the", "prop_1", "to", "get", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 0, 1, 1, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally (prop_1 or prop_2)) and (finally prop_3) FINISH"}
{"id": 2848, "sentence": ["pass", "through", "the", "non", "red", "room", "to", "reach", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["pass", "through", "the", "non", "prop_2", "to", "reach", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(not prop_1, where prop_1 = \"red room\") until we reach the green room (prop_2 = \"green room\"). The phrase \"to reach the green room\" indicates that eventually the green room is reached. So the formula states: globally, until we reach the green room, the room is not red, and eventually the green room is reached.\n\n2. *Explanation dictionary* \u2013\n{\n  \"non red room\": \"not prop_1\",\n  \"green room\": \"prop_2\",\n  \"pass through the non red room to reach the green room\": \"(not prop_1) U prop_2\"\n}\n\n3. *FINAL:* (not prop_1)"}
{"id": 1015, "sentence": ["go", "to", "the", "blue", "room", "while", "not", "passing", "through", "the", "yellow", "room", "on", "the", "way"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "not", "passing", "through", "the", "yellow", "prop_2", "the", "way"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(where prop_1 = \"in blue room\"). The phrase \"while not passing through the yellow room on the way\" means that until reaching the blue room, the yellow room is never entered, represented as globally (not prop_2) until prop_1 (where prop_2 = \"in yellow room\").\n\n2. *Explanation dictionary* \u2013 {\"go to the blue room\": \"F prop_1\", \"not passing through the yellow room on the way\": \"G (not prop_2) U prop_1\"}\n\n3. *FINAL:* (G (not prop_2) U prop_1)"}
{"id": 1557, "sentence": ["move", "through", "the", "green", "or", "red", "rooms", "and", "enter", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "red_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "through", "the", "prop_1", "or", "prop_2", "rooms", "and", "enter", "the", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally (prop_1 or prop_2)) and (finally prop_3) FINISH"}
{"id": 8773, "sentence": ["move", "to", "the", "green", "room", "by", "going", "through", "the", "yellow", "or", "blue", "room"], "tl": ["finally", "(", "(", "blue_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "to", "the", "prop_3", "by", "going", "through", "the", "yellow", "prop_2", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 3, 3, 0, 0, 0, 0, 2, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and ((prop_2 or prop_3) U prop_1) FINISH"}
{"id": 3029, "sentence": ["go", "to", "green", "via", "green", "or", "yellow", "but", "not", "red"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "green", "via", "prop_1", "or", "yellow", "but", "not", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (G (not prop_3)) and (( (prop_1 or prop_2) ) U prop_1) and (F prop_1) FINISH"}
{"id": 5137, "sentence": ["move", "through", "a", "red", "room", "and", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "a", "prop_1", "and", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1 U prop_2)"}
{"id": 5861, "sentence": ["go", "thru", "the", "red", "to", "get", "to", "the", "green"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "thru", "the", "prop_1", "to", "get", "to", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 5429, "sentence": ["move", "through", "the", "green", "room", "to", "the", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "the", "prop_1", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) and finally prop_2 FINISH"}
{"id": 6184, "sentence": ["move", "toward", "the", "red", "room", "then", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "toward", "the", "prop_1", "then", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1) U (prop_2) FINISH"}
{"id": 7210, "sentence": ["go", "through", "the", "blue", "or", "red", "room", "to", "reach", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "to", "reach", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* ((prop_1 or prop_2) until prop_3) FINISH"}
{"id": 3243, "sentence": ["go", "through", "the", "yellow", "or", "red", "room", "to", "reach", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "to", "reach", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F (prop_1 or prop_2)) and (F prop_3) FINISH"}
{"id": 8874, "sentence": ["took", "the", "yellow", "room", "to", "the", "red", "room", "and", "the", "green", "room", "to", "the", "red", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["took", "the", "prop_2", "to", "the", "red", "room", "and", "the", "green", "prop_1", "the", "red", "room", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_1 and prop_2) FINISH"}
{"id": 5617, "sentence": ["go", "to", "red", "room", "and", "push", "the", "chair", "over", "and", "push", "it", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "and", "push", "the", "chair", "over", "and", "push", "it", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally(prop_1) and finally(prop_2) and finally(prop_3)) FINISH"}
{"id": 2678, "sentence": ["go", "to", "the", "blue", "room", "and", "then", "to", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "then", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 and (not prop_2 U prop_1)) and F prop_2 FINISH"}
{"id": 3154, "sentence": ["go", "through", "the", "green", "room", "to", "the", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (F prop_1 implies F prop_2) FINISH"}
{"id": 695, "sentence": ["pass", "through", "the", "green", "or", "red", "room", "and", "enter", "into", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "red_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["pass", "through", "the", "prop_1", "or", "prop_2", "and", "enter", "into", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally (prop_1 or prop_2)) and (finally prop_3) FINISH"}
{"id": 7993, "sentence": ["pass", "through", "the", "red", "rom", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "prop_1", "rom", "to", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 implies F prop_2) FINISH"}
{"id": 10665, "sentence": ["go", "to", "green", "without", "going", "through", "yellow"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "without", "going", "through", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(green) is true, so we use finally(prop_1). The phrase \"without going through yellow\" means that until we reach green, yellow (prop_2) must never be true. This is expressed as (not prop_2) until prop_1.\n\n2. *Explanation dictionary* \u2013 {\"go to green\": \"F prop_1\", \"without going through yellow\": \"(not prop_2) U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 6144, "sentence": ["push", "chair", "from", "red", "room", "to", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["push", "chair", "from", "prop_1", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) and finally prop_2 FINISH"}
{"id": 9062, "sentence": ["robot", "goes", "through", "green", "and", "ends", "up", "in", "yellow"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["robot", "goes", "through", "prop_1", "and", "ends", "up", "in", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "  \"robot goes through green and ends up in yellow\": \"finally(prop_1 and finally(prop_2 and globally(prop_2)))\""}
{"id": 9053, "sentence": ["go", "from", "the", "blue", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "from", "the", "blue", "prop_2", "to", "the", "green", "room"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), eventually the system reaches the green room (prop_2). So, \"from the blue room\" maps to prop_1 being true now, and \"to the green room\" maps to eventually prop_2 being true. The overall formula states that whenever we are in the blue room, eventually we will be in the green room.\n\n2. *Explanation dictionary* \u2013 {\"from the blue room\": \"prop_1\", \"to the green room\": \"F prop_2\"}\n\n3. *FINAL:* (prop_1 implies F prop_2)"}
{"id": 9256, "sentence": ["move", "from", "the", "red", "box", "into", "the", "green", "box", "by", "way", "of", "the", "blue", "or", "yellow", "box", "avoiding", "the", "yellow", "box"], "tl": ["finally", "(", "(", "yellow_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "from", "the", "red", "box", "into", "the", "prop_3", "box", "by", "way", "of", "the", "prop_2", "or", "yellow", "box", "avoiding", "the", "prop_1", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(red box).\n- \"into the green box\" means eventually reaching prop_2 (green box).\n- \"by way of the blue or yellow box\" means that on the path from red to green, we must pass through prop_3 (blue box) or prop_4 (yellow box).\n- \"avoiding the yellow box\" means never being in prop_4 (yellow box). Since \"by way of the blue or yellow box\" conflicts with \"avoiding the yellow box,\" we interpret \"by way of the blue or yellow box\" as \"by way of the blue box\" only, because yellow is to be avoided.\nThus, the path is: start at red (prop_1), eventually reach green (prop_2), passing through blue (prop_3), and never be in yellow (prop_4).\nThis can be expressed as:\n- Globally, if we start at red (prop_1), then eventually (F)"}
{"id": 50, "sentence": ["pass", "through", "either", "the", "blue", "or", "red", "room", "to", "reach", "the", "yellow", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["pass", "through", "either", "the", "prop_2", "or", "prop_1", "to", "reach", "the", "yellow", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (finally prop_3) and ((not prop_3) until (prop_1 or prop_2)) FINISH"}
{"id": 10626, "sentence": ["go", "to", "the", "green", "room", "through", "yellow"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "through", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(finally) the system reaches the green room (prop_1), and on the way to the green room, it must pass through yellow (prop_2). This can be expressed as: eventually prop_1, and until prop_1 is reached, prop_2 must hold at some point. More precisely, \"through yellow\" means that before reaching the green room, yellow must occur. So, we can say: eventually prop_1, and before that, eventually prop_2 holds. This can be captured by: finally prop_1 and finally prop_2 and prop_2 occurs before prop_1. Using until, we can say: prop_2 holds until prop_1, but that would mean prop_2 holds continuously until prop_1, which is stronger than needed. Instead, we can say: finally prop_2 and finally prop_1 and prop_2 occurs before prop_1. To express \"prop_2 occurs before prop_1\", we can say: not prop_1 until prop_2, and then finally prop_1. So the formula is: (F prop_2)"}
{"id": 2166, "sentence": ["go", "through", "either", "the", "red", "or", "blue", "room", "to", "reach", "the", "yellow", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "either", "the", "prop_1", "or", "prop_2", "to", "reach", "the", "yellow", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F (prop_1 or prop_2)) and (F prop_3) FINISH"}
{"id": 5055, "sentence": ["go", "to", "the", "yellow", "room", "but", "do", "not", "pass", "through", "the", "red", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "pass", "through", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G not prop_2) FINISH"}
{"id": 4870, "sentence": ["go", "towards", "the", "yellow", "room", "while", "avoiding", "the", "blue", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "towards", "the", "prop_1", "while", "avoiding", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_2) is not entered. So, \"avoiding the blue room\" maps to globally not prop_2 until prop_1 is reached.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go towards the yellow room\": \"F prop_1\",\n  \"avoiding the blue room\": \"G (not prop_2) until prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 663, "sentence": ["go", "through", "the", "red", "or", "blue", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "prop_2", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(finally) the system will be in either the red room or the blue room, represented as (prop_1 or prop_2). The phrase \"to the green room\" means that after going through the red or blue room, the system will eventually reach the green room (prop_3). This can be expressed as: eventually (red or blue room) and then eventually green room. Since temporal logic does not have explicit sequencing, we express that eventually the green room is reached, and before that, eventually the red or blue room is reached. One way is to say: finally (red or blue room) and finally green room, with the additional constraint that green room is reached only after red or blue room. This can be expressed as: (finally (red or blue room)) and (finally (green room)) and globally (if green room is reached, then previously red or blue room was reached). But since we only have the given operators, a simpler approach is: finally (red or blue room) and finally (green room) and globally (not green room until (red or blue room))"}
{"id": 5860, "sentence": ["pass", "thru", "either", "the", "red", "or", "green", "box", "to", "get", "to", "the", "blue", "box"], "tl": ["finally", "(", "(", "red_room", "or", "green_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["pass", "thru", "either", "the", "prop_1", "or", "prop_2", "box", "to", "get", "to", "the", "prop_3", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 3, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(finally) either prop_1 (red box) or prop_2 (green box) will be true. The phrase \"to get to the blue box\" means that eventually (finally) prop_3 (blue box) will be true. Since the command implies that passing through the red or green box should happen before reaching the blue box, we express that the blue box is eventually reached, and before that, the red or green box is eventually passed through. This can be captured by stating that eventually prop_3 holds, and before that, eventually prop_1 or prop_2 holds. One way to express this is: eventually (prop_1 or prop_2) and eventually prop_3, with the additional constraint that prop_3 is not reached before prop_1 or prop_2. This can be expressed as: (F (prop_1 or prop_2)) and (F prop_3) and (not prop_3 until (prop_1 or prop_2)).\n\n2. *Explanation dictionary* \u2013\n{\n  \"pass thru either the red or green box\": \"F (prop_1 or prop_2)"}
{"id": 9123, "sentence": ["enter", "the", "yellow", "or", "red", "room", "and", "proceed", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["enter", "the", "prop_2", "or", "prop_1", "and", "proceed", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) and F prop_3 FINISH"}
{"id": 7883, "sentence": ["the", "robot", "avoids", "the", "green", "room", "in", "going", "towards", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["the", "robot", "avoids", "the", "prop_2", "in", "going", "towards", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (G (not prop_1)) and (F prop_2) FINISH"}
{"id": 3926, "sentence": ["avoiding", "yellow", "navigate", "to", "green"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoiding", "prop_2", "navigate", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 2, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (G not prop_1) and (F prop_2) FINISH"}
{"id": 995, "sentence": ["avoid", "the", "blue", "room", "to", "reach", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "to", "reach", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (G (not prop_1)) and (F prop_2) FINISH"}
{"id": 6948, "sentence": ["first", "enter", "the", "yellow", "room", "and", "then", "proceed", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["first", "enter", "the", "prop_1", "and", "then", "proceed", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* ((prop_1 until prop_2) and finally prop_2) FINISH"}
{"id": 1077, "sentence": ["go", "through", "square", "that", "is", "not", "green", "to", "get", "the", "yellow", "rectangular"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "square", "that", "is", "not", "prop_2", "to", "get", "the", "prop_1", "rectangular"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "  \"square that is not green\": \"(prop_1 and not prop_2"}
{"id": 8936, "sentence": ["enter", "the", "room", "through", "the", "door", "that", "is", "not", "blue", "drive", "through", "the", "room", "and", "exit", "the", "other", "door", "to", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "room", "through", "the", "door", "that", "is", "not", "blue", "drive", "through", "the", "prop_2", "and", "exit", "the", "other", "door", "to", "the", "green", "room"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(finally) entering the room (prop_1) through a door that is not blue (not prop_2). So, \"enter through door not blue\" maps to F (prop_1 and not prop_2).\n\n- \"drive through the room and exit the other door to the green room\": This implies that after entering, we drive through the room (prop_3) and then exit through the other door (prop_4) leading to the green room (prop_5). This can be represented as: after entering, eventually drive through the room and then eventually exit through the other door to the green room. So, F (prop_3 and F (prop_4 and prop_5)).\n\nCombining both parts with \"and\" gives the full formula.\n\n2. *Explanation dictionary*:\n\n{\n  \"enter the room through the door that is not blue\": \"F (prop_1 and not prop_2)"}
{"id": 434, "sentence": ["enter", "the", "yellow", "or", "green", "room", "and", "then", "continue", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["enter", "the", "prop_2", "or", "prop_1", "and", "then", "continue", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1 or prop_2). The phrase \"and then continue to the blue room\" means that after entering the yellow or green room, eventually the blue room is entered. This is captured by (prop_1 or prop_2) U prop_3, but since \"and then\" implies a sequence, we use F (prop_1 or prop_2) and then after that, F prop_3. To ensure the blue room is entered only after the yellow or green room, we use (F (prop_1 or prop_2)) and (F prop_3) and globally (not prop_3 until (prop_1 or prop_2)).\n\n2. *Explanation dictionary* \u2013\n{\n  \"enter the yellow or green room\": \"F (prop_1 or prop_2)\",\n  \"and then continue to the blue room\": \"F prop_3\",\n  \"blue room entered only after yellow or green room\": \"G (not prop_3 until (prop_1 or prop_2))"}
{"id": 7286, "sentence": ["avoid", "the", "blue", "room", "to", "get", "to", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "to", "get", "to", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (G (not prop_1)) and (F prop_2) FINISH"}
{"id": 142, "sentence": ["go", "through", "the", "blue", "room", "to", "enter", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "enter", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F) prop_2 (entering green room), and before that, the blue room (prop_1) must be visited. Using until (U), we say that prop_1 (blue room) holds until prop_2 (green room) is true.\n\n2. *Explanation dictionary* \u2013 {\"go through the blue room\": \"prop_1\", \"enter the green room\": \"prop_2\", \"go through the blue room to enter the green room\": \"prop_1 U prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 8423, "sentence": ["enter", "the", "yellow", "room", "without", "entering", "a", "red", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "entering", "a", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_2) be entered. This can be expressed as: prop_1 occurs eventually (F prop_1), and until prop_1 occurs, prop_2 never occurs (G (not prop_2) until prop_1).\n\n2. *Explanation dictionary* \u2013\n{\n  \"enter the yellow room\": \"prop_1\",\n  \"entering a red room\": \"prop_2\",\n  \"without entering a red room\": \"G (not prop_2) until prop_1\"\n}\n\n3. *FINAL:* (G (not prop_2) U prop_1)"}
{"id": 931, "sentence": ["the", "robot", "moves", "towards", "the", "yellow", "room", "through", "the", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["the", "robot", "moves", "towards", "the", "prop_2", "through", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F) the robot reaches the yellow room (prop_1), and until then (U), the robot is in the blue room (prop_2).\n\n2. *Explanation dictionary* \u2013 {\"the robot moves towards the yellow room\": \"prop_1\", \"through the blue room\": \"prop_2\"}\n\n3. *FINAL:* (prop_2 U prop_1)"}
{"id": 10636, "sentence": ["go", "through", "either", "the", "red", "or", "blue", "room", "to", "reach", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "either", "the", "prop_1", "or", "prop_2", "to", "reach", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1 or prop_2), where prop_1 = \"in red room\" and prop_2 = \"in blue room\". The phrase \"to reach the green room\" means eventually reaching the green room, represented as F prop_3, where prop_3 = \"in green room\". Since the command implies that the green room is reached after going through either the red or blue room, we express that eventually the green room is reached and before that, the red or blue room is visited. This can be captured by stating that eventually the green room is reached, and until then, the red or blue room is visited. So, the formula is F prop_3 and (not prop_3) U (prop_1 or prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n  \"either the red or blue room\": \"(prop_1 or prop_2)"}
{"id": 10069, "sentence": ["avoid", "the", "yellow", "room", "and", "end", "at", "the", "red", "rectangular", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "and", "end", "at", "the", "red", "rectangular", "room", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (globally (not prop_1)) and (finally prop_2 and globally prop_2) FINISH"}
{"id": 10851, "sentence": ["move", "to", "blue", "room", "then", "move", "to", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "prop_1", "then", "move", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (not prop_2 until prop_1) FINISH"}
{"id": 6394, "sentence": ["travel", "through", "the", "green", "room", "to", "the", "yellow", "rectangular", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["travel", "through", "the", "prop_1", "to", "the", "yellow", "rectangular", "room", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1), and while traveling, it must be in the green room continuously until reaching the yellow rectangular room.\n- \"to the yellow rectangular room\": Eventually, the system reaches the yellow rectangular room (prop_2).\nThus, the system must eventually reach prop_2, and until then, it must be in prop_1.\n\n2. *Explanation dictionary* \u2013\n{\n  \"green room\": \"prop_1\",\n  \"yellow rectangular room\": \"prop_2\",\n  \"travel through the green room to the yellow rectangular room\": \"prop_1 U prop_2\"\n}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 4308, "sentence": ["go", "in", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "in", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) holds. Since the command is about eventually being in the green room, we use the \"finally\" (F)"}
{"id": 637, "sentence": ["go", "to", "the", "red", "area", "through", "blue", "area"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "area", "through", "prop_1", "area"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1), but before that, it must pass through the blue area (prop_2). This can be expressed as: the red area is eventually reached (F prop_1), and until then, the blue area is visited (prop_2 holds until prop_1). So, the formula is (prop_2 U prop_1).\n\n2. *Explanation dictionary* \u2013 {\"red area\": \"prop_1\", \"blue area\": \"prop_2\", \"go to the red area through blue area\": \"(prop_2 U prop_1)\"}\n\n3. *FINAL:* (prop_2 U prop_1)"}
{"id": 6492, "sentence": ["go", "to", "the", "red", "room", "and", "then", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "then", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1) U (prop_2) FINISH"}
{"id": 4965, "sentence": ["move", "to", "red", "room", "move", "to", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "prop_1", "move", "to", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and ((not prop_2) U prop_1) and (F prop_2) FINISH"}
{"id": 8622, "sentence": ["pass", "through", "the", "green", "rom", "to", "the", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "prop_1", "rom", "to", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1 and F(prop_2))\"}\n\n3. *FINAL:* F(prop_1 and F(prop_2))"}
{"id": 3795, "sentence": ["do", "not", "take", "the", "red", "room", "to", "reach", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["do", "not", "take", "the", "prop_2", "to", "reach", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (not prop_1) and (F prop_2) FINISH"}
{"id": 6910, "sentence": ["move", "to", "the", "red", "room", "push", "the", "chair", "back", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "push", "the", "chair", "back", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally prop_1) and (finally (prop_1 implies finally prop_2)) FINISH"}
{"id": 5839, "sentence": ["move", "from", "the", "red", "box", "into", "the", "green", "box", "by", "way", "of", "the", "blue", "or", "yellow", "box", "avoiding", "the", "yellow", "box"], "tl": ["finally", "(", "(", "yellow_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "from", "the", "red", "box", "into", "the", "prop_3", "box", "by", "way", "of", "the", "prop_2", "or", "yellow", "box", "avoiding", "the", "prop_1", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(red box).\n- \"into the green box\" means eventually reaching prop_2 (green box).\n- \"by way of the blue or yellow box\" means that on the path from red to green, we must pass through prop_3 (blue box) or prop_4 (yellow box).\n- \"avoiding the yellow box\" means never being in prop_4 (yellow box). Since \"by way of ... yellow box\" conflicts with \"avoiding the yellow box,\" we interpret \"by way of the blue or yellow box\" as \"by way of the blue box\" only, because yellow is to be avoided. So effectively, the path must go through the blue box (prop_3) but never the yellow box (prop_4).\n- The formula ensures: starting at red (prop_1), eventually reach green (prop_2), passing through blue (prop_3) on the way, and never visiting yellow (prop_4)"}
{"id": 10237, "sentence": ["enter", "blue", "room", "through", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "prop_2", "through", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 2, 2, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_2) and (prop_1 U prop_2) FINISH"}
{"id": 10068, "sentence": ["go", "through", "the", "yellow", "room", "while", "moving", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "while", "moving", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1 U prop_2)"}
{"id": 8649, "sentence": ["go", "through", "the", "green", "or", "the", "yellow", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "the", "prop_2", "to", "get", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_3). To get there, one must go through either the green room (prop_1) or the yellow room (prop_2). This means that before eventually reaching the blue room, the system must have passed through either the green or yellow room. We can express this as: eventually (prop_3) and before that, either prop_1 or prop_2 must have occurred. Using temporal logic, this can be captured by stating that prop_3 eventually holds (F prop_3), and that prop_3 is preceded by prop_1 or prop_2. Since LTL does not have past operators, we can express the requirement as: eventually prop_3, and globally, if prop_3 has not yet occurred, then eventually prop_1 or prop_2 must occur before prop_3. Alternatively, a simpler approach is to say: eventually prop_3, and before that, eventually prop_1 or prop_2. So the formula is: (F prop_3) and (F prop_1 or F prop_2)"}
{"id": 9628, "sentence": ["going", "through", "the", "red", "room", "or", "the", "yellow", "room", "straight", "to", "the", "blue", "room", "avoiding", "the", "red", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["going", "through", "the", "red", "room", "or", "the", "yellow", "room", "straight", "to", "the", "prop_1", "avoiding", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F (prop_1 or prop_2)) and (next prop_3) and (G not prop_1) FINISH"}
{"id": 7989, "sentence": ["pass", "through", "either", "the", "yellow", "or", "red", "room", "to", "reach", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["pass", "through", "either", "the", "prop_2", "or", "prop_1", "to", "reach", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F (prop_1 or prop_2)) and (F prop_3) and (not prop_3 U (prop"}
{"id": 6324, "sentence": ["move", "to", "the", "red", "room", "move", "the", "chair", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "move", "the", "chair", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F) for both. The overall formula is the conjunction of these two eventualities.\n\n2. *Explanation dictionary* \u2013 {\"move to the red room\": \"F prop_1\", \"move the chair to the blue room\": \"F prop_2\"}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 953, "sentence": ["enter", "the", "yellow", "room", "through", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_2", "through", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* F (prop_1 and next prop_2) FINISH"}
{"id": 10370, "sentence": ["go", "to", "the", "blue", "room", "but", "do", "not", "use", "the", "green", "room", "to", "get", "there"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "use", "the", "green", "prop_2", "get", "there"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2 U prop_1)) FINISH"}
{"id": 3571, "sentence": ["go", "to", "the", "blue", "room", "only", "and", "then", "the", "red", "room", "only"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "only", "and", "then", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* ( (prop_1 and not prop_2) and ( (not (prop_2 and not prop_1)) U (prop_2 and not prop_1) ) ) FINISH"}
{"id": 608, "sentence": ["go", "through", "the", "passage", "into", "the", "blue", "room", "but", "only", "if", "you", "go", "through", "a", "green", "or", "red", "room", "first"], "tl": ["finally", "(", "(", "red_room", "or", "green_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "passage", "into", "the", "prop_3", "but", "only", "if", "you", "go", "through", "a", "green", "prop_2", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(green room) or prop_3 (red room) must have occurred.\n- The phrase \"but only if\" indicates an implication: going through the passage into the blue room implies that previously a green or red room was visited.\n- Since temporal logic is future-oriented, to express \"first\" we say that prop_1 can only happen if previously prop_2 or prop_3 happened. This can be captured by: prop_1 implies that previously (before prop_1)"}
{"id": 3660, "sentence": ["cross", "the", "blue", "room", "only", "to", "reach", "the", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["cross", "the", "prop_1", "only", "to", "reach", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F prop_2), then it must have been the case that the blue room was crossed before (F prop_1). Since LTL does not have past operators, we express this as: globally, if prop_2 eventually happens, then prop_1 must have happened at some point before or at the same time. This is captured by: G (F prop_2 implies F prop_1).\n\n2. *Explanation dictionary* \u2013\n{\n  \"cross the blue room\": \"prop_1\",\n  \"reach the yellow room\": \"prop_2\",\n  \"only\": \"F prop_2 implies F prop_1\"\n}\n\n3. *FINAL:* G (F prop_2 implies F prop_1)"}
{"id": 9463, "sentence": ["avoid", "red", "area", "on", "way", "to", "green", "area", "each", "time"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "prop_2", "area", "on", "way", "to", "prop_1", "area", "each", "time"], "lifted_sentence_prop_ids": [0, 2, 0, 0, 0, 0, 1, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* G ((F prop_2) implies (not prop_1 U prop_2)) FINISH"}
{"id": 7247, "sentence": ["don", "t", "go", "through", "the", "red", "room", "towards", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["don", "t", "go", "through", "the", "prop_2", "towards", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1 and (not prop_2 until prop_1)) and eventually prop_2 after prop_1\", but to keep it simple, we say \"eventually prop_1 before prop_2\". The negation of this is \"not (F (prop_1 and (not prop_2 until prop_1) and F prop_2))"}
{"id": 4737, "sentence": ["go", "to", "the", "blue", "room", "without", "going", "through", "the", "green", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "without", "going", "through", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(blue room). The phrase \"without going through the green room\" means that at no point before reaching the blue room should the green room (prop_2) be visited. This is captured by globally not prop_2 until prop_1 is reached.\n\n2. *Explanation dictionary* \u2013 {\"go to the blue room\": \"F prop_1\", \"without going through the green room\": \"G (not prop_2) U prop_1\"}\n\n3. *FINAL:* (G (not prop_2) U prop_1)"}
{"id": 9347, "sentence": ["cross", "the", "blue", "room", "only", "to", "reach", "the", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["cross", "the", "prop_1", "only", "to", "reach", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (G (prop_2 implies prop_1)) and (G (prop_1 implies F prop_2)) FINISH"}
{"id": 5065, "sentence": ["travel", "through", "the", "blue", "room", "into", "the", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["travel", "through", "the", "prop_1", "into", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1), and then \"into the red room\" means eventually after that, being in the red room (prop_2). So the formula states that eventually prop_1 holds, and from that point, eventually prop_2 holds.\n\n2. *Explanation dictionary* \u2013 {\"travel through the blue room\": \"F prop_1\", \"into the red room\": \"F prop_2\"}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 8685, "sentence": ["go", "through", "the", "red", "or", "green", "room", "to", "reach", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "green_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "prop_2", "to", "reach", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "  \"red or green room\": \"(prop_1 or prop_2)\","}
{"id": 4933, "sentence": ["go", "to", "the", "blue", "room", "while", "avoiding", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (not(prop_2)) until prop_1 FINISH"}
{"id": 11046, "sentence": ["move", "to", "the", "red", "room", "move", "to", "the", "red", "chair", "move", "the", "red", "chair", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "red", "room", "move", "to", "the", "red", "chair", "move", "the", "prop_1", "chair", "to", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(finally) reaching the red room, so F prop_1, where prop_1 = \"in red room\".\n- \"move to the red chair\": After reaching the red room, eventually move to the red chair, so after F prop_1, eventually F prop_2, where prop_2 = \"at red chair\".\n- \"move the red chair to the blue room\": After being at the red chair, eventually move the red chair to the blue room, so after F prop_2, eventually F prop_3, where prop_3 = \"red chair in blue room\".\n\nSince these are sequential, we can express that eventually prop_1 holds, and after that eventually prop_2 holds, and after that eventually prop_3 holds.\n\nThis can be expressed as: F prop_1 and (prop_1 \u2192 F prop_2) and (prop_2 \u2192 F prop_3)"}
{"id": 2684, "sentence": ["go", "through", "the", "opposite", "of", "the", "yellow", "room", "to", "reach", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "opposite", "of", "the", "prop_2", "to", "reach", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F (not prop_1)) and (F prop_2) FINISH"}
{"id": 10528, "sentence": ["go", "to", "the", "blue", "but", "do", "not", "go", "through", "green"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "go", "through", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (not prop_2 U prop_1) FINISH"}
{"id": 5338, "sentence": ["progress", "through", "green", "rectangle", "room", "to", "the", "large", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["progress", "through", "prop_1", "rectangle", "room", "to", "the", "large", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1), and from there, eventually reach the large blue room (prop_2). This can be expressed as: eventually prop_1, and from then on, eventually prop_2.\n\n2. *Explanation dictionary* \u2013\n{\n  \"progress through green rectangle room\": \"F prop_1\",\n  \"to the large blue room\": \"F prop_2\"\n}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 9165, "sentence": ["to", "reach", "the", "blue", "go", "through", "the", "yellow"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["to", "reach", "the", "prop_2", "go", "through", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(blue) holds, so F prop_1; \"go through the yellow\" means that before reaching blue, yellow (prop_2) must hold at some point, so prop_2 holds until prop_1, i.e., prop_2 U prop_1.\n\n2. *Explanation dictionary* \u2013 {\"to reach the blue\": \"F prop_1\", \"go through the yellow\": \"prop_2 U prop_1\"}\n\n3. *FINAL:* (prop_2 U prop_1)"}
{"id": 3034, "sentence": ["get", "to", "the", "green", "area", "by", "avoiding", "the", "blue", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["get", "to", "the", "prop_1", "area", "by", "avoiding", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (G (not prop_2)) and (F prop_1) FINISH"}
{"id": 7523, "sentence": ["without", "stepping", "on", "yellow", "spaces", "move", "into", "the", "blue", "room", "then", "stop", "once", "you", "enter", "it"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["without", "stepping", "on", "prop_2", "spaces", "move", "into", "the", "prop_1", "then", "stop", "once", "you", "enter", "it"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (globally (not prop_1)) and (finally prop"}
{"id": 5007, "sentence": ["travel", "through", "the", "blue", "room", "into", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["travel", "through", "the", "prop_1", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1 and F prop_2)\"}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 5417, "sentence": ["enter", "the", "blue", "room", "by", "going", "though", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_2", "by", "going", "though", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(enter blue room) holds, and before that, prop_1 (enter red room) must have occurred. Using temporal logic, this is captured by: prop_1 holds until prop_2 holds, and eventually prop_2 holds.\n\n2. *Explanation dictionary* \u2013\n{\n  \"enter the red room\": \"prop_1\",\n  \"enter the blue room\": \"prop_2\",\n  \"by going through the red room\": \"prop_1 U prop_2\"\n}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 6899, "sentence": ["go", "to", "yellow", "but", "not", "through", "red"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "but", "not", "through", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* ((not prop_2) U prop_1) and F prop_1 FINISH"}
{"id": 10946, "sentence": ["always", "walk", "through", "the", "blue", "room", "to", "get", "to", "the", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["always", "walk", "through", "the", "prop_1", "to", "get", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_2), you must always walk through the blue room (prop_1) beforehand. This can be expressed as: globally, if eventually prop_2 is true, then prop_1 must hold until prop_2 is reached.\n\n2. *Explanation dictionary* \u2013\n{\n  \"always\": \"G\",\n  \"walk through the blue room\": \"prop_1\",\n  \"get to the red room\": \"prop_2\"\n}\n\n3. *FINAL:* G (prop_1 U prop_2)"}
{"id": 3002, "sentence": ["never", "follow", "red", "path", "to", "reach", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["never", "follow", "prop_2", "path", "to", "reach", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F prop_2), it must be done without ever following the red path (G not prop_1). This can be expressed as: globally, if eventually prop_2 holds, then globally not prop_1 holds until prop_2 is reached.\n\n2. *Explanation dictionary* \u2013\n{\n  \"never follow red path\": \"G (not prop_1)\",\n  \"reach green room\": \"F prop_2\",\n  \"never follow red path to reach green room\": \"G (not prop_1) U prop_2\"\n}\n\n3. *FINAL:* G (not prop_1)"}
{"id": 5246, "sentence": ["avoid", "the", "yellow", "room", "and", "end", "at", "the", "blue", "rectangular", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "and", "end", "at", "the", "blue", "rectangular", "room", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (globally (not prop_1)) and (finally prop_2 and globally prop_2) FINISH"}
{"id": 1881, "sentence": ["avoid", "the", "yellow", "room", "and", "enter", "the", "yellow", "room", "through", "either", "the", "red", "or", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["avoid", "the", "yellow", "room", "and", "enter", "the", "prop_3", "through", "either", "the", "red", "prop_1", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (globally (not prop_1)) and (globally (next prop_1 implies (prop_2 or prop_3))) FINISH"}
{"id": 2696, "sentence": ["take", "the", "red", "or", "blue", "room", "into", "the", "yellow", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["take", "the", "prop_1", "or", "prop_2", "into", "the", "yellow", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 2, 2, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "  \"red or blue room\": \"(prop_1 or prop_2)\","}
{"id": 4632, "sentence": ["pass", "through", "either", "the", "blue", "or", "yellow", "room", "to", "reach", "the", "green", "room"], "tl": ["finally", "(", "(", "yellow_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["pass", "through", "either", "the", "prop_2", "or", "prop_1", "to", "reach", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F (prop_1 or prop_2)) and F prop_3 FINISH"}
{"id": 7772, "sentence": ["head", "to", "the", "blue", "rectangular", "room", "without", "passing", "through", "a", "green", "square", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["head", "to", "the", "blue", "rectangular", "room", "without", "passing", "through", "a", "green", "square", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (G (not prop_2) U prop_1) and F prop_1 FINISH"}
{"id": 8027, "sentence": ["go", "to", "yellow", "room", "go", "to", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "go", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F(prop_1) and (prop_1 implies F(prop_2))) FINISH"}
{"id": 3009, "sentence": ["go", "to", "red", "room", "push", "chair", "to", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "push", "chair", "to", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(being in the red room) is true: F prop_1. Then, after that, \"push chair to blue room\" means eventually reaching a state where prop_2 (chair is in blue room) is true. To express the sequence, we use the until operator: the first task holds until the second task eventually happens. More precisely, we want: first, eventually prop_1, and after that, eventually prop_2. This can be expressed as: (F prop_1) and (F prop_2), but to capture the order, we say: prop_1 is eventually true, and until that happens, prop_2 is not true, and after prop_1 is true, eventually prop_2 is true. A simpler way is: F prop_1 and (prop_1 \u2192 F prop_2). Since we only have the given operators, we can write: (F prop_1) and (G (not prop_2) until prop_1)"}
{"id": 7454, "sentence": ["move", "to", "the", "red", "room", "and", "then", "move", "to", "the", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "then", "move", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(move to the yellow room) should become true.\n- Therefore, the formula states that prop_1 eventually happens, and after that, prop_2 eventually happens. This is captured by prop_1 U prop_2 or more precisely, prop_1 happens first, then prop_2 happens later.\n- To express \"first prop_1, then prop_2,\" we use: F prop_1 and then F prop_2 after prop_1.\n- Using until: prop_1 U prop_2 means prop_1 holds until prop_2 happens, but since these are actions, we can say: F prop_1 and then F prop_2 after prop_1.\n- The simplest way is: F prop_1 and F (prop_1 \u2192 F prop_2)"}
{"id": 2970, "sentence": ["move", "to", "the", "red", "room", "and", "push", "the", "chair", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "push", "the", "chair", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(e.g., the proposition that the agent is in the red room).\n- \"push the chair into the green room\" is represented by prop_2 (e.g., the proposition that the chair is in the green room).\nSince the command is a directive to achieve both, we use \"finally\" (F) to indicate that eventually both conditions should hold, combined with \"and.\"\n\n2. *Explanation dictionary* \u2013\n{\"move to the red room\": \"F prop_1\", \"push the chair into the green room\": \"F prop_2\", \"and\": \"and\"}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 4873, "sentence": ["go", "to", "blue", "via", "red"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_2", "via", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) and finally prop_2 FINISH"}
{"id": 3672, "sentence": ["move", "from", "blue", "room", "to", "red", "room", "then", "move", "to", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "from", "blue", "room", "to", "prop_1", "then", "move", "to", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "  \"then\": \"until and finally\""}
{"id": 1214, "sentence": ["go", "into", "the", "red", "room", "and", "push", "the", "chair", "back", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "and", "push", "the", "chair", "back", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(e.g., being in the red room).\n- \"push the chair back into the blue room\" is represented by proposition prop_2 (e.g., chair is pushed back into the blue room).\nSince the command implies both actions should eventually happen, we use \"finally\" (F) for each and combine them with \"and.\"\n\n2. *Explanation dictionary* \u2013\n{\"go into the red room\": \"F prop_1\", \"push the chair back into the blue room\": \"F prop_2\"}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 341, "sentence": ["leave", "this", "room", "and", "go", "into", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["leave", "this", "room", "and", "go", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F) for each and combine them with \"and.\"\n\n2. *Explanation dictionary* \u2013 {\"leave this room\": \"F prop_1\", \"go into the red room\": \"F prop_2\", \"and\": \"and\"}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 4005, "sentence": ["go", "thru", "the", "blue", "box", "to", "get", "to", "the", "red", "box"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "thru", "the", "prop_1", "box", "to", "get", "to", "the", "prop_2", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(blue box). The phrase \"to get to the red box\" indicates that after reaching the blue box, eventually the red box (prop_2) should be reached. This can be expressed as: eventually prop_1, and from that point, eventually prop_2.\n\n2. *Explanation dictionary* \u2013 {\"go thru the blue box\": \"F prop_1\", \"to get to the red box\": \"F prop_2\"}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 9778, "sentence": ["avoiding", "the", "red", "rectangle", "travel", "to", "the", "blue", "area"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoiding", "the", "prop_2", "rectangle", "travel", "to", "the", "prop_1", "area"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 0, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (globally (not prop_1)) and (finally prop_2) FINISH"}
{"id": 9373, "sentence": ["go", "through", "the", "blue", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_2), and before that, it must have passed through the blue room (prop_1). This means that the green room is eventually reached (F prop_2), and until then, the blue room must be true at some point (F prop_1), and the blue room occurs before the green room. To express \"go through the blue room to the green room,\" we can say: eventually prop_2 holds, and until prop_2 holds, prop_1 must hold at some point. More precisely, the blue room must be visited before the green room is reached. This can be expressed as: F prop_2 and (not prop_2) U prop_1, meaning that before reaching prop_2, prop_1 must occur.\n\n2. *Explanation dictionary* \u2013\n{\n  \"blue room\": \"prop_1\",\n  \"green room\": \"prop_2\",\n  \"go through the blue room to the green room\": \"(F prop_2) and ((not prop_2) U prop_1)"}
{"id": 5143, "sentence": ["go", "from", "the", "blue", "room", "to", "the", "red", "room", "then", "push", "the", "chair", "back", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "from", "the", "blue", "room", "to", "the", "prop_1", "then", "push", "the", "chair", "back", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(being in the blue room) and prop_2 (being in the red room). The command implies that eventually, starting from the blue room, the system should reach the red room. This can be captured by \"prop_1 until prop_2\" or \"prop_1 and then eventually prop_2\". The phrase \"then push the chair back into the blue room\" is represented by prop_3 (pushing the chair back into the blue room). The word \"then\" indicates a temporal sequence: after reaching the red room, eventually push the chair back into the blue room. So, after prop_2 holds, eventually prop_3 should hold. Combining these, the formula states: starting in the blue room (prop_1), eventually reach the red room (prop_2), and after that, eventually push the chair back into the blue room (prop_3)"}
{"id": 9533, "sentence": ["enter", "the", "room", "that", "isnt", "red", "then", "go", "to", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "room", "that", "isnt", "prop_2", "then", "go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* ((prop_1 and not prop_2) implies (F prop_3)) FINISH"}
{"id": 11023, "sentence": ["make", "your", "way", "to", "the", "green", "room", "by", "going", "through", "the", "yellow", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["make", "your", "way", "to", "the", "prop_2", "by", "going", "through", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (finally prop_1) and (not prop_1 until prop_2) FINISH"}
{"id": 2212, "sentence": ["enter", "the", "blue", "room", "by", "way", "of", "the", "yellow", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_2", "by", "way", "of", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_2), but only after having been in the yellow room (prop_1). This can be expressed as: eventually prop_2 holds, and before that, prop_1 must have held. Using temporal logic, this is captured by \"prop_1 until prop_2\" (prop_1 U prop_2), meaning prop_1 holds continuously until prop_2 becomes true. Additionally, since the blue room must be eventually entered, we use finally(prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n  \"enter the blue room\": \"prop_2\",\n  \"by way of the yellow room\": \"prop_1 U prop_2\"\n}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 1165, "sentence": ["avoid", "red", "rooms", "while", "going", "to", "the", "green", "one"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "prop_2", "rooms", "while", "going", "to", "the", "prop_1", "one"], "lifted_sentence_prop_ids": [0, 2, 0, 0, 0, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) should never occur, so we use globally not prop_1: G (not prop_1). The phrase \"while going to the green one\" means that until we reach the green room (prop_2), we must avoid red rooms. So, \"while going to the green one\" corresponds to \"until prop_2\". Combining these, we get: (not prop_1) U prop_2.\n\n2. *Explanation dictionary* \u2013 {\"avoid red rooms\": \"not prop_1\", \"going to the green one\": \"prop_2\", \"while going to the green one\": \"(not prop_1) U prop_2\"}\n\n3. *FINAL:* (not prop_1)"}
{"id": 5486, "sentence": ["go", "to", "the", "blue", "room", "while", "avoiding", "the", "green", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (globally (not prop_2)) and (finally prop_1) FINISH"}
{"id": 2257, "sentence": ["the", "robot", "goes", "to", "the", "blue", "to", "get", "to", "the", "yellow"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["the", "robot", "goes", "to", "the", "prop_1", "to", "get", "to", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(robot at blue).\n- \"to get to the yellow\" indicates that eventually the robot reaches yellow, represented as finally prop_2 (robot at yellow)"}
{"id": 8443, "sentence": ["pass", "through", "the", "green", "rom", "to", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "prop_1", "rom", "to", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (F prop_1 implies F prop_2) FINISH"}
{"id": 5431, "sentence": ["go", "to", "the", "yellow", "room", "but", "don", "t", "go", "through", "the", "green", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "don", "t", "go", "through", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (finally(prop_1) and globally(not(prop_2))) FINISH"}
{"id": 5185, "sentence": ["go", "to", "the", "yellow", "room", "but", "do", "not", "pass", "through", "the", "red", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "pass", "through", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (finally prop_1) and (globally not prop_2) FINISH"}
{"id": 9283, "sentence": ["go", "from", "the", "blue", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "from", "the", "blue", "prop_2", "to", "the", "green", "room"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), eventually the system reaches the green room (prop_2). We can represent \"being in the blue room\" as prop_1 and \"being in the green room\" as prop_2. The command suggests that whenever we are in the blue room, eventually we will be in the green room. This can be expressed as globally (always) if prop_1 holds, then finally (eventually) prop_2 will hold.\n\n2. *Explanation dictionary* \u2013 {\"blue room\": \"prop_1\", \"green room\": \"prop_2\", \"go from blue room to green room\": \"G (prop_1 implies F prop_2)\"}\n\n3. *FINAL:* G (prop_1 implies F prop_2)"}
{"id": 8371, "sentence": ["get", "to", "the", "yellow", "area", "by", "avoiding", "the", "green", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["get", "to", "the", "prop_1", "area", "by", "avoiding", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (G not prop_2) and (F prop_1) FINISH"}
{"id": 5175, "sentence": ["avoid", "the", "yellow", "rooms", "on", "your", "way", "into", "the", "green", "rooms"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "rooms", "on", "your", "way", "into", "the", "prop_1", "rooms"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) should never be true, so we use globally not prop_1: G (not prop_1). The phrase \"on your way into the green rooms\" means that until you reach a green room (prop_2), you must avoid yellow rooms. This is captured by (not prop_1) U prop_2.\n\n2. *Explanation dictionary* \u2013 {\"avoid the yellow rooms\": \"not prop_1\", \"yellow rooms\": \"prop_1\", \"green rooms\": \"prop_2\", \"on your way into the green rooms\": \"(not prop_1) U prop_2\"}\n\n3. *FINAL:* (not prop_1)"}
{"id": 2317, "sentence": ["to", "reach", "the", "yellow", "room", "do", "not", "go", "through", "the", "red", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["to", "reach", "the", "prop_1", "do", "not", "go", "through", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_2) be visited. This is captured by \"not prop_2 until prop_1,\" meaning \"prop_2\" is false until \"prop_1\" becomes true.\n\n2. *Explanation dictionary* \u2013\n{\n  \"reach the yellow room\": \"F prop_1\",\n  \"do not go through the red room\": \"not prop_2 U prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 9449, "sentence": ["move", "to", "the", "red", "room", "push", "the", "chair", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "push", "the", "chair", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally prop_1) and (finally (prop_1 implies finally prop_2)) FINISH"}
{"id": 3389, "sentence": ["travel", "through", "the", "blue", "square", "room", "to", "the", "large", "red", "rectangular", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["travel", "through", "the", "prop_1", "square", "room", "to", "the", "large", "red", "rectangular", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 U prop_2) FINISH"}
{"id": 10656, "sentence": ["go", "through", "the", "blue", "and", "red", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "and", "prop_1", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_3) and (true U (prop_1 and prop_2)) FINISH"}
{"id": 9825, "sentence": ["enter", "yellow", "room", "via", "the", "non", "red", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "prop_1", "via", "the", "non", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1), the system must have been in the non red room (not prop_2).\n- Using temporal logic, this can be expressed as: eventually (F) prop_1 (enter yellow room), and before that, globally (G) or until (U) the system was in the non red room (not prop_2).\n- More precisely, the system must be in the non red room until it enters the yellow room: (not prop_2) U prop_1.\n\n2. *Explanation dictionary* \u2013\n{\n  \"enter yellow room\": \"prop_1\",\n  \"red room\": \"prop_2\",\n  \"non red room\": \"not prop_2\",\n  \"via the non red room\": \"(not prop_2)"}
{"id": 8952, "sentence": ["walk", "pass", "the", "blue", "room", "into", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["walk", "pass", "the", "prop_1", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(finally) the agent is in the blue room (prop_1), and then eventually (finally) the agent is in the green room (prop_2) after passing the blue room. This can be captured by stating that eventually prop_1 holds, and after that, eventually prop_2 holds. Using temporal logic, this is expressed as: F(prop_1 and F(prop_2)).\n\n2. *Explanation dictionary* \u2013 {\"pass the blue room\": \"prop_1\", \"into the green room\": \"prop_2\", \"walk pass the blue room into the green room\": \"F(prop_1 and F(prop_2))\"}\n\n3. *FINAL:* F(prop_1 and F(prop_2))"}
{"id": 1593, "sentence": ["go", "through", "the", "room", "that", "is", "not", "yellow", "to", "get", "to", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "room", "that", "is", "not", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "  \"not yellow\": \"not prop_1\","}
{"id": 1276, "sentence": ["walk", "through", "any", "room", "except", "the", "red", "room", "to", "enter", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["walk", "through", "any", "room", "except", "the", "prop_2", "to", "enter", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_2). Before entering the blue room, it must walk through any room except the red room (prop_1). This means that until the blue room is entered, the system is always in rooms that are not the red room. So, \"walk through any room except the red room\" maps to \"globally not prop_1\" until \"finally prop_2\" (enter the blue room).\n\n2. *Explanation dictionary* \u2013\n{\n  \"walk through any room except the red room\": \"G (not prop_1)\",\n  \"enter the blue room\": \"F prop_2\"\n}\n\n3. *FINAL:* (not prop_1) U (F prop_2)"}
{"id": 1493, "sentence": ["move", "to", "the", "red", "room", "move", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "move", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 U (F prop_2)) FINISH"}
{"id": 10433, "sentence": ["move", "to", "the", "blue", "room", "by", "going", "through", "the", "yellow", "room", "first"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_2", "by", "going", "through", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1). However, before reaching the blue room, it must first go through the yellow room (prop_2). This means that the blue room is reached only after the yellow room has been visited. Using temporal logic, this can be expressed as: eventually prop_1 holds, and until prop_1 holds, prop_2 must have occurred first. More precisely, the blue room is reached eventually (F prop_1), and until that happens, the yellow room must be visited first (prop_2 U prop_1).\n\n2. *Explanation dictionary* \u2013\n{\n  \"move to the blue room\": \"F prop_1\",\n  \"going through the yellow room first\": \"prop_2 U prop_1\"\n}\n\n3. *FINAL:* (prop_2 U prop_1)"}
{"id": 615, "sentence": ["go", "to", "the", "red", "room", "go", "behind", "the", "chair", "then", "bring", "the", "chair", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "go", "behind", "the", "chair", "then", "bring", "the", "chair", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(where prop_1 = \"in red room\").\n- \"go behind the chair\" after that means: after being in the red room, eventually be behind the chair: F prop_2 (prop_2 = \"behind chair\").\n- \"then bring the chair to the blue room\" means: after being behind the chair, eventually bring the chair to the blue room: F prop_3 (prop_3 = \"chair in blue room\").\n- The sequence \"go to red room\", then \"go behind chair\", then \"bring chair to blue room\" means the first event happens before the second, which happens before the third.\n- Using until and finally operators to enforce order:\n  - First, eventually prop_1.\n  - Then, prop_1 holds until eventually prop_2.\n  - Then, prop_2 holds until eventually prop_3.\n- So the formula is: F prop_1 and (prop_1 U F prop_2) and (prop_2 U F prop_3)"}
{"id": 7122, "sentence": ["move", "into", "the", "green", "room", "and", "stay", "on", "the", "first", "square", "you", "end", "up", "on"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "into", "the", "prop_1", "and", "stay", "on", "the", "first", "square", "you", "end", "up", "on"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(finally) prop_1, where prop_1 stands for \"being in the green room\".\n- \"stay on the first square you end up on\": After reaching the green room (prop_1), the agent should remain on the same square forever. We represent the first square as prop_2, and \"stay on\" means globally prop_2 holds after prop_1 is reached.\n\nSince the agent moves into the green room eventually (F prop_1), and from that point on, it stays on the first square (G prop_2), we combine these as: F prop_1 and after that G prop_2.\n\nHowever, to express \"stay on the first square you end up on\", we need to capture that once prop_1 is true, prop_2 holds globally from that point on.\n\nOne way is: F (prop_1 and G prop_2)"}
{"id": 904, "sentence": ["go", "to", "yellow", "area", "by", "avoiding", "green", "area"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "area", "by", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(where prop_1 = \"yellow area\").\n- \"by avoiding green area\" means that at all times before reaching the yellow area, the green area is not entered, represented as (not prop_2) U prop_1 (where prop_2 = \"green area\").\n- Combining these, the system must avoid green area until it reaches yellow area.\n\n2. *Explanation dictionary* \u2013\n{\"yellow area\": \"prop_1\", \"green area\": \"prop_2\", \"go to yellow area\": \"F prop_1\", \"avoiding green area\": \"(not prop_2) U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 8571, "sentence": ["go", "to", "the", "green", "room", "without", "using", "the", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "without", "using", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(green room) is true, so we use finally(prop_1). The phrase \"without using the red room\" means that at no point before reaching the green room should prop_2 (red room) be true. This can be expressed by stating that prop_2 is never true until prop_1 becomes true, i.e., (not prop_2) holds globally until prop_1 is reached: (not prop_2) U prop_1.\n\n2. *Explanation dictionary* \u2013 {\"go to the green room\": \"finally(prop_1)\", \"without using the red room\": \"(not prop_2) U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 7354, "sentence": ["go", "to", "the", "yellow", "room", "but", "do", "not", "take", "the", "blue", "room", "to", "get", "there"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "take", "the", "blue", "prop_2", "get", "there"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (G (not prop_2) U prop_1) and F prop_1 FINISH"}
{"id": 7213, "sentence": ["go", "into", "red", "room", "but", "avoid", "blue", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "into", "prop_1", "but", "avoid", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 3298, "sentence": ["go", "to", "the", "yellow", "room", "but", "don", "t", "go", "through", "the", "green", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "don", "t", "go", "through", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 10621, "sentence": ["enter", "the", "blue", "or", "yellow", "room", "and", "proceed", "until", "the", "green", "room"], "tl": ["finally", "(", "(", "yellow_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["enter", "the", "prop_2", "or", "prop_1", "and", "proceed", "until", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) until prop_3 FINISH"}
{"id": 286, "sentence": ["move", "into", "the", "blue", "room", "through", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "into", "the", "prop_2", "through", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_2), but only after passing through the red room (prop_1). This can be expressed as: eventually (F) prop_2, and before that, prop_1 must hold. Using the until operator, we say that prop_1 holds until prop_2 is reached.\n\n2. *Explanation dictionary* \u2013 {\"red room\": \"prop_1\", \"blue room\": \"prop_2\", \"through the red room before blue room\": \"prop_1 U prop_2\", \"move into the blue room through the red room\": \"F (prop_1 U prop_2)\"}\n\n3. *FINAL:* F (prop_1 U prop_2)"}
{"id": 7594, "sentence": ["go", "to", "the", "yellow", "room", "but", "do", "not", "pass", "through", "the", "red", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "pass", "through", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (finally(prop_1) and globally(not(prop_2))) FINISH"}
{"id": 10213, "sentence": ["go", "up", "through", "the", "yellow", "box", "to", "the", "blue", "box"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "up", "through", "the", "prop_1", "box", "to", "the", "prop_2", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(finally) the system reaches the blue box (prop_2), and on the way, it must pass through the yellow box (prop_1). This can be expressed as: eventually prop_2, and until prop_2 is reached, prop_1 must hold at some point before. More precisely, \"through the yellow box\" means that before reaching the blue box, the yellow box is visited. So, we can say: eventually prop_2, and before that, eventually prop_1. To ensure the order, we can say: prop_1 holds until prop_2 is reached, or at least that prop_1 occurs before prop_2. A suitable formula is: finally (prop_1 and finally prop_2), meaning eventually prop_1 occurs, and eventually after that prop_2 occurs.\n\n2. *Explanation dictionary* \u2013\n{\n  \"yellow box\": \"prop_1\",\n  \"blue box\": \"prop_2\",\n  \"through the yellow box to the blue box\": \"finally (prop_1 and finally prop_2)"}
{"id": 6784, "sentence": ["go", "to", "the", "blue", "room", "without", "going", "through", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "without", "going", "through", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G not prop_2) FINISH"}
{"id": 3572, "sentence": ["go", "up", "through", "the", "yellow", "room", "into", "the", "blue", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "up", "through", "the", "prop_1", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 and (F (prop_2 and (F prop_3)))) FINISH"}
{"id": 7607, "sentence": ["enter", "the", "yellow", "or", "green", "room", "and", "then", "continue", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["enter", "the", "prop_2", "or", "prop_1", "and", "then", "continue", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(where prop_1 = yellow room entered, prop_2 = green room entered). The word \"and then\" indicates a temporal sequence, so after entering either the yellow or green room, we must \"continue to the blue room\" (prop_3 = blue room entered). This sequence is captured by the \"until\" or \"finally\" operator. Here, we use \"finally\" to say that eventually the blue room is entered after the yellow or green room. To ensure the order, we use \"until\": the blue room is eventually entered, and until then, the system is in the yellow or green room. Alternatively, we can say: \"finally (blue room)\" and \"the blue room is entered only after the yellow or green room\". The simplest is: \"finally (blue room)\" and \"the blue or green room is entered before that\". So the formula is: (prop_1 or prop_2) and finally (prop_3) and globally (not prop_3 implies (prop_1 or prop_2))"}
{"id": 723, "sentence": ["move", "to", "the", "red", "room", "and", "then", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "then", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* finally (prop_1 and finally prop_2) FINISH"}
{"id": 7777, "sentence": ["move", "toward", "the", "red", "room", "then", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "toward", "the", "prop_1", "then", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (not prop_2 U prop_1) FINISH"}
{"id": 7748, "sentence": ["go", "to", "the", "red", "room", "or", "the", "yellow", "room", "and", "head", "straight", "away", "to", "the", "green", "room", "avoiding", "the", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "red", "room", "or", "the", "yellow", "room", "and", "head", "straight", "away", "to", "the", "prop_1", "avoiding", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) and ( (not prop_1) U F prop_3 ) FINISH"}
{"id": 6199, "sentence": ["go", "to", "red", "room", "and", "bring", "chair", "back", "to", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "and", "bring", "chair", "back", "to", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(representing \"in red room\") is true, so F prop_1.\n   - \"bring chair back to blue room\": After reaching the red room, eventually bring the chair back to the blue room. We represent \"chair in blue room\" as prop_2. Since this should happen after the first task, we use the until operator to ensure that after reaching the red room, eventually prop_2 holds.\n\n2. *Explanation dictionary*:\n   {\n     \"go to red room\": \"F prop_1\",\n     \"bring chair back to blue room\": \"F prop_2\",\n     \"sequence\": \"F prop_1 and then F prop_2\"\n   }\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 2978, "sentence": ["don", "t", "go", "through", "the", "blue", "room", "towards", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["don", "t", "go", "through", "the", "prop_2", "towards", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* globally (not (prop_1 and finally prop_2)) FINISH"}
{"id": 412, "sentence": ["go", "through", "the", "blue", "or", "red", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1 or prop_2)\" where prop_1 represents \"blue room\" and prop_2 represents \"red room\". The phrase \"to the green room\" means that after going through the blue or red room, the system eventually reaches the green room, represented by \"finally prop_3\". To express that the green room is reached after the blue or red room, we use the \"until\" operator: \"(prop_1 or prop_2) U prop_3\" means that the system stays in blue or red room states until it reaches the green room. However, since the command is to \"go through\" blue or red room to get to green room, the green room should be eventually reached, and before that, the system must have been in blue or red room. So the formula is: \"finally prop_3 and ( (prop_1 or prop_2) U prop_3 )"}
{"id": 5104, "sentence": ["go", "to", "the", "red", "room", "only", "and", "then", "the", "green", "room", "only"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "only", "and", "then", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (G (prop_1 and not prop_2)) and (F (G (prop_2 and not prop_1))) FINISH"}
{"id": 1672, "sentence": ["go", "to", "red", "but", "not", "through", "blue"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "but", "not", "through", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(finally) the proposition prop_1 (representing \"red\") should be true: F prop_1. The phrase \"but not through blue\" means that on the way to red, we should never pass through blue, so blue (prop_2) should never be true before reaching red. This can be expressed as: prop_2 is not true until prop_1 is true, i.e., not prop_2 U prop_1.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to red\": \"F prop_1\",\n  \"not through blue\": \"not prop_2 U prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 4893, "sentence": ["move", "through", "the", "green", "room", "and", "out", "into", "the", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "the", "prop_1", "and", "out", "into", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1). The phrase \"and out into the yellow room\" means after being in the green room, eventually entering the yellow room (prop_2). So, the formula states that eventually prop_1 holds, and after that, eventually prop_2 holds.\n\n2. *Explanation dictionary* \u2013 {\"move through the green room\": \"F prop_1\", \"and out into the yellow room\": \"F prop_2\"}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 6158, "sentence": ["move", "the", "robot", "from", "the", "red", "room", "to", "the", "green", "or", "red", "room", "to", "the", "big", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "green_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "the", "robot", "from", "the", "red", "room", "to", "the", "prop_2", "or", "prop_1", "to", "the", "big", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 and next (prop_2 or prop_1)) and F prop_3 FINISH"}
{"id": 5186, "sentence": ["go", "to", "green", "but", "not", "through", "yellow"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "but", "not", "through", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (G (not prop_2) U prop_1) and F prop_1 FINISH"}
{"id": 1079, "sentence": ["go", "through", "the", "yellow", "or", "green", "room", "and", "enter", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "and", "enter", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally (prop_1 or prop_2)) and (finally prop_3) FINISH"}
{"id": 8683, "sentence": ["move", "to", "the", "blue", "room", "by", "going", "through", "the", "yellow", "or", "red", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "to", "the", "prop_3", "by", "going", "through", "the", "yellow", "prop_2", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 3, 3, 0, 0, 0, 0, 2, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_2 or prop_3) U prop_1 FINISH"}
{"id": 1736, "sentence": ["go", "to", "the", "red", "room", "grab", "the", "chair", "come", "back", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "grab", "the", "chair", "come", "back", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "F prop_1 and (prop_1 \u2192 F prop_2) and (prop_2 \u2192 F prop_3)"}
{"id": 10461, "sentence": ["go", "through", "the", "green", "room", "in", "to", "the", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "in", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1 and F(prop_2))\"}\n\n3. *FINAL:* F(prop_1 and F(prop_2))"}
{"id": 3580, "sentence": ["go", "to", "the", "green", "room", "through", "red"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "through", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_2 until prop_1) FINISH"}
{"id": 1213, "sentence": ["move", "to", "the", "large", "green", "room", "by", "passing", "through", "the", "small", "yellow", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_2", "by", "passing", "through", "the", "small", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1). However, before reaching prop_1, it must pass through the small yellow room (prop_2). This means that prop_2 must hold at some point before prop_1 is true. Using temporal logic, this can be expressed as: eventually prop_1 holds, and until prop_1 holds, prop_2 must hold at some point before.\n\n2. *Explanation dictionary* \u2013\n{\n  \"large green room\": \"prop_1\",\n  \"small yellow room\": \"prop_2\",\n  \"passing through the small yellow room before reaching the large green room\": \"prop_2 U prop_1\"\n}\n\n3. *FINAL:* F (prop_2 U prop_1)"}
{"id": 6282, "sentence": ["drive", "through", "the", "room", "that", "is", "not", "red", "and", "enter", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["drive", "through", "the", "room", "that", "is", "not", "prop_2", "and", "enter", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F (not prop_1)) and (F prop_2) FINISH"}
{"id": 10606, "sentence": ["go", "from", "the", "blue", "room", "to", "the", "red", "room", "then", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "from", "the", "blue", "room", "to", "the", "red", "room", "then", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) and (prop_2 until prop_3) FINISH"}
{"id": 7377, "sentence": ["go", "to", "red", "rectangle", "via", "blue", "square"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_2", "rectangle", "via", "prop_1", "square"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1), but only after having visited a blue square (prop_2) at some point before. This can be expressed as: eventually (red rectangle) and until then, the system must pass through blue square. More precisely, the red rectangle is reached eventually (F prop_1), and before that, the blue square is visited (F prop_2), and the path to red rectangle goes through blue square. The \"via\" implies that the blue square must be visited before the red rectangle. So the formula is: F (prop_2 and F prop_1), meaning eventually blue square is visited and eventually after that red rectangle is visited.\n\n2. *Explanation dictionary* \u2013\n{\n  \"red rectangle\": \"prop_1\",\n  \"blue square\": \"prop_2\",\n  \"go to red rectangle via blue square\": \"F (prop_2 and F prop_1)\"\n}\n\n3. *FINAL:* F (prop_2 and F prop_1)"}
{"id": 7516, "sentence": ["the", "robot", "goes", "through", "the", "red", "to", "get", "to", "the", "green"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["the", "robot", "goes", "through", "the", "prop_1", "to", "get", "to", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), then eventually it will reach green (prop_2).\n\n2. *Explanation dictionary* \u2013 {\"the robot goes through the red\": \"prop_1\", \"to get to the green\": \"F prop_2\"}\n\n3. *FINAL:* G (prop_1 implies F prop_2)"}
{"id": 6787, "sentence": ["move", "the", "robot", "to", "the", "small", "yellow", "or", "green", "room", "and", "then", "to", "the", "large", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "the", "robot", "to", "the", "small", "prop_2", "or", "prop_1", "and", "then", "to", "the", "large", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F) the robot reaches either the small yellow room or the green room. We represent \"small yellow or green room\" as (prop_1 or prop_2).\n   - \"then to the large blue room\": After the first is done, eventually (F) the robot reaches the large blue room (prop_3).\n   The \"and then\" implies a sequence: first eventually (prop_1 or prop_2), then eventually prop_3. This can be expressed as: (F (prop_1 or prop_2)) and (F prop_3 after that). To capture the sequence, we use until: the robot stays before reaching prop_3 until it has reached (prop_1 or prop_2). So, the formula is: (F (prop_1 or prop_2)) and ((not prop_3) U (prop_1 or prop_2)) and F prop_3. But to simplify, we can say: (F (prop_1 or prop_2)) and (F prop_3)"}
{"id": 1762, "sentence": ["go", "through", "the", "passage", "into", "the", "green", "room", "but", "only", "if", "you", "go", "through", "a", "yellow", "or", "red", "room", "first"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "passage", "into", "the", "prop_3", "but", "only", "if", "you", "go", "through", "a", "yellow", "prop_2", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(or before) prop_2 or prop_3 occurred.\n- Since LTL does not have past operators, we express \"only if you go through a yellow or red room first\" as: prop_1 implies that eventually before prop_1, prop_2 or prop_3 happened. This can be expressed as: prop_1 implies that prop_2 or prop_3 happened before prop_1.\n- Using until and next operators, we can express that prop_1 can only happen after prop_2 or prop_3 has happened.\n- One way is: prop_1 implies that (prop_2 or prop_3) happened previously, or equivalently, prop_1 implies that (prop_2 or prop_3)"}
{"id": 7514, "sentence": ["go", "from", "the", "blue", "room", "to", "the", "yellow", "room", "and", "then", "go", "from", "the", "yellow", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "from", "the", "blue", "room", "to", "the", "yellow", "room", "and", "then", "go", "from", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 and F prop_2) and F (prop_2 and F prop_3) FINISH"}
{"id": 3893, "sentence": ["go", "to", "the", "blue", "room", "and", "do", "not", "use", "the", "red", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "do", "not", "use", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_1 and (not prop_2)) FINISH"}
{"id": 6424, "sentence": ["move", "from", "the", "yellow", "box", "into", "the", "green", "box", "by", "way", "of", "the", "blue", "or", "red", "box", "avoiding", "the", "yellow", "box"], "tl": ["finally", "(", "(", "yellow_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "from", "the", "yellow", "box", "into", "the", "prop_3", "box", "by", "way", "of", "the", "prop_2", "or", "red", "box", "avoiding", "the", "prop_1", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), eventually reaching the green box (prop_2), passing only through the blue (prop_3) or red (prop_4) boxes on the way, and avoiding the yellow box (prop_1) during the movement except at the start.\n\n- \"move from the yellow box\" \u2192 start at prop_1\n- \"into the green box\" \u2192 eventually prop_2\n- \"by way of the blue or red box\" \u2192 the path from prop_1 to prop_2 passes only through prop_3 or prop_4\n- \"avoiding the yellow box\" \u2192 do not visit prop_1 again after the start\n\nThis can be expressed as: starting at prop_1, until prop_2 is reached, only prop_3 or prop_4 are true (excluding prop_1), and prop_1 is not true again until prop_2.\n\n2. *Explanation dictionary* \u2013\n\n{\n  \"move from the yellow box\": \"prop_1\",\n  \"into the green box\": \"F prop_2\",\n  \"by way of the blue or red box\": \"((prop_3 or prop_4)"}
{"id": 4736, "sentence": ["avoid", "the", "yellow", "room", "and", "enter", "the", "green", "room", "through", "either", "the", "yellow", "or", "blue", "room"], "tl": ["finally", "(", "(", "yellow_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["avoid", "the", "yellow", "room", "and", "enter", "the", "prop_3", "through", "either", "the", "yellow", "prop_1", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(where prop_1 = \"in yellow room\"). The phrase \"enter the green room through either the yellow or blue room\" means that eventually the system enters the green room (prop_2), and before that, it must have been in either the yellow room (prop_1) or the blue room (prop_3). This can be expressed as: finally prop_2 and (prop_1 or prop_3) until prop_2. However, since we must avoid the yellow room, this conflicts with entering through the yellow room. To reconcile, \"avoid the yellow room\" likely means never be in the yellow room except as a passage to the green room. So the formula is: globally not prop_1 except possibly immediately before entering prop_2, where the previous state was prop_1 or prop_3. Since we cannot express past operators, we approximate by saying: globally not prop_1 and finally (prop_2 and (prop_1 or prop_3) until prop_2)"}
{"id": 4418, "sentence": ["go", "through", "the", "red", "or", "yellow", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "prop_2", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "- This can be expressed as: (F (prop_1 or prop_2)) and (F prop_3) and (not prop_3 U (prop_1 or prop_2)) and (not (prop_1 or prop_2) U prop_3) is"}
{"id": 9024, "sentence": ["don", "t", "go", "through", "the", "yellow", "room", "towards", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["don", "t", "go", "through", "the", "prop_2", "towards", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* globally (not (finally (prop_1 until prop_2))) FINISH"}
{"id": 4532, "sentence": ["only", "go", "through", "yellow", "rooms", "to", "get", "to", "blue", "rooms"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["only", "go", "through", "prop_1", "rooms", "to", "get", "to", "prop_2", "rooms"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* G (F prop_2 implies (prop_1 until prop_2)) FINISH"}
{"id": 3158, "sentence": ["go", "to", "the", "yellow", "area", "by", "avoiding", "red", "area"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "area", "by", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* globally(not prop_2) and finally(prop_1) FINISH"}
{"id": 8926, "sentence": ["move", "to", "the", "red", "room", "then", "move", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "then", "move", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (not prop_2 U prop_1) FINISH"}
{"id": 10938, "sentence": ["go", "through", "the", "green", "or", "red", "room", "and", "enter", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "green_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "and", "enter", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (finally (prop_1 or prop_2)) and (finally prop_3) FINISH"}
{"id": 2792, "sentence": ["go", "to", "red", "room", "then", "to", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "then", "to", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F prop_1), we must eventually reach the blue room (F prop_2). So the overall formula states: eventually prop_1 holds, and after that, eventually prop_2 holds.\n\n2. *Explanation dictionary* \u2013 {\"go to red room\": \"prop_1\", \"then to blue room\": \"F prop_2\"}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 9626, "sentence": ["go", "to", "the", "green", "room", "but", "do", "not", "enter", "the", "yellow", "room", "first"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "enter", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(green room). The phrase \"do not enter the yellow room first\" means that before reaching the green room, the yellow room (prop_2) should never be entered. This is captured by stating that globally, until prop_1 is true, prop_2 is not true.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the green room\": \"F prop_1\",\n  \"do not enter the yellow room first\": \"G (not prop_2 U prop_1)\"\n}\n\n3. *FINAL:* G (not prop_2 U prop_1)"}
{"id": 5036, "sentence": ["enter", "the", "blue", "room", "without", "crossing", "the", "yellow", "one"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "crossing", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(finally) prop_1 (where prop_1 represents \"entering the blue room\").\n- \"without crossing the yellow one\" means that at no point before entering the blue room should prop_2 (crossing the yellow room) occur.\n- This can be expressed as: globally (not prop_2) until prop_1, meaning prop_2 never happens before prop_1.\n- After entering the blue room, prop_2 may or may not happen, but the command only restricts crossing the yellow room before entering the blue room.\n\n2. *Explanation dictionary*:\n{\"enter the blue room\": \"prop_1\", \"without crossing the yellow one\": \"G (not prop_2) U prop_1\"}\n\n3. *FINAL:* (G (not prop_2) U prop_1)"}
{"id": 6351, "sentence": ["took", "the", "yellow", "room", "to", "the", "blue", "room", "and", "the", "red", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["took", "the", "prop_2", "to", "the", "blue", "room", "and", "the", "red", "prop_1", "the", "blue", "room", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. FINAL: (prop_1 and prop_2) FINISH"}
{"id": 3841, "sentence": ["go", "to", "red", "room", "move", "chair", "to", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "move", "chair", "to", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F (prop_2 and (not prop_1 U prop_1))) FINISH"}
{"id": 2000, "sentence": ["go", "to", "the", "yellow", "room", "but", "avoid", "the", "blue", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 4143, "sentence": ["drive", "through", "the", "room", "that", "is", "not", "blue", "and", "enter", "the", "yellow", "room", "on", "the", "other", "side"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["drive", "through", "the", "room", "that", "is", "not", "prop_2", "and", "enter", "the", "prop_1", "on", "the", "other", "side"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F (not prop_1)) and (F prop_2"}
{"id": 6744, "sentence": ["first", "go", "to", "blue", "room", "then", "go", "to", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["first", "go", "to", "prop_1", "then", "go", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "  \"first ... then ...\": \"F prop_1 and (prop_1 implies F prop_2)\""}
{"id": 5323, "sentence": ["move", "the", "robot", "through", "the", "yellow", "or", "blue", "small", "room", "and", "then", "to", "the", "large", "green", "room"], "tl": ["finally", "(", "(", "blue_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "the", "robot", "through", "the", "prop_2", "or", "blue", "small", "prop_3", "and", "then", "to", "the", "large", "green", "room"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(finally) the robot is in a room that is either yellow or blue and small. We represent \"yellow or blue\" as (prop_1 or prop_2), \"small room\" as prop_3, and \"through\" as eventually being in such a room: F((prop_1 or prop_2) and prop_3).\n\n- \"then to the large green room\": After the first part, the robot should eventually be in a large green room. Represent \"large\" as prop_4, \"green\" as prop_5, so the second part is F(prop_4 and prop_5).\n\nThe \"and then\" implies a temporal ordering: first the robot reaches the yellow or blue small room, and after that, it reaches the large green room. This is captured by the \"until\" operator: the robot is in the first room until it reaches the second room.\n\nSo the formula is: F((yellow or blue) and small) until F(large and green)"}
{"id": 224, "sentence": ["move", "into", "the", "red", "room", "and", "stay", "on", "the", "first", "square", "you", "end", "up", "on"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "into", "the", "prop_1", "and", "stay", "on", "the", "first", "square", "you", "end", "up", "on"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(representing \"in the red room\") becomes true. So we use finally (F) prop_1.\n\n- \"stay on the first square you end up on\": After reaching the red room, the agent should remain on the first square it occupies. Let prop_2 represent \"on the first square you end up on\". The phrase \"stay on\" means globally (G) prop_2 holds from that point on.\n\nSince the \"stay\" condition applies after moving into the red room, we combine them as: eventually prop_1 holds, and from that point on, prop_2 holds globally. This can be expressed as: F (prop_1 and G prop_2).\n\n2. *Explanation dictionary*:\n\n{\n  \"move into the red room\": \"F prop_1\",\n  \"stay on the first square you end up on\": \"G prop_2\",\n  \"move into the red room and stay on the first square you end up on\": \"F (prop_1 and G prop_2)"}
{"id": 6898, "sentence": ["go", "from", "the", "blue", "room", "to", "the", "blue", "room", "then", "go", "from", "the", "blue", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "from", "the", "blue", "room", "to", "the", "blue", "room", "then", "go", "from", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) and eventually reaching the blue room again (prop_1). Since the start and end are the same, we can express this as \"starting in prop_1 and eventually prop_1 holds again,\" which is trivially true if we consider the path.\n   - \"then go from the blue room to the green room\": After completing the first task, we must start in the blue room (prop_1) and eventually reach the green room (prop_2).\n\n   To capture the sequence, we use the \"until\" operator: the first task holds until the second task starts. More precisely:\n   - First, globally, we are in the blue room until we reach the blue room again (which is immediate), so we can simplify to \"finally prop_1\" for the first task.\n   - Then, after that, we must eventually reach the green room starting from the blue room.\n\n   Since the first task is trivial (start and end in the same room)"}
{"id": 8965, "sentence": ["pass", "through", "the", "small", "blue", "room", "to", "get", "to", "the", "large", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "small", "prop_1", "to", "get", "to", "the", "large", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1 and F prop_2)\"\n}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 10168, "sentence": ["go", "via", "red", "color", "path", "to", "reach", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "via", "prop_1", "color", "path", "to", "reach", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 11062, "sentence": ["move", "to", "the", "red", "room", "move", "to", "the", "yellow", "item", "move", "the", "yellow", "item", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "move", "to", "the", "yellow", "item", "move", "the", "yellow", "item", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "F prop_1 and (prop_1 \u2192 F prop_2) and (prop_2 \u2192 F prop_3)"}
{"id": 8757, "sentence": ["travel", "through", "the", "red", "room", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["travel", "through", "the", "prop_1", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F prop_1). The phrase \"into the green room\" after that corresponds to prop_1 until eventually prop_2 (prop_1 U F prop_2).\n\n2. *Explanation dictionary* \u2013 {\"travel through the red room\": \"F prop_1\", \"into the green room\": \"prop_1 U F prop_2\"}\n\n3. *FINAL:* (F prop_1) and (prop_1 U F prop_2)"}
{"id": 10969, "sentence": ["move", "to", "the", "red", "room", "bring", "chair", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "bring", "chair", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and ( (not prop_2) U prop_1 ) and (F prop_2) FINISH"}
{"id": 9241, "sentence": ["enter", "the", "green", "room", "through", "the", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_2", "through", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F) prop_2 (enter green room) happens, and before that, prop_1 (enter blue room) must have occurred. This is captured by prop_1 until prop_2 (prop_1 U prop_2).\n\n2. *Explanation dictionary* \u2013 {\"enter the blue room\": \"prop_1\", \"enter the green room\": \"prop_2\", \"enter green room after blue room\": \"prop_1 U prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 623, "sentence": ["go", "through", "blue", "to", "reach", "red"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "to", "reach", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(blue) must hold continuously until prop_2 (red) is reached. The phrase \"to reach red\" means eventually prop_2 (red) must be true. Combining these, we get: prop_1 holds until prop_2 holds, and prop_2 eventually holds.\n\n2. *Explanation dictionary* \u2013 {\"go through blue\": \"prop_1 U prop_2\", \"to reach red\": \"F prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 9011, "sentence": ["going", "through", "the", "red", "room", "or", "the", "yellow", "room", "straight", "to", "the", "blue", "room", "avoiding", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["going", "through", "the", "red", "room", "or", "the", "yellow", "room", "straight", "to", "the", "prop_1", "avoiding", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1 or prop_2), where prop_1 = \"in red room\", prop_2 = \"in yellow room\".\n- \"straight to the blue room\" implies eventually reaching the blue room without detours, so \"finally prop_3\" where prop_3 = \"in blue room\".\n- \"avoiding the yellow room\" means never entering the yellow room, so \"globally not prop_2\".\n\nCombining these:\n\n- The path involves going through red or yellow room: F (prop_1 or prop_2)\n- Then eventually reaching blue room: F prop_3\n- While globally avoiding yellow room: G not prop_2\n\nBut since \"or the yellow room\" is in conflict with \"avoiding the yellow room\", the phrase likely means \"going through the red room or the yellow room straight to the blue room, avoiding the yellow room\" means \"going through the red room (or the yellow room)"}
{"id": 10495, "sentence": ["go", "to", "the", "green", "room", "through", "the", "yellow", "one"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "through", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_2 U prop_1) FINISH"}
{"id": 7285, "sentence": ["push", "chair", "from", "red", "room", "to", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["push", "chair", "from", "prop_1", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) and finally prop_2 FINISH"}
{"id": 4040, "sentence": ["walk", "through", "any", "room", "except", "the", "red", "room", "to", "enter", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["walk", "through", "any", "room", "except", "the", "prop_2", "to", "enter", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* ((prop_1 and not prop_3) U prop_4) FINISH"}
{"id": 2145, "sentence": ["go", "through", "the", "green", "or", "yellow", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "prop_2", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_3) and (F (prop_1 or prop_2)) and ( (not prop_3) U (prop_1 or prop_2) ) and ( (prop_1 or prop_"}
{"id": 10114, "sentence": ["took", "the", "yellow", "room", "to", "the", "blue", "room", "and", "the", "green", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["took", "the", "prop_2", "to", "the", "blue", "room", "and", "the", "green", "prop_1", "the", "blue", "room", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "- Combining both with \"and\" gives (prop_1 \u2192 F prop_2) and (prop_3 \u2192 F prop_2)."}
{"id": 5162, "sentence": ["enter", "green", "room", "via", "the", "non", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "prop_1", "via", "the", "non", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F prop_1), and until that happens, it must have passed through a non yellow room (prop_2 is false).\n\n2. *Explanation dictionary*:\n{\n  \"enter green room\": \"F prop_1\",\n  \"non yellow room\": \"not prop_2\",\n  \"via the non yellow room\": \"not prop_2 U prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 10924, "sentence": ["move", "through", "the", "green", "room", "to", "gain", "access", "to", "the", "large", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "the", "prop_1", "to", "gain", "access", "to", "the", "large", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) and finally prop_2 FINISH"}
{"id": 1567, "sentence": ["take", "a", "path", "to", "reach", "the", "blue", "colour", "place", "by", "not", "taking", "the", "route", "which", "is", "red", "and", "black"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["take", "a", "path", "to", "reach", "the", "prop_1", "colour", "place", "by", "not", "taking", "the", "route", "which", "is", "prop_2", "and", "black"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": " \"not taking the route which is red and black\": \"globally(not(prop_2 and prop_3))\"}"}
{"id": 5370, "sentence": ["go", "to", "the", "yellow", "room", "through", "the", "room", "that", "is", "not", "blue"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "through", "the", "room", "that", "is", "not", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1), but only after passing through a room that is not blue (not prop_2). This means that before reaching the yellow room, the system must be in a state where the room is not blue. We can express this as: the yellow room is eventually reached (F prop_1), and until then, the room is not blue (not prop_2) holds.\n\n2. *Explanation dictionary* \u2013\n{\n  \"yellow room\": \"prop_1\",\n  \"room that is not blue\": \"not prop_2\",\n  \"go to the yellow room through the room that is not blue\": \"(not prop_2) U prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 9458, "sentence": ["enter", "blue", "room", "via", "the", "non", "green", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "prop_1", "via", "the", "non", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(entering the blue room).\n- \"via the non green room\" means that before entering the blue room, the system must have been in a room that is not green.\n- We can interpret \"via the non green room\" as: globally, before entering the blue room, the system was in a non-green room.\n- To express this, we say that eventually (finally) prop_1 (enter blue room) happens, and before that, the system was in a non-green room (not prop_2, where prop_2 represents being in a green room).\n- Since the command is about entering the blue room via the non green room, we can say: eventually prop_1, and until then, the system is in a non-green room.\n- So, the formula is: F prop_1 and (not prop_2)"}
{"id": 3121, "sentence": ["reach", "blue", "room", "without", "going", "through", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["reach", "prop_1", "without", "going", "through", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(represented by prop_1), and at no point before reaching the blue room should the system be in the yellow room (represented by prop_2). This can be expressed as: \"Eventually prop_1 holds, and until then prop_2 never holds.\" Using temporal logic, this is: (not prop_2) U prop_1.\n\n2. *Explanation dictionary* \u2013 {\"reach blue room\": \"prop_1\", \"yellow room\": \"prop_2\", \"without going through yellow room\": \"not prop_2 until prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 3468, "sentence": ["move", "to", "the", "blue", "room", "without", "entering", "a", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "without", "entering", "a", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(representing \"in the blue room\") will be true: F prop_1.\n- \"without entering a yellow room\" means that at no point before reaching the blue room should the proposition prop_2 (representing \"in a yellow room\") be true. This can be expressed as \"prop_2 does not occur until prop_1 occurs\": not prop_2 U prop_1.\n\nCombining these, the formula states that eventually prop_1 holds, and until then, prop_2 never holds.\n\n2. *Explanation dictionary* \u2013\n{\n  \"move to the blue room\": \"F prop_1\",\n  \"without entering a yellow room\": \"not prop_2 U prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 2485, "sentence": ["enter", "the", "blue", "room", "and", "proceed", "until", "the", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_1", "and", "proceed", "until", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(U) is used to express that prop_1 holds until prop_2 becomes true.\n\n2. *Explanation dictionary* \u2013 {\"enter the blue room\": \"prop_1\", \"the red room\": \"prop_2\", \"proceed until the red room\": \"prop_1 until prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 6480, "sentence": ["go", "to", "the", "red", "room", "or", "the", "yellow", "room", "and", "head", "straight", "away", "to", "the", "green", "room", "avoiding", "the", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "red", "room", "or", "the", "yellow", "room", "and", "head", "straight", "away", "to", "the", "prop_1", "avoiding", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "- (F prop_1) or ( (prop_2 and next prop_3) and (not prop_2 U prop_3) )"}
{"id": 6622, "sentence": ["first", "enter", "the", "red", "room", "and", "then", "move", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["first", "enter", "the", "prop_1", "and", "then", "move", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "  \"first ... and then ...\": \"((not prop_2) until prop_1) and finally prop_2\""}
{"id": 8582, "sentence": ["go", "the", "red", "room", "get", "dog", "and", "go", "back", "to", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "the", "prop_1", "get", "dog", "and", "go", "back", "to", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F (prop_1 implies (F prop_2))) and (F (prop_2 implies (F prop_3))) FINISH"}
{"id": 2586, "sentence": ["go", "into", "the", "green", "room", "by", "way", "of", "the", "yellow", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_2", "by", "way", "of", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_2), but only after having passed through the yellow room (prop_1). This can be expressed as: eventually (F) the green room is reached, and before that, the yellow room must have been reached. Using temporal logic, this is captured by stating that the green room is eventually reached, and until then, the yellow room must be reached first. More precisely, the green room is eventually reached, and until that point, the yellow room is true at some point before.\n\n2. *Explanation dictionary* \u2013\n{\n  \"yellow room\": \"prop_1\",\n  \"green room\": \"prop_2\",\n  \"go into the green room by way of the yellow room\": \"F (prop_2 and F prop_1)\"\n}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 1864, "sentence": ["go", "through", "blue", "room", "to", "get", "to", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "to", "get", "to", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_2) and ((not prop_2) U prop_1) FINISH"}
{"id": 8357, "sentence": ["go", "through", "the", "red", "to", "get", "to", "the", "green"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "get", "to", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(red) must be true at some point before reaching prop_2 (green). The phrase \"to get to the green\" means that eventually prop_2 (green) must be true. So, we want that eventually prop_2 is true, and before that, prop_1 must have been true. This can be expressed as: prop_2 eventually holds (F prop_2), and prop_1 holds until prop_2 (prop_1 U prop_2).\n\n2. *Explanation dictionary* \u2013 {\"go through the red\": \"prop_1 U prop_2\", \"to get to the green\": \"F prop_2\"}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 8690, "sentence": ["go", "to", "the", "blue", "area", "through", "yellow", "area"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "area", "through", "prop_1", "area"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1), but before that, it must pass through the yellow area (prop_2). This can be expressed as: the blue area is eventually reached (F prop_1), and until then, the yellow area must be visited (F prop_2 before prop_1). More precisely, the yellow area must be visited before the blue area is reached. This can be captured by stating that the blue area is eventually reached, and until the blue area is reached, the yellow area must be true at some point (F prop_2), or more strictly, the path to blue area passes through yellow area.\n\nOne way to express \"go to blue area through yellow area\" is:\n\n- Eventually blue area is reached: F prop_1\n- Before reaching blue area, yellow area is visited: prop_2 occurs before prop_1\n\nIn LTL, \"prop_2 occurs before prop_1\" can be expressed as: \"not prop_1 until prop_2\" (i.e., prop_2 happens before prop_1)"}
{"id": 9253, "sentence": ["pass", "through", "the", "non", "yellow", "room", "to", "enter", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["pass", "through", "the", "non", "prop_2", "to", "enter", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (not prop_1) until prop_2 FINISH"}
{"id": 10780, "sentence": ["go", "to", "the", "green", "room", "through", "the", "red", "or", "yellow", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "to", "the", "prop_3", "through", "the", "red", "prop_1", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 3, 3, 0, 0, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(finally) the green room is reached (prop_1), and before that, the system must pass through either the red room (prop_2) or the yellow room (prop_3). This can be expressed as: eventually prop_1 holds, and until then, prop_2 or prop_3 must hold.\n\n2. *Explanation dictionary* \u2013\n{\n  \"green room\": \"prop_1\",\n  \"red room\": \"prop_2\",\n  \"yellow room\": \"prop_3\",\n  \"go to the green room through the red or yellow room\": \"F (prop_1 and (true U (prop_2 or prop_3)))\"\n}\n\n3. *FINAL:* F (prop_2 or prop_3)"}
{"id": 6308, "sentence": ["move", "the", "robot", "from", "the", "red", "room", "to", "the", "yellow", "or", "green", "room", "to", "the", "big", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "the", "robot", "from", "the", "red", "room", "to", "the", "prop_2", "or", "prop_1", "to", "the", "big", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1), eventually the robot moves to either the yellow or green room (prop_2), and then eventually moves to the big blue room (prop_3), in that order.\n\nWe use the \"until\" and \"finally\" operators to capture the sequence:\n\n- The robot is initially in the red room (prop_1).\n- Eventually, the robot moves to the yellow or green room (prop_2).\n- Eventually after that, the robot moves to the big blue room (prop_3)"}
{"id": 110, "sentence": ["go", "to", "yellow", "room", "through", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_2", "through", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (F prop_2) and ((not prop_1) U prop_1) FINISH"}
{"id": 231, "sentence": ["pass", "through", "the", "green", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "prop_1", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 implies F prop_2) FINISH"}
{"id": 6447, "sentence": ["pass", "through", "the", "non", "blue", "room", "to", "enter", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["pass", "through", "the", "non", "prop_2", "to", "enter", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (not prop_1) until prop_2 FINISH"}
{"id": 7368, "sentence": ["go", "through", "the", "red", "or", "yellow", "room", "and", "go", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "prop_2", "and", "go", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F (prop_1 or prop_2)) and (F prop_3) FINISH"}
{"id": 7264, "sentence": ["move", "through", "the", "red", "room", "and", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "the", "prop_1", "and", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (prop_1 U prop_2) FINISH"}
{"id": 1131, "sentence": ["go", "to", "the", "green", "room", "but", "do", "not", "take", "the", "blue", "room", "to", "get", "there"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "take", "the", "blue", "prop_2", "get", "there"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G not prop_2) FINISH"}
{"id": 6770, "sentence": ["move", "to", "the", "red", "room", "then", "move", "with", "the", "object", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "then", "move", "with", "the", "object", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 U (F prop_2)) FINISH"}
{"id": 10551, "sentence": ["go", "through", "the", "blue", "room", "and", "enter", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "and", "enter", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 U prop_2) and prop_2 FINISH"}
{"id": 6561, "sentence": ["the", "robot", "goes", "through", "the", "green", "to", "get", "to", "red"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["the", "robot", "goes", "through", "the", "prop_1", "to", "get", "to", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (finally(prop_1) and finally(prop_2)) FINISH"}
{"id": 5814, "sentence": ["go", "to", "the", "green", "room", "but", "do", "not", "enter", "the", "blue", "room", "first"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "enter", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (not(prop_2)) U prop_1 FINISH"}
{"id": 2323, "sentence": ["avoid", "the", "yellow", "room", "and", "enter", "the", "green", "room", "through", "either", "the", "red", "or", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["avoid", "the", "yellow", "room", "and", "enter", "the", "prop_3", "through", "either", "the", "red", "prop_1", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(where prop_1 = \"in yellow room\"). The phrase \"enter the green room through either the red or blue room\" means that eventually the system reaches the green room (prop_2), and before that, it must have passed through either the red room (prop_3) or the blue room (prop_4). This can be expressed as: eventually prop_2, and before prop_2, the system was in prop_3 or prop_4. Using until, we can say that prop_2 is reached, and before that, the system was in prop_3 or prop_4. To express \"enter green room through either red or blue room,\" we can say: eventually prop_2, and globally before prop_2, the system was in prop_3 or prop_4. Since LTL does not have past operators, we can express this as: eventually prop_2, and prop_2 is only reached after prop_3 or prop_4 has occurred. One way is: (F prop_2) and ( (not prop_2)"}
{"id": 1673, "sentence": ["enter", "the", "green", "room", "through", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_2", "through", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 implies F prop_2) FINISH"}
{"id": 5287, "sentence": ["go", "to", "the", "blue", "room", "but", "don", "t", "go", "through", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "don", "t", "go", "through", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (finally(prop_1) and globally(not(prop_2))) FINISH"}
{"id": 8619, "sentence": ["move", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(representing \"in the green room\") holds true. Since the command is about moving to a location, the temporal operator \"finally\" (F)"}
{"id": 6905, "sentence": ["move", "to", "the", "red", "room", "move", "to", "the", "object", "in", "the", "red", "room", "move", "the", "object", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "red", "room", "move", "to", "the", "object", "in", "the", "prop_1", "move", "the", "object", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F (prop_1 implies F prop_2)) and (F ((prop_1 and prop_2) implies F prop_3)) FINISH"}
{"id": 9836, "sentence": ["travel", "to", "the", "red", "room", "through", "the", "room", "that", "isn", "t", "yellow"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["travel", "to", "the", "red", "room", "through", "the", "prop_2", "that", "isn", "t", "yellow"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(where prop_1 = \"in red room\").\n- \"through the room that isn't yellow\" means that until reaching the red room, the system must always be in rooms that are not yellow: G (not prop_2) until prop_1 (where prop_2 = \"in yellow room\").\nCombining these, the system must stay in non-yellow rooms until it reaches the red room.\n\n2. *Explanation dictionary*:\n{\n  \"travel to the red room\": \"F prop_1\",\n  \"the red room\": \"prop_1\",\n  \"the room that isn't yellow\": \"not prop_2\",\n  \"isn't yellow\": \"not prop_2\",\n  \"through the room that isn't yellow\": \"not prop_2 U prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 9124, "sentence": ["while", "avoiding", "the", "red", "room", "follow", "the", "shortest", "path", "to", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["while", "avoiding", "the", "prop_2", "follow", "the", "shortest", "path", "to", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (globally (not prop_1)) and (finally prop_2) FINISH"}
{"id": 2707, "sentence": ["instead", "of", "going", "through", "the", "red", "room", "move", "through", "the", "yellow", "room", "to", "enter", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["instead", "of", "going", "through", "the", "red", "room", "move", "through", "the", "prop_1", "to", "enter", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* globally (not prop_1) and finally (prop_2 and next prop_3) FINISH"}
{"id": 5224, "sentence": ["go", "towards", "the", "green", "room", "and", "avoid", "the", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "towards", "the", "prop_1", "and", "avoid", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G (not prop_2)) FINISH"}
{"id": 4212, "sentence": ["go", "to", "green", "area", "by", "avoiding", "red", "area"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "area", "by", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "  \"avoiding red area\": \"G (not prop_2) until prop_1\""}
{"id": 10088, "sentence": ["go", "to", "the", "blue", "room", "then", "go", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "go", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F prop_2) and (not prop_2 U prop_1) FINISH"}
{"id": 3919, "sentence": ["go", "to", "the", "blue", "but", "do", "not", "go", "through", "red"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "go", "through", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* ((not prop_2) until prop_1) FINISH"}
{"id": 96, "sentence": ["go", "to", "the", "red", "room", "push", "the", "object", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "push", "the", "object", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (F (prop_1 implies F prop_2)) FINISH"}
{"id": 10954, "sentence": ["go", "to", "the", "red", "room", "without", "passing", "through", "the", "green", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "without", "passing", "through", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_2 = \"being in the green room\") must hold globally until prop_1 is reached. This is captured by \"(not prop_2) U prop_1\".\n\n2. *Explanation dictionary* \u2013 {\"go to the red room\": \"F prop_1\", \"without passing through the green room\": \"(not prop_2) U prop_1\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 7027, "sentence": ["go", "through", "either", "the", "yellow", "or", "the", "green", "room", "to", "get", "to", "the", "red", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "either", "the", "prop_2", "or", "the", "prop_1", "to", "get", "to", "the", "red", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 0, 1, 1, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(finally) either prop_1 (yellow room) or prop_2 (green room) must be true. The phrase \"to get to the red room\" means that eventually (finally) prop_3 (red room) must be true. Since the command implies that the red room is reached after going through either the yellow or green room, we express that eventually the red room is reached, and before that, eventually the yellow or green room is reached. This can be captured by stating that eventually the red room is reached, and before that, eventually the yellow or green room is reached. One way to express this is: finally (prop_1 or prop_2) and finally prop_3, with the understanding that the yellow or green room is visited before the red room. To enforce the order, we can say that until the red room is reached, the yellow or green room must be visited. Using until operator: (prop_1 or prop_2)"}
{"id": 5554, "sentence": ["go", "to", "the", "red", "room", "then", "to", "then", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "to", "then", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), and after that, eventually reach the green room (prop_2). This can be expressed as \"eventually prop_1\" followed by \"eventually prop_2\" after prop_1 has occurred. Using temporal logic, this is captured by \"F prop_1 and then prop_1 until F prop_2\", or more simply \"F (prop_1 and F prop_2)\".\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\": \"prop_1\",\n  \"then to the green room\": \"F prop_2\",\n  \"go to the red room then to the green room\": \"F (prop_1 and F prop_2)\"\n}\n\n3. *FINAL:* F (prop_1 and F prop_2)"}
{"id": 7940, "sentence": ["go", "through", "yellow", "rooms", "to", "get", "to", "the", "green", "one"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "rooms", "to", "get", "to", "the", "prop_2", "one"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1) until (prop_2) FINISH"}
{"id": 4798, "sentence": ["go", "to", "the", "green", "area", "through", "yellow", "area"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "area", "through", "prop_1", "area"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(finally) the green area (prop_1) must be reached, and until that happens, the system must remain in the yellow area (prop_2). So, \"through yellow area\" maps to \"yellow area holds until green area is reached,\" and \"go to the green area\" maps to \"eventually green area.\"\n\n2. *Explanation dictionary* \u2013 {\"go to the green area\": \"F prop_1\", \"through yellow area\": \"prop_2 U prop_1\"}\n\n3. *FINAL:* (prop_2 U prop_1)"}
{"id": 8537, "sentence": ["go", "via", "green", "color", "path", "to", "reach", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "via", "prop_1", "color", "path", "to", "reach", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) FINISH"}
{"id": 6381, "sentence": ["go", "to", "the", "yellow", "room", "while", "avoiding", "the", "red", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(yellow room). The phrase \"while avoiding the red room\" means that at all times before reaching the yellow room, the red room (prop_2) is not visited. This is captured by globally not prop_2 until prop_1 is reached.\n\n2. *Explanation dictionary* \u2013 {\"go to the yellow room\": \"F prop_1\", \"avoiding the red room\": \"G (not prop_2)\"}\n\n3. *FINAL:* (not prop_2)"}
{"id": 7054, "sentence": ["enter", "red", "room", "via", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "prop_2", "via", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 2, 2, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* finally (prop_1 and finally prop_2) FINISH"}
{"id": 3464, "sentence": ["go", "to", "blue", "room", "by", "using", "green", "or", "yellow", "rooms", "first"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "to", "prop_3", "by", "using", "green", "prop_1", "yellow", "prop_2", "first"], "lifted_sentence_prop_ids": [0, 0, 3, 3, 0, 0, 1, 0, 2, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1), but before that, it must have passed through either the green room (prop_2) or the yellow room (prop_3). This can be expressed as: eventually prop_1 holds, and before that, prop_2 or prop_3 must have held at some point. Using temporal logic, this is captured by saying that prop_1 eventually holds (F prop_1)"}
{"id": 9086, "sentence": ["move", "to", "the", "yellow", "room", "without", "using", "the", "green", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "without", "using", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(indicating that eventually the system reaches the yellow room). The phrase \"without using the green room\" means that the green room (prop_2) is never visited before reaching the yellow room. This can be expressed as: globally (not prop_2) until prop_1. So the system must avoid prop_2 until prop_1 becomes true.\n\n2. *Explanation dictionary* \u2013\n{\n  \"move to the yellow room\": \"prop_1\",\n  \"without using the green room\": \"not prop_2 U prop_1\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 4433, "sentence": ["travel", "to", "the", "green", "room", "through", "the", "room", "that", "isn", "t", "blue"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["travel", "to", "the", "prop_1", "through", "the", "room", "that", "isn", "t", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(green room). The phrase \"through the room that isn't blue\" means that before reaching the green room, we must pass through a room where \"not blue\" holds (prop_2 represents \"room that is not blue\"). So, the formula states: eventually (prop_2 and eventually prop_1), or more precisely, that prop_2 holds until prop_1 holds.\n\n2. *Explanation dictionary* \u2013\n{\n  \"travel to the green room\": \"F prop_1\",\n  \"the green room\": \"prop_1\",\n  \"through the room that isn't blue\": \"prop_2 U prop_1\",\n  \"room that isn't blue\": \"not prop_3\"\n}\n\n3. *FINAL:* (prop_2 U prop_1) and F prop_1 and prop_2 = not prop_3 and F prop_1 and (not prop_3 U prop_1)"}
{"id": 5474, "sentence": ["go", "into", "the", "blue", "room", "and", "then", "the", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "and", "then", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (prop_1 and finally prop_2) FINISH"}
{"id": 4366, "sentence": ["go", "to", "the", "red", "room", "only", "through", "the", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "only", "through", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (not prop_1 U prop_2) and (prop_2 U prop_1) FINISH"}
{"id": 544, "sentence": ["move", "to", "the", "red", "room", "then", "move", "with", "the", "object", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "then", "move", "with", "the", "object", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (prop_1 U (F prop_2)) FINISH"}
{"id": 8713, "sentence": ["move", "to", "the", "red", "room", "and", "push", "the", "object", "back", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "push", "the", "object", "back", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(finally) prop_1, where prop_1 stands for \"being in the red room\".\n- \"push the object back into the blue room\": This can be represented as eventually prop_2, where prop_2 stands for \"object is in the blue room\".\n\nSince the command requires both actions to happen, we use \"and\" to combine the two \"finally\" formulas.\n\n2. *Explanation dictionary* \u2013\n{\"move to the red room\": \"F prop_1\", \"push the object back into the blue room\": \"F prop_2\"}\n\n3. *FINAL:* (F prop_1) and (F prop_2)"}
{"id": 7359, "sentence": ["go", "into", "the", "green", "room", "through", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_2", "through", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F prop_2), and before that, it must have been in the red room. This can be captured by saying that prop_1 holds until prop_2 becomes true: (prop_1 U prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n  \"red room\": \"prop_1\",\n  \"green room\": \"prop_2\",\n  \"go into the green room through the red room\": \"(prop_1 U prop_2)\"\n}\n\n3. *FINAL:* (prop_1 U prop_2)"}
{"id": 9641, "sentence": ["go", "to", "the", "red", "room", "or", "the", "yellow", "room", "and", "head", "straight", "away", "to", "the", "green", "room", "avoiding", "the", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "red", "room", "or", "the", "yellow", "room", "and", "head", "straight", "away", "to", "the", "prop_1", "avoiding", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "  - So: (not prop_2) U prop_3"}
{"id": 586, "sentence": ["go", "through", "the", "red", "room", "and", "enter", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "and", "enter", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 until prop_2) and F prop_2 FINISH"}
{"id": 7871, "sentence": ["only", "go", "through", "rooms", "that", "are", "not", "red", "to", "get", "to", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["only", "go", "through", "rooms", "that", "are", "not", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (G (prop_1 implies not prop_2)) and (F prop_3) FINISH"}
{"id": 8780, "sentence": ["go", "through", "blue", "or", "red", "to", "get", "to", "green"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "prop_2", "or", "prop_1", "to", "get", "to", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1, 0, 0, 0, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "  \"blue or red\": \"(prop_1 or prop_2)\","}
{"id": 5794, "sentence": ["go", "to", "the", "green", "room", "without", "entering", "a", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "without", "entering", "a", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(always) not prop_2 holds until prop_1 is reached.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the green room\": \"F prop_1\",\n  \"without entering a red room\": \"G (not prop_2) U prop_1\"\n}\n\n3. *FINAL:* (G (not prop_2) U prop_1)"}
{"id": 6383, "sentence": ["go", "to", "the", "blue", "room", "then", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1 implies F prop_2)\". But since only the given operators are allowed, we can express \"then\" as \"prop_1 until prop_2\" or \"F prop_1 and then F prop_2 with prop_1 before prop_2\". The simplest is \"F prop_1 and then F prop_2 with prop_1 before prop_2\", which is \"F prop_1 and (not prop_2 until prop_1)"}
{"id": 3627, "sentence": ["the", "robot", "is", "to", "move", "towards", "the", "green", "room", "without", "entering", "a", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["the", "robot", "is", "to", "move", "towards", "the", "prop_1", "without", "entering", "a", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (F prop_1) and (G not prop_2) FINISH"}
{"id": 2363, "sentence": ["get", "to", "the", "yellow", "area", "by", "avoiding", "the", "blue", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["get", "to", "the", "prop_1", "area", "by", "avoiding", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (G (not prop_2)) and (F prop_1) FINISH"}
{"id": 4315, "sentence": ["avoid", "yellow", "area", "on", "way", "to", "blue", "area", "each", "time"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "prop_2", "area", "on", "way", "to", "prop_1", "area", "each", "time"], "lifted_sentence_prop_ids": [0, 2, 0, 0, 0, 0, 1, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) should never be true, so globally not prop_1: G (not prop_1). The phrase \"on way to blue area each time\" means that whenever we are on the way to the blue area (prop_2), the avoidance condition must hold. Since \"on way to blue area\" is the context, we interpret it as \"until blue area is reached\" (prop_2). So, until prop_2 becomes true, prop_1 must not occur. This is expressed as: (not prop_1) U prop_2. Since this must hold each time, globally we have G ((not prop_1) U prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n  \"yellow area\": \"prop_1\",\n  \"blue area\": \"prop_2\",\n  \"avoid yellow area\": \"not prop_1\",\n  \"on way to blue area\": \"(not prop_1) U prop_2\",\n  \"each time\": \"G\"\n}\n\n3. *FINAL:* G ((not prop_1) U prop_2)"}
{"id": 4656, "sentence": ["go", "to", "the", "green", "room", "and", "then", "go", "to", "the", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "then", "go", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 and (prop_1 until prop_2)) FINISH"}
