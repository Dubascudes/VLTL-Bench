{"id": 2918, "sentence": ["go", "to", "red", "but", "not", "through", "green"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "but", "not", "through", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "  \"not through green\" : \"not prop_2\""}
{"id": 2227, "sentence": ["enter", "the", "yellow", "or", "red", "room", "and", "then", "continue", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["enter", "the", "prop_2", "or", "prop_1", "and", "then", "continue", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) and X prop_3 FINISH"}
{"id": 654, "sentence": ["enter", "the", "blue", "room", "without", "entering", "a", "red", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "entering", "a", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1), then it is not the case that we have entered the red room (not prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n  \"enter the blue room\": \"prop_1\",\n  \"entering a red room\": \"prop_2\",\n  \"without entering a red room\": \"not prop_2\"\n}\n\n3. *FINAL:* G (prop_1 \u2192 not prop_2)"}
{"id": 1795, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room). In temporal logic, we can represent this as a proposition that should eventually be true. Therefore, we can express this as \"eventually reach the blue room,\" which translates to F(prop_1), where prop_1 represents the state of being in the blue room.\n\n2. *Explanation dictionary* \u2013\n{\n    \"go to the blue room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 2457, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room). We can represent this as a proposition placeholder, say prop_1, which indicates that we are in the blue room. The command implies that we should eventually reach this state, so we can use the \"finally\" operator (F)"}
{"id": 881, "sentence": ["go", "through", "the", "blue", "room", "to", "the", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(go through the blue room), and then `prop_2` must hold (go to the red room)"}
{"id": 2423, "sentence": ["move", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 891, "sentence": ["only", "go", "to", "the", "red", "room", "by", "first", "entering", "the", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["only", "go", "to", "the", "prop_2", "by", "first", "entering", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) can only occur after the action of entering the blue room (prop_2) has occurred. We can express this as: \"if you go to the red room, then it must be the case that you have entered the blue room first.\"\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\" : \"prop_1\",\n  \"first entering the blue room\" : \"prop_2\"\n}\n\n3. *FINAL:* prop_1 \u2192 F(prop_2)"}
{"id": 118, "sentence": ["go", "through", "green", "to", "get", "to", "blue"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "to", "get", "to", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(indicating that the action of going through green is true).\n   - \"to get to blue\" can be represented as prop_2 (indicating that the action of getting to blue is true)"}
{"id": 3074, "sentence": ["move", "to", "the", "red", "room", "without", "using", "the", "green", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "without", "using", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) should occur while globally ensuring that the green room (prop_2) is not used (not prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n  \"move to the red room\" : \"prop_1\",\n  \"without using the green room\" : \"not prop_2\"\n}\n\n3. *FINAL:* prop_1 U (G not prop_2)"}
{"id": 2886, "sentence": ["go", "to", "green", "via", "green", "or", "yellow", "but", "not", "red"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "green", "via", "prop_1", "or", "yellow", "but", "not", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "  \"not red\": \"not prop_4\""}
{"id": 839, "sentence": ["go", "through", "the", "red", "or", "blue", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "prop_2", "to", "get", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) \u2192 F(prop_3) FINISH"}
{"id": 1756, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room). We can represent this as a proposition placeholder, say prop_1, which indicates that we are in the blue room. The command implies that we should eventually reach this state, so we can use the \"finally\" operator (F)"}
{"id": 1380, "sentence": ["go", "through", "the", "yellow", "room", "and", "into", "the", "blue", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "and", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 and prop_2 FINISH"}
{"id": 992, "sentence": ["go", "to", "the", "yellow", "room", "only", "and", "then", "the", "green", "room", "only"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "only", "and", "then", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), and \"then go to the green room\" can be represented as another proposition (prop_2). The use of \"only\" indicates that these actions should occur exclusively in the specified order. Therefore, we can express this as: first, we must go to the yellow room (prop_1), and this must happen before we go to the green room (prop_2). The final formula will reflect that going to the yellow room must happen before going to the green room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the yellow room\": \"prop_1\",\n  \"then go to the green room\": \"prop_2\",\n  \"only\": \"\u2192\"\n}\n\n3. *FINAL:* prop_1 U (prop_2)"}
{"id": 579, "sentence": ["move", "to", "yellow", "or", "red", "room", "them", "move", "to", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "to", "prop_2", "or", "prop_1", "them", "move", "to", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) \u2192 X prop_3 FINISH"}
{"id": 2299, "sentence": ["go", "to", "the", "red", "room", "and", "then", "go", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "then", "go", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 459, "sentence": ["go", "to", "red", "room", "get", "chair", "go", "to", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "get", "chair", "go", "to", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(X prop_2) \u2192 (X X prop_3).\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to red room\": \"prop_1\",\n  \"get chair\": \"prop_2\",\n  \"go to blue room\": \"prop_3\"\n}\n\n3. *FINAL:* prop_1 \u2192 (X prop_2) \u2192 (X X prop_3)"}
{"id": 1803, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(the yellow room). We can represent this as a proposition placeholder, say prop_1, which indicates that we are in the yellow room. The command implies that we should eventually reach this state, so we can use the \"finally\" operator (F)"}
{"id": 2773, "sentence": ["move", "to", "the", "large", "blue", "room", "while", "avoiding", "the", "small", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_1", "while", "avoiding", "the", "small", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 U not prop_2 FINISH"}
{"id": 2566, "sentence": ["the", "robot", "has", "to", "go", "through", "the", "red", "or", "yellow", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["the", "robot", "has", "to", "go", "through", "the", "prop_1", "or", "prop_2", "to", "get", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) \u2192 F prop_3 FINISH"}
{"id": 2676, "sentence": ["while", "avoiding", "the", "red", "room", "follow", "the", "shortest", "path", "to", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["while", "avoiding", "the", "prop_2", "follow", "the", "shortest", "path", "to", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(\"while\") that must be maintained until a certain condition is met. The phrase \"avoiding the red room\" suggests a condition that must always hold true during the action. The action itself is to \"follow the shortest path to the green room,\" which can be represented as a proposition that must eventually be true. Therefore, we can express this as: \"G (not prop_1) U F prop_2\", where prop_1 represents being in the red room and prop_2 represents reaching the green room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"avoiding the red room\": \"not prop_1\",\n  \"follow the shortest path to the green room\": \"F prop_2\",\n  \"while\": \"G (...) U ...\"\n}\n\n3. *FINAL:* G (not prop_1)"}
{"id": 858, "sentence": ["go", "to", "the", "green", "room", "via", "the", "yellow", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "via", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 \u2192 X prop_2 U prop_1 FINISH"}
{"id": 1630, "sentence": ["move", "into", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 FINISH"}
{"id": 1737, "sentence": ["move", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F)"}
{"id": 564, "sentence": ["move", "to", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1)"}
{"id": 2927, "sentence": ["go", "to", "the", "yellow", "room", "but", "avoid", "the", "green", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F prop_1) while ensuring that we are not in the green room (not prop_2)"}
{"id": 1174, "sentence": ["move", "into", "the", "green", "room", "while", "being", "sure", "to", "pass", "through", "only", "the", "yellow", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "into", "the", "prop_2", "while", "being", "sure", "to", "pass", "through", "only", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_2 U prop_1 FINISH"}
{"id": 1317, "sentence": ["go", "through", "the", "green", "room", "to", "get", "to", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "get", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 3108, "sentence": ["enter", "the", "green", "room", "without", "passing", "the", "red", "one"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "passing", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) should occur globally (G) while the condition of not passing the red room (not prop_2) holds true until the action is completed.\n\n2. *Explanation dictionary* \u2013\n{\n  \"enter the green room\" : \"prop_1\",\n  \"without passing the red room\" : \"not prop_2\"\n}\n\n3. *FINAL:* G (not prop_2 U prop_1)"}
{"id": 1237, "sentence": ["travel", "through", "the", "green", "room", "to", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["travel", "through", "the", "prop_1", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 2795, "sentence": ["go", "only", "through", "rooms", "that", "are", "not", "yellow", "to", "get", "to", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "only", "through", "rooms", "that", "are", "not", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(always) when moving to the blue room, the rooms traversed must not be yellow.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go only through rooms that are not yellow\": \"G (prop_1 \u2192 not prop_2)\",\n  \"to get to the blue room\": \"F prop_3\"\n}\n\n3. *FINAL:* G (prop_1 \u2192 not prop_2)"}
{"id": 2546, "sentence": ["go", "into", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1).\n\n2. *Explanation dictionary* \u2013\n{\n  \"go into the red room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 43, "sentence": ["go", "to", "the", "green", "room", "by", "passing", "through", "the", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "by", "passing", "through", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_2 U prop_1 FINISH"}
{"id": 2022, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1).\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the yellow room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 1997, "sentence": ["go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(let's denote it as `prop_1`) should hold true. Therefore, we can express this as \"eventually be in the green room,\" which translates to F(prop_1).\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the green room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 2949, "sentence": ["walk", "to", "the", "blue", "room", "while", "avoiding", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["walk", "to", "the", "prop_1", "while", "avoiding", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 U not prop_2 FINISH"}
{"id": 1575, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F)"}
{"id": 1414, "sentence": ["enter", "the", "blue", "room", "by", "going", "though", "the", "yellow", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_2", "by", "going", "though", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_2 \u2192 X prop_1 FINISH"}
{"id": 2455, "sentence": ["move", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F)"}
{"id": 309, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(the red room). In temporal logic, we can express this as a proposition that should eventually be true. Therefore, we can represent this command as \"eventually be in the red room,\" which translates to F(prop_1), where prop_1 represents the state of being in the red room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 3267, "sentence": ["go", "to", "the", "yellow", "room", "while", "avoiding", "the", "blue", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) holding true until \"being in the blue room\" (prop_2)"}
{"id": 432, "sentence": ["go", "to", "the", "red", "room", "and", "take", "the", "chair", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "take", "the", "chair", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(and)"}
{"id": 1458, "sentence": ["enter", "the", "green", "room", "and", "exit", "into", "the", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_1", "and", "exit", "into", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 and prop_2 FINISH"}
{"id": 76, "sentence": ["go", "to", "the", "green", "room", "via", "the", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "via", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1)"}
{"id": 1824, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1).\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the yellow room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 606, "sentence": ["move", "through", "the", "yellow", "or", "green", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "through", "the", "prop_2", "or", "prop_1", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) \u2192 prop_3 FINISH"}
{"id": 1794, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F).\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the yellow room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 3142, "sentence": ["enter", "the", "red", "room", "without", "entering", "a", "blue", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "entering", "a", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(always)"}
{"id": 2085, "sentence": ["enter", "the", "green", "room", "without", "entering", "a", "blue", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "entering", "a", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) must happen while globally (G) ensuring that entering a blue room (prop_2) does not occur.\n\n2. *Explanation dictionary* \u2013\n{\n  \"enter the green room\" : \"prop_1\",\n  \"entering a blue room\" : \"prop_2\"\n}\n\n3. *FINAL:* prop_1 U (G not prop_2)"}
{"id": 2143, "sentence": ["travel", "to", "the", "blue", "room", "but", "do", "not", "go", "through", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["travel", "to", "the", "prop_1", "but", "do", "not", "go", "through", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) and the second part is the negation of going through the yellow room (not prop_2)"}
{"id": 2422, "sentence": ["go", "to", "the", "red", "room", "go", "to", "the", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "go", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) and X(prop_2)"}
{"id": 3097, "sentence": ["move", "to", "the", "large", "blue", "room", "while", "avoiding", "the", "small", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_1", "while", "avoiding", "the", "small", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 U not prop_2 FINISH"}
{"id": 1280, "sentence": ["go", "to", "the", "yellow", "area", "through", "green", "area"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "area", "through", "prop_1", "area"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1), and \"through green area\" can be represented as another proposition (prop_2)"}
{"id": 1859, "sentence": ["move", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), where prop_1 represents the action of moving to the green room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"move to the green room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 2893, "sentence": ["to", "reach", "the", "blue", "room", "do", "not", "go", "through", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["to", "reach", "the", "prop_1", "do", "not", "go", "through", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) is dependent on the condition of not going through the yellow room (prop_2)"}
{"id": 728, "sentence": ["push", "the", "object", "from", "the", "red", "room", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["push", "the", "object", "from", "the", "prop_1", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1)"}
{"id": 2653, "sentence": ["go", "to", "blue", "room", "through", "red", "or", "yellow", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "to", "prop_3", "through", "red", "prop_1", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 3, 3, 0, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* F (prop_2 or prop_3) \u2192 prop_1 FINISH"}
{"id": 1167, "sentence": ["move", "toward", "the", "red", "room", "then", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "toward", "the", "prop_1", "then", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 3060, "sentence": ["enter", "the", "blue", "room", "without", "entering", "a", "red", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "entering", "a", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1), then it is not the case that we have entered the red room (not prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n  \"enter the blue room\": \"prop_1\",\n  \"entering a red room\": \"prop_2\",\n  \"without entering a red room\": \"not prop_2\"\n}\n\n3. *FINAL:* G (prop_1 \u2192 not prop_2)"}
{"id": 738, "sentence": ["go", "to", "the", "yellow", "object", "in", "the", "red", "room", "and", "move", "it", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "yellow", "object", "in", "the", "prop_1", "and", "move", "it", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 and prop_2 FINISH"}
{"id": 1542, "sentence": ["go", "to", "the", "green", "room", "then", "go", "to", "the", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "go", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(going to the green room), and the second action is represented by `prop_2` (going to the yellow room)"}
{"id": 1490, "sentence": ["go", "through", "the", "green", "room", "to", "get", "to", "the", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "get", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 1819, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room). In temporal logic, we can represent this as a proposition that should eventually be true. Therefore, we can express this as \"eventually be in the blue room,\" which translates to F(prop_1), where prop_1 represents the state of being in the blue room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the blue room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 1514, "sentence": ["go", "through", "the", "green", "room", "in", "to", "the", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "in", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) and \"go into the yellow room\" as another proposition (prop_2)"}
{"id": 1049, "sentence": ["move", "through", "the", "blue", "room", "to", "the", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "the", "prop_1", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) and moving to the red room (prop_2)"}
{"id": 1480, "sentence": ["go", "through", "the", "yellow", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) and \"go to the blue room\" as another proposition (prop_2)"}
{"id": 299, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(the red room). In temporal logic, we can express this as a proposition that should eventually be true. Therefore, we can represent this command as \"eventually be in the red room,\" which translates to F(prop_1), where prop_1 represents the state of being in the red room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 676, "sentence": ["go", "through", "square", "that", "is", "not", "green", "to", "get", "the", "blue", "rectangular"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "square", "that", "is", "not", "prop_2", "to", "get", "the", "prop_1", "rectangular"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_2)"}
{"id": 440, "sentence": ["move", "to", "the", "red", "room", "and", "push", "the", "chair", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "push", "the", "chair", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(and)"}
{"id": 2753, "sentence": ["go", "to", "the", "blue", "but", "do", "not", "go", "through", "yellow"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "go", "through", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1)"}
{"id": 3119, "sentence": ["pass", "through", "the", "non", "yellow", "room", "to", "reach", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["pass", "through", "the", "non", "prop_2", "to", "reach", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1), and \"reach the green room\" can be represented as another proposition (prop_2)"}
{"id": 474, "sentence": ["go", "through", "the", "yellow", "or", "red", "room", "to", "reach", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "to", "reach", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 155, "sentence": ["enter", "blue", "room", "via", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "prop_2", "via", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 2, 2, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_2 \u2192 F(prop_1))"}
{"id": 951, "sentence": ["go", "through", "the", "red", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 521, "sentence": ["go", "to", "the", "red", "room", "and", "then", "go", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "then", "go", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 955, "sentence": ["go", "through", "the", "red", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "get", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 1031, "sentence": ["travel", "through", "the", "red", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["travel", "through", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 1131, "sentence": ["go", "through", "the", "red", "room", "and", "enter", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "and", "enter", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "  \"and\": \"and\""}
{"id": 1129, "sentence": ["go", "to", "the", "green", "room", "only", "through", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "only", "through", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_2) is conditioned on the action of going to the red room (prop_1)"}
{"id": 2737, "sentence": ["the", "robot", "avoids", "the", "red", "to", "get", "to", "the", "yellow"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["the", "robot", "avoids", "the", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) until it reaches the yellow object (prop_2)"}
{"id": 2953, "sentence": ["walk", "through", "any", "room", "except", "the", "green", "room", "to", "enter", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["walk", "through", "any", "room", "except", "the", "prop_2", "to", "enter", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 and not prop_2) U prop_3 FINISH"}
{"id": 1666, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room). In temporal logic, we can represent this as a proposition that should eventually be true. Therefore, we can express this as \"eventually be in the blue room,\" which translates to F(prop_1), where prop_1 represents the state of being in the blue room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the blue room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 1264, "sentence": ["go", "through", "the", "yellow", "room", "into", "the", "blue", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) and \"go into the blue room\" as another proposition (prop_2)"}
{"id": 278, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(the red room). In temporal logic, we can express this as a proposition that should eventually be true. Therefore, we can represent this command as \"eventually be in the red room,\" which translates to F(prop_1), where prop_1 represents the state of being in the red room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 3087, "sentence": ["go", "to", "the", "yellow", "room", "while", "avoiding", "the", "green", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) holding true until \"being in the green room\" (prop_2) is true, which can be expressed as prop_1 U (not prop_2)"}
{"id": 857, "sentence": ["go", "to", "the", "green", "room", "via", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "via", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1).\n   - \"via the red room\" implies that before reaching the green room, the action of going to the red room (prop_2)"}
{"id": 3025, "sentence": ["enter", "into", "the", "room", "that", "is", "not", "green", "and", "continue", "through", "that", "room", "into", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "into", "the", "room", "that", "is", "not", "prop_2", "and", "continue", "through", "that", "room", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), and the second part is the action of continuing into the yellow room (prop_2)"}
{"id": 1713, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(the yellow room). We can represent this as a proposition placeholder, say prop_1, which indicates that we are in the yellow room. The command implies that we should eventually reach this state, so we can use the \"finally\" operator (F)"}
{"id": 3192, "sentence": ["drive", "through", "the", "room", "that", "is", "not", "blue", "and", "enter", "the", "red", "room", "on", "the", "other", "side"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["drive", "through", "the", "room", "that", "is", "not", "prop_2", "and", "enter", "the", "prop_1", "on", "the", "other", "side"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(representing driving through a room that is not blue), and the second part can be expressed as \"prop_2\" (representing entering the red room)"}
{"id": 922, "sentence": ["please", "go", "to", "the", "green", "room", "through", "the", "yellow", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["please", "go", "to", "the", "prop_2", "through", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) must happen first, and then going to the green room (prop_2)"}
{"id": 533, "sentence": ["move", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 FINISH"}
{"id": 3344, "sentence": ["go", "through", "the", "yellow", "or", "red", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 1474, "sentence": ["enter", "blue", "room", "via", "yellow", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "prop_2", "via", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 2, 2, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1), and then, after that, we can enter the blue room (prop_2)"}
{"id": 2044, "sentence": ["go", "to", "green", "area", "avoiding", "red", "area"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "area", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) and \"being in the red area\" as another proposition (prop_2). The command implies that we want to eventually reach the green area (F prop_1) while ensuring that we do not enter the red area (not prop_2) until we reach the green area (prop_1). Thus, the final formula will express that we will eventually reach the green area while avoiding the red area.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to green area\" : \"prop_1\",\n  \"avoiding red area\" : \"not prop_2\"\n}\n\n3. *FINAL:* F prop_1 U (not prop_2)"}
{"id": 1760, "sentence": ["go", "to", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(the green room)"}
{"id": 3321, "sentence": ["go", "thru", "the", "blue", "or", "red", "box", "to", "get", "to", "the", "yellow", "box"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "thru", "the", "prop_2", "or", "prop_1", "box", "to", "get", "to", "the", "prop_3", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 3, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 101, "sentence": ["move", "into", "the", "blue", "room", "but", "only", "via", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "into", "the", "prop_2", "but", "only", "via", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_2 \u2192 prop_1 FINISH"}
{"id": 3271, "sentence": ["move", "to", "the", "large", "yellow", "room", "while", "avoiding", "the", "small", "blue", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_1", "while", "avoiding", "the", "small", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 U not prop_2 FINISH"}
{"id": 1684, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room). In temporal logic, we can represent this as a proposition that should eventually be true. Therefore, we can express this as \"eventually be in the blue room,\" which translates to F(prop_1), where prop_1 represents the state of being in the blue room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the blue room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 1044, "sentence": ["go", "through", "the", "yellow", "room", "until", "you", "get", "to", "the", "green"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "until", "you", "get", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 2572, "sentence": ["go", "through", "the", "yellow", "or", "red", "room", "into", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "into", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 2324, "sentence": ["go", "to", "the", "yellow", "room", "and", "then", "go", "into", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "then", "go", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(for going to the yellow room), and the second action can be represented as `prop_2` (for going into the green room). The phrase \"and then\" indicates a sequence, which can be captured using the \"next\" operator (X)"}
{"id": 1543, "sentence": ["go", "through", "the", "red", "room", "and", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "and", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 and prop_2 FINISH"}
{"id": 2523, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room). In temporal logic, we can represent this as a proposition that should eventually be true. Therefore, we can express this as \"eventually be in the blue room,\" which translates to F(prop_1), where prop_1 represents the state of being in the blue room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the blue room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 3343, "sentence": ["the", "robot", "must", "move", "through", "the", "red", "or", "blue", "room", "to", "get", "to", "the", "yellow", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["the", "robot", "must", "move", "through", "the", "prop_1", "or", "prop_2", "to", "get", "to", "the", "yellow", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) \u2192 F prop_3 FINISH"}
{"id": 2118, "sentence": ["move", "to", "the", "large", "red", "room", "while", "avoiding", "the", "small", "yellow", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_1", "while", "avoiding", "the", "small", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) until we are not in the small yellow room (not prop_2)"}
{"id": 3314, "sentence": ["go", "through", "either", "a", "red", "or", "yellow", "room", "to", "enter", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "either", "a", "prop_1", "or", "prop_2", "to", "enter", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) \u2192 prop_3 FINISH"}
{"id": 2394, "sentence": ["go", "into", "the", "red", "room", "and", "then", "into", "the", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "and", "then", "into", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 U X prop_2 FINISH"}
{"id": 3155, "sentence": ["go", "to", "yellow", "room", "avoiding", "blue"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "avoiding", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F prop_1) while ensuring that we are not in the blue room (not prop_2) until we reach the yellow room (U)"}
{"id": 2355, "sentence": ["go", "to", "the", "blue", "room", "then", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(going to the blue room), and the second action is represented by `prop_2` (going to the green room)"}
{"id": 1165, "sentence": ["first", "enter", "the", "blue", "room", "and", "then", "proceed", "to", "the", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["first", "enter", "the", "prop_1", "and", "then", "proceed", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* prop_1 and X prop_2 FINISH"}
{"id": 1242, "sentence": ["go", "through", "the", "green", "box", "to", "get", "to", "the", "yellow", "area"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "box", "to", "get", "to", "the", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1), and the action of \"getting to the yellow area\" can be represented by another proposition (prop_2)"}
{"id": 2663, "sentence": ["go", "through", "the", "green", "or", "yellow", "room", "to", "the", "red", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "prop_2", "to", "the", "red", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 1148, "sentence": ["go", "through", "the", "yellow", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "get", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 124, "sentence": ["pass", "through", "the", "small", "green", "room", "to", "get", "to", "the", "large", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "small", "prop_1", "to", "get", "to", "the", "large", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 2734, "sentence": ["the", "robot", "avoids", "the", "green", "to", "get", "to", "the", "blue"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["the", "robot", "avoids", "the", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) until it reaches the blue object (prop_2)"}
{"id": 781, "sentence": ["avoid", "the", "blue", "room", "to", "get", "to", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "to", "get", "to", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(always), if one is in the blue room, then one cannot reach the green room. We can represent \"being in the blue room\" with `prop_1` and \"reaching the green room\" with `prop_2`. Thus, we can express this as: if one is in the blue room, then it is not the case that one can reach the green room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"avoid the blue room\": \"not prop_1\",\n  \"to get to the green room\": \"prop_2\"\n}\n\n3. *FINAL:* G (prop_1 \u2192 not prop_2)"}
{"id": 1403, "sentence": ["go", "to", "the", "red", "room", "through", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "through", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) must occur before reaching the red room (prop_2)"}
{"id": 2558, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(the red room). In temporal logic, we can represent this as a proposition that should eventually be true. Therefore, we can express this as \"finally, we are in the red room,\" which translates to F(prop_1), where prop_1 represents the state of being in the red room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 3001, "sentence": ["pass", "through", "any", "room", "that", "is", "not", "green", "to", "reach", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["pass", "through", "any", "room", "that", "is", "not", "prop_2", "to", "reach", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(\u00acprop_1), it is necessary to eventually reach the yellow room (prop_2). The overall structure can be represented as: if we are in a room that is not green, we will eventually reach the yellow room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"pass through any room that is not green\": \"not prop_1\",\n  \"to reach the yellow room\": \"prop_2\"\n}\n\n3. *FINAL:* (not prop_1)"}
{"id": 2266, "sentence": ["go", "to", "yellow", "room", "and", "then", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "and", "then", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 1887, "sentence": ["move", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 FINISH"}
{"id": 1982, "sentence": ["move", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 FINISH"}
{"id": 1177, "sentence": ["go", "to", "the", "green", "room", "by", "first", "entering", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "by", "first", "entering", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) must occur before going to the green room (prop_2)"}
{"id": 121, "sentence": ["go", "to", "the", "blue", "room", "and", "make", "sure", "to", "go", "through", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "and", "make", "sure", "to", "go", "through", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "  \"and\": \"and\""}
{"id": 1941, "sentence": ["go", "into", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1).\n\n2. *Explanation dictionary* \u2013\n{\n  \"go into the yellow room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 2871, "sentence": ["enter", "the", "room", "that", "is", "not", "yellow", "which", "will", "lead", "to", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "room", "that", "is", "not", "prop_2", "which", "will", "lead", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(where prop_1 represents the room being yellow). The phrase \"which will lead to the blue room\" suggests that entering this room will eventually lead to another condition, represented as \"prop_2\" (where prop_2 represents being in the blue room)"}
{"id": 3232, "sentence": ["go", "to", "the", "green", "room", "without", "entering", "a", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "without", "entering", "a", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(G) that the action of entering a red room (prop_2) does not occur while the action of going to the green room (prop_1) is being pursued.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the green room\" : \"prop_1\",\n  \"without entering a red room\" : \"not prop_2\"\n}\n\n3. *FINAL:* G (prop_1 \u2192 not prop_2)"}
{"id": 1836, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F).\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the yellow room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 3227, "sentence": ["avoid", "the", "yellow", "room", "to", "reach", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "to", "reach", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(G), we should not be in the yellow room (not prop_1) until we reach the green room (prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n  \"avoid the yellow room\": \"not prop_1\",\n  \"to reach the green room\": \"prop_2\",\n  \"globally\": \"G\",\n  \"until\": \"U\"\n}\n\n3. *FINAL:* G (not prop_1 U prop_2)"}
{"id": 2212, "sentence": ["move", "the", "robot", "from", "the", "green", "room", "to", "the", "yellow", "or", "red", "room", "to", "the", "big", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "the", "robot", "from", "the", "prop_1", "to", "the", "yellow", "prop_2", "red", "room", "to", "the", "big", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 \u2192 (prop_2 or prop_3) \u2192 prop_4 FINISH"}
{"id": 1673, "sentence": ["move", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 FINISH"}
{"id": 3111, "sentence": ["avoid", "the", "yellow", "room", "and", "move", "to", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "and", "move", "to", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* G (not prop_1) and prop_2 FINISH"}
{"id": 1138, "sentence": ["walk", "through", "the", "blue", "room", "until", "you", "reach", "the", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["walk", "through", "the", "prop_1", "until", "you", "reach", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) should hold true until the condition of reaching the yellow room (prop_2)"}
{"id": 894, "sentence": ["only", "go", "to", "the", "green", "room", "by", "first", "entering", "the", "yellow", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["only", "go", "to", "the", "prop_2", "by", "first", "entering", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_2) can only occur after the action of entering the yellow room (prop_1) has occurred. This can be represented as: if you go to the green room, then it must be the case that you have entered the yellow room first.\n\n2. *Explanation dictionary* \u2013\n{\n  \"only go to the green room by first entering the yellow room\": \"prop_2 \u2192 F(prop_1)\"\n}\n\n3. *FINAL:* prop_2 \u2192 F(prop_1)"}
{"id": 4, "sentence": ["go", "through", "the", "blue", "to", "get", "to", "the", "green"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "get", "to", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 2306, "sentence": ["go", "from", "the", "blue", "room", "to", "the", "yellow", "room", "and", "then", "go", "from", "the", "yellow", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "from", "the", "blue", "room", "to", "the", "yellow", "room", "and", "then", "go", "from", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), and the second part \"go from the yellow room to the green room\" can be represented as another proposition (prop_2). The use of \"and then\" indicates that the second action follows the first, which can be expressed using the \"next\" operator (X)"}
{"id": 1343, "sentence": ["go", "through", "the", "red", "room", "to", "reach", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "reach", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) and \"reach the blue room\" as another proposition (prop_2)"}
{"id": 1056, "sentence": ["go", "to", "the", "yellow", "room", "via", "the", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "via", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_2)"}
{"id": 2635, "sentence": ["go", "to", "green", "or", "red", "room", "to", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "red_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "to", "prop_1", "or", "prop_2", "to", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 2, 2, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) \u2192 F(prop_3) FINISH"}
{"id": 1864, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room). In temporal logic, we can represent this as a proposition that should eventually be true. Therefore, we can express this as \"eventually be in the blue room,\" which translates to F(prop_1), where prop_1 represents the state of being in the blue room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the blue room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 949, "sentence": ["go", "into", "the", "green", "room", "through", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_2", "through", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1).\n   - \"through the red room\" suggests that before going into the green room, one must first go through the red room, which can be represented as another proposition (prop_2)"}
{"id": 769, "sentence": ["go", "to", "the", "red", "room", "and", "push", "the", "yellow", "thing", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "push", "the", "yellow", "thing", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 and prop_2 FINISH"}
{"id": 3288, "sentence": ["go", "to", "the", "green", "room", "while", "avoiding", "the", "red", "room", "on", "the", "way"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "red", "prop_2", "the", "way"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F prop_1) while globally (G) avoiding the red room (not prop_2)"}
{"id": 1215, "sentence": ["go", "from", "the", "red", "room", "to", "the", "red", "room", "by", "going", "through", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "from", "the", "red", "room", "to", "the", "prop_2", "by", "going", "through", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_2) until they reach the red room again (prop_1)"}
{"id": 1067, "sentence": ["go", "thru", "the", "red", "box", "to", "get", "to", "the", "green", "box"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "thru", "the", "prop_1", "box", "to", "get", "to", "the", "prop_2", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_2)"}
{"id": 1905, "sentence": ["move", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F)"}
{"id": 2009, "sentence": ["move", "to", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(being in the green room). We can represent this as a proposition placeholder, say prop_1, which indicates the state of being in the green room. The command implies that at some point in the future, the system should reach this state. Therefore, we can express this as \"finally prop_1\", meaning that eventually, the system will be in the green room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"move to green room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 443, "sentence": ["go", "to", "the", "red", "room", "get", "the", "chair", "and", "then", "go", "back", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "get", "the", "chair", "and", "then", "go", "back", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 and prop_2 and prop_3  FINISH"}
{"id": 3094, "sentence": ["move", "to", "the", "large", "red", "room", "while", "avoiding", "the", "small", "green", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_1", "while", "avoiding", "the", "small", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) should hold true until \"not being in the small green room\" (not prop_2)"}
{"id": 2101, "sentence": ["go", "to", "green", "area", "by", "avoiding", "blue", "area"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "area", "by", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F prop_1) while ensuring that we do not enter the blue area (not prop_2) until we reach the green area (prop_1)"}
{"id": 254, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(the red room). In temporal logic, we can represent this as a proposition that should eventually be true. Therefore, we can express this as \"finally reach the red room,\" which translates to F(prop_1), where prop_1 represents the state of being in the red room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 2216, "sentence": ["go", "through", "the", "green", "or", "yellow", "room", "to", "reach", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "prop_2", "to", "reach", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 2369, "sentence": ["move", "from", "blue", "room", "to", "red", "room", "then", "move", "to", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "from", "blue", "room", "to", "prop_1", "then", "move", "to", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 \u2192 X prop_2 FINISH"}
{"id": 2488, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F)"}
{"id": 1715, "sentence": ["go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), where prop_1 represents the action of going to the green room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the green room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 828, "sentence": ["go", "to", "red", "or", "blue", "then", "green"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "to", "prop_1", "or", "prop_2", "then", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 2, 0, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 2559, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room). In temporal logic, we can represent this as a proposition that should eventually be true. Therefore, we can express this as \"eventually be in the blue room,\" which translates to F(prop_1) where prop_1 represents being in the blue room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the blue room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 2817, "sentence": ["go", "to", "the", "blue", "room", "but", "do", "not", "use", "the", "yellow", "room", "to", "get", "there"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "use", "the", "yellow", "prop_2", "get", "there"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) should occur, and at the same time, the action of using the yellow room (prop_2) should not occur. The logical structure can be expressed as: \"go to the blue room\" (prop_1) and \"not use the yellow room\" (not prop_2)"}
{"id": 1583, "sentence": ["move", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 FINISH"}
{"id": 626, "sentence": ["take", "a", "path", "to", "reach", "the", "blue", "colour", "place", "by", "not", "taking", "the", "route", "which", "is", "red", "and", "black"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["take", "a", "path", "to", "reach", "the", "prop_1", "colour", "place", "by", "not", "taking", "the", "route", "which", "is", "prop_2", "and", "black"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(the blue colour place) while avoiding a specific route (the red and black route). We can break this down into two main parts: the goal of reaching the blue colour place and the condition of not taking the red and black route. The phrase \"take a path to reach the blue colour place\" can be represented as a proposition (prop_1), and the condition of not taking the red and black route can be represented as a negation of another proposition (prop_2)"}
{"id": 2235, "sentence": ["go", "through", "the", "yellow", "or", "green", "room", "and", "enter", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "and", "enter", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) and prop_3 FINISH"}
{"id": 640, "sentence": ["move", "to", "the", "large", "blue", "room", "while", "avoiding", "the", "small", "red", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_1", "while", "avoiding", "the", "small", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* prop_1 U not prop_2 FINISH"}
{"id": 2415, "sentence": ["move", "to", "the", "blue", "room", "and", "then", "move", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "then", "move", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 1468, "sentence": ["go", "through", "the", "yellow", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 972, "sentence": ["go", "through", "the", "yellow", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 574, "sentence": ["go", "into", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1)\", where prop_1 represents the proposition \"being in the green room\".\n\n2. *Explanation dictionary* \u2013\n{\n  \"go into the green room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 1288, "sentence": ["go", "to", "the", "yellow", "room", "via", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "via", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) followed by \"go to the yellow room\" (prop_2)"}
{"id": 2297, "sentence": ["go", "to", "the", "blue", "room", "and", "then", "go", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "then", "go", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 581, "sentence": ["go", "through", "the", "yellow", "or", "red", "room", "and", "enter", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "and", "enter", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) and prop_3 FINISH"}
{"id": 1461, "sentence": ["travel", "through", "the", "green", "room", "to", "the", "red", "rectangular", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["travel", "through", "the", "prop_1", "to", "the", "red", "rectangular", "room", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 1040, "sentence": ["go", "through", "yellow", "room", "to", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), and \"go to green room\" can be represented as another proposition (prop_2)"}
{"id": 878, "sentence": ["follow", "the", "path", "through", "the", "blue", "room", "to", "get", "to", "the", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["follow", "the", "path", "through", "the", "prop_1", "to", "get", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) and then eventually reach the yellow room (prop_2)"}
{"id": 489, "sentence": ["the", "robot", "has", "to", "go", "through", "the", "yellow", "or", "red", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["the", "robot", "has", "to", "go", "through", "the", "prop_2", "or", "prop_1", "to", "get", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) \u2192 F prop_3 FINISH"}
{"id": 462, "sentence": ["go", "from", "the", "blue", "room", "to", "the", "red", "room", "then", "push", "the", "chair", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "from", "the", "blue", "room", "to", "the", "prop_1", "then", "push", "the", "chair", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(going from the blue room to the red room), and the second action can be represented as `prop_2` (pushing the chair to the blue room)"}
{"id": 680, "sentence": ["go", "to", "blue", "without", "going", "to", "green"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "without", "going", "to", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) while ensuring that it never reaches the state represented by \"green\" (prop_2)"}
{"id": 2685, "sentence": ["head", "to", "the", "blue", "rectangular", "room", "without", "passing", "through", "a", "yellow", "square", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["head", "to", "the", "blue", "rectangular", "room", "without", "passing", "through", "a", "yellow", "square", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1), indicating that the agent should eventually reach that room. The phrase \"without passing through a yellow square room\" indicates a condition that must hold true while heading to the blue rectangular room. This can be represented as a negation of another proposition (not prop_2)"}
{"id": 1527, "sentence": ["move", "through", "the", "red", "room", "and", "out", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "the", "prop_1", "and", "out", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 and prop_2 FINISH"}
{"id": 3191, "sentence": ["drive", "through", "the", "room", "that", "is", "not", "yellow", "and", "enter", "the", "green", "room", "on", "the", "other", "side"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["drive", "through", "the", "room", "that", "is", "not", "prop_2", "and", "enter", "the", "prop_1", "on", "the", "other", "side"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 3170, "sentence": ["go", "to", "the", "red", "room", "but", "do", "not", "take", "the", "blue", "room", "to", "get", "there"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "take", "the", "blue", "prop_2", "get", "there"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) indicating the action of going to the red room, while the second part can be represented as a negation of taking the blue room (not prop_2)"}
{"id": 1135, "sentence": ["walk", "through", "the", "red", "room", "until", "you", "reach", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["walk", "through", "the", "prop_1", "until", "you", "reach", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) and the condition of reaching the green room is represented by another proposition (prop_2)"}
{"id": 2463, "sentence": ["move", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* X prop_1 FINISH"}
{"id": 411, "sentence": ["go", "to", "the", "red", "room", "then", "get", "the", "chair", "then", "go", "back", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "get", "the", "chair", "then", "go", "back", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(X) and the \"until\" operator (U) to ensure the actions happen in the specified order.\n\n2. *Explanation dictionary*:\n```json\n{\n  \"go to the red room\": \"prop_1\",\n  \"get the chair\": \"prop_2\",\n  \"go back to the blue room\": \"prop_3\"\n}\n```\n\n3. *FINAL:* prop_1 \u2192 X (prop_2 \u2192 X prop_3)"}
{"id": 2811, "sentence": ["move", "to", "yellow", "room", "but", "avoid", "the", "red", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "prop_1", "but", "avoid", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* prop_1 and G(not prop_2) FINISH"}
{"id": 3224, "sentence": ["go", "to", "the", "green", "room", "while", "avoiding", "the", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) until \"being in the red room\" (prop_2) is true, while also ensuring that we are not in the red room (not prop_2)"}
{"id": 1477, "sentence": ["go", "through", "the", "green", "room", "to", "get", "to", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "get", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) and \"get to the red room\" as another proposition (prop_2)"}
{"id": 736, "sentence": ["push", "the", "object", "in", "the", "red", "room", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["push", "the", "object", "in", "the", "prop_1", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1)\"\n}\n\n3. *FINAL:* prop_2 \u2192 F(prop_1)"}
{"id": 2094, "sentence": ["move", "to", "room", "not", "using", "red", "into", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "room", "not", "using", "prop_2", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "  \"not using red\" : \"not prop_2\""}
{"id": 368, "sentence": ["go", "into", "the", "green", "room", "while", "totally", "avoiding", "the", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "while", "totally", "avoiding", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) holding true until \"being in the yellow room\" (prop_2) is true, which can be expressed as prop_1 U (not prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n  \"go into the green room\" : \"prop_1\",\n  \"totally avoiding the yellow room\" : \"not prop_2\"\n}\n\n3. *FINAL:* prop_1 U (not prop_2)"}
{"id": 701, "sentence": ["move", "to", "the", "blue", "room", "avoiding", "the", "green", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "avoiding", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), and until that point, the agent must not be in the green room (prop_2)"}
{"id": 2150, "sentence": ["go", "to", "the", "red", "room", "avoiding", "the", "yellow", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "avoiding", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F), we will reach the red room (prop_1) and that we must not be in the yellow room (prop_2) until we reach the red room. Thus, we can express this as: we will eventually reach the red room while globally ensuring that we are not in the yellow room until that point.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\": \"F prop_1\",\n  \"avoiding the yellow room\": \"G (not prop_2 U prop_1)\"\n}\n\n3. *FINAL:* F prop_1 and G (not prop_2 U prop_1)"}
{"id": 3183, "sentence": ["walk", "through", "any", "room", "except", "the", "yellow", "room", "to", "enter", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["walk", "through", "any", "room", "except", "the", "prop_2", "to", "enter", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(G) until the action of entering the green room occurs. The action of entering the green room can be represented as a proposition (prop_2). Therefore, the overall structure will be that walking through any room (prop_1) must hold globally until entering the green room (prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n  \"walk through any room except the yellow room\": \"G (prop_1 and not prop_2)\",\n  \"to enter the green room\": \"F prop_2\"\n}\n\n3. *FINAL:* G (prop_1 and not prop_2)"}
{"id": 3202, "sentence": ["go", "to", "red", "area", "by", "avoiding", "blue", "area"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "area", "by", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F prop_1) while globally avoiding the \"blue area\" (G not prop_2)"}
{"id": 59, "sentence": ["go", "thru", "the", "blue", "to", "get", "to", "the", "green"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "thru", "the", "prop_1", "to", "get", "to", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), and \"get to the green\" can be represented as another proposition (prop_2). The command implies that the first action (prop_1) must happen before the second action (prop_2)"}
{"id": 1857, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(the yellow room). We can represent this as a proposition placeholder, say prop_1, which indicates that we are in the yellow room. The command implies that we should eventually reach this state, so we can use the \"finally\" operator (F) to express that we will eventually be in the yellow room.\n\n2. *Explanation dictionary* \u2013\n{\n    \"go to the yellow room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 3253, "sentence": ["go", "into", "the", "green", "room", "but", "do", "not", "enter", "the", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "but", "do", "not", "enter", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) indicating the action of going into the green room, while the second part is a negation of another proposition (prop_2)"}
{"id": 1991, "sentence": ["go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(the green room). We can represent this as a proposition placeholder, say prop_1, which indicates that we are in the green room. The command implies that we should eventually reach this state, so we can use the \"finally\" operator (F)"}
{"id": 353, "sentence": ["go", "to", "the", "green", "room", "but", "avoid", "the", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(eventually), the agent should be in the green room (prop_1) and it should not be in the yellow room (prop_2)"}
{"id": 326, "sentence": ["move", "to", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) where prop_1 represents the action of moving to the red room.\n\n2. *Explanation dictionary* \u2013\n{\n    \"move to red room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 2256, "sentence": ["go", "to", "the", "blue", "room", "through", "green", "and", "yellow"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "to", "the", "prop_3", "through", "green", "prop_1", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 3, 3, 0, 1, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "  \"and yellow\" : \"prop_3\""}
{"id": 2645, "sentence": ["move", "through", "the", "yellow", "or", "green", "room", "to", "the", "red", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "through", "the", "prop_2", "or", "prop_1", "to", "the", "red", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) \u2192 F(prop_3) FINISH"}
{"id": 1861, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room) at some point in the future. In temporal logic, we can express this as eventually reaching the state represented by a proposition placeholder (e.g., prop_1 for being in the blue room). Therefore, we can represent this command as \"eventually be in the blue room,\" which translates to F(prop_1).\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the blue room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 2537, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(the red room). We can represent this as a proposition placeholder, say prop_1, which indicates that we are in the red room. The command implies that we should eventually reach this state, so we can use the \"finally\" operator (F)"}
{"id": 1255, "sentence": ["move", "into", "the", "red", "room", "but", "only", "via", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "into", "the", "prop_2", "but", "only", "via", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* prop_2 \u2192 prop_1 FINISH"}
{"id": 1231, "sentence": ["move", "into", "the", "red", "room", "through", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "into", "the", "prop_2", "through", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1), and moving through the green room can be represented as another proposition (prop_2)"}
{"id": 3260, "sentence": ["go", "through", "the", "room", "that", "isn", "t", "blue", "and", "enter", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "room", "that", "isn", "t", "prop_2", "and", "enter", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(where prop_1 represents the room being blue), and the second part can be represented as \"prop_2\" (where prop_2 represents entering the red room). The entire command implies that the first action must occur before the second action can take place.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go through the room that isn't blue\": \"not prop_1\",\n  \"enter the red room\": \"prop_2\"\n}\n\n3. *FINAL:* (not prop_1)"}
{"id": 1076, "sentence": ["instead", "of", "going", "through", "the", "red", "room", "move", "through", "the", "yellow", "room", "to", "enter", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["instead", "of", "going", "through", "the", "red", "room", "move", "through", "the", "prop_1", "to", "enter", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (not prop_1 \u2192 (prop_2 U F prop_3)) FINISH"}
{"id": 1882, "sentence": ["move", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 FINISH"}
{"id": 120, "sentence": ["the", "robot", "goes", "through", "the", "green", "to", "get", "to", "blue"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["the", "robot", "goes", "through", "the", "prop_1", "to", "get", "to", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F) go through the green area (prop_1) and then reach the blue area (prop_2). The \"goes through\" can be interpreted as a condition that must be satisfied before reaching the blue area.\n\n2. *Explanation dictionary* \u2013\n{\n  \"the robot goes through the green\": \"prop_1\",\n  \"to get to blue\": \"prop_2\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 377, "sentence": ["move", "into", "the", "red", "room", "and", "push", "the", "chair", "back", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "into", "the", "prop_1", "and", "push", "the", "chair", "back", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(and)"}
{"id": 1392, "sentence": ["go", "through", "the", "yellow", "room", "into", "the", "blue", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) and \"go into the blue room\" as another proposition (prop_2)"}
{"id": 3332, "sentence": ["go", "through", "the", "yellow", "or", "the", "blue", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "yellow_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "the", "prop_2", "to", "get", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 378, "sentence": ["go", "to", "the", "red", "room", "and", "push", "the", "chair", "in", "front", "of", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "push", "the", "chair", "in", "front", "of", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(and)"}
{"id": 2658, "sentence": ["go", "through", "either", "the", "red", "or", "the", "green", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "red_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "either", "the", "prop_2", "or", "the", "prop_1", "to", "get", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 0, 1, 1, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 256, "sentence": ["go", "into", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* F prop_1 FINISH"}
{"id": 1711, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room). In temporal logic, we can represent this as a proposition that should eventually be true. Therefore, we can express this command as \"eventually be in the blue room,\" which translates to F(prop_1), where prop_1 represents the state of being in the blue room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the blue room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 2764, "sentence": ["don", "t", "go", "through", "the", "red", "room", "towards", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["don", "t", "go", "through", "the", "prop_2", "towards", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(not prop_1)"}
{"id": 1700, "sentence": ["go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(the green room). In temporal logic, we can represent this as a proposition that should eventually be true. Therefore, we can express this as \"finally reach the green room,\" which translates to F(prop_1), where prop_1 represents the state of being in the green room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the green room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 2650, "sentence": ["up", "through", "the", "green", "or", "red", "box", "to", "reach", "the", "blue", "box"], "tl": ["finally", "(", "(", "green_room", "or", "red_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["up", "through", "the", "prop_1", "or", "prop_2", "box", "to", "reach", "the", "prop_3", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 3, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 6, "sentence": ["follow", "the", "path", "through", "the", "blue", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["follow", "the", "path", "through", "the", "prop_1", "to", "get", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 341, "sentence": ["go", "to", "the", "green", "room", "without", "entering", "a", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "without", "entering", "a", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(G) that the action of entering a yellow room (prop_2) does not occur while moving towards the green room (prop_1).\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the green room\" : \"prop_1\",\n  \"without entering a yellow room\" : \"not prop_2\"\n}\n\n3. *FINAL:* G (prop_1 \u2192 not prop_2)"}
{"id": 286, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(the red room). In temporal logic, we can represent this as a proposition that should eventually be true. Therefore, we can express this as \"finally reach the red room,\" which translates to F(prop_1), where prop_1 represents the state of being in the red room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 402, "sentence": ["go", "to", "the", "red", "room", "go", "behind", "the", "chair", "then", "bring", "the", "chair", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "go", "behind", "the", "chair", "then", "bring", "the", "chair", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_2 U prop_3)"}
{"id": 2011, "sentence": ["go", "to", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room). We can represent this as a proposition that should eventually be true. Therefore, we can express this as \"eventually reach the blue room,\" which translates to F(prop_1), where prop_1 represents the state of being in the blue room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to blue room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 1417, "sentence": ["go", "towards", "the", "blue", "room", "through", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "towards", "the", "prop_2", "through", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1), and the action of going through the red room can be represented as another proposition (prop_2)"}
{"id": 1282, "sentence": ["go", "to", "the", "blue", "area", "through", "yellow", "area"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "area", "through", "prop_1", "area"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1), and \"through yellow area\" can be represented as another proposition (prop_2)"}
{"id": 586, "sentence": ["move", "the", "robot", "through", "the", "yellow", "or", "red", "small", "room", "and", "then", "to", "the", "large", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "the", "robot", "through", "the", "prop_2", "or", "red", "small", "prop_3", "and", "then", "to", "the", "large", "green", "room"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) and prop_3 FINISH"}
{"id": 1400, "sentence": ["pass", "through", "the", "yellow", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "prop_1", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) and \"pass through the blue room\" as another proposition (prop_2)"}
{"id": 1778, "sentence": ["go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(the green room). We can represent this as a proposition placeholder, say prop_1, which indicates that we are in the green room. The command implies that we should eventually reach this state, so we can use the \"finally\" operator (F) to express that we will eventually be in the green room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the green room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 2347, "sentence": ["go", "into", "the", "blue", "room", "then", "go", "into", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "then", "go", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(going into the blue room), and the second action is represented by `prop_2` (going into the green room)"}
{"id": 37, "sentence": ["enter", "the", "green", "room", "through", "the", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_2", "through", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), and then we can enter the green room (prop_2). This can be represented using the \"until\" operator, indicating that entering the green room can only happen after entering the blue room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"enter the blue room\": \"prop_1\",\n  \"enter the green room\": \"prop_2\"\n}\n\n3. *FINAL:* prop_1 \u2192 (X prop_2)"}
{"id": 764, "sentence": ["go", "to", "the", "red", "room", "take", "the", "yellow", "color", "object", "from", "there", "and", "go", "to", "green", "room", "with", "this", "object"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "take", "the", "yellow", "color", "object", "from", "there", "and", "go", "to", "green", "prop_2", "this", "object"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(going to the red room and taking the object), and the second action can be represented as `prop_2` (going to the green room with the object)"}
{"id": 2909, "sentence": ["move", "to", "the", "blue", "room", "without", "entering", "a", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "without", "entering", "a", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(G) that the action of entering a yellow room (prop_2) does not happen while moving to the blue room (prop_1).\n\n2. *Explanation dictionary* \u2013\n{\n  \"move to the blue room\" : prop_1,\n  \"without entering a yellow room\" : not prop_2\n}\n\n3. *FINAL:* G (prop_1 \u2192 not prop_2)"}
{"id": 447, "sentence": ["move", "to", "the", "red", "room", "grab", "the", "chair", "then", "move", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "grab", "the", "chair", "then", "move", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_2 U prop_3)"}
{"id": 960, "sentence": ["go", "into", "the", "yellow", "room", "and", "then", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "and", "then", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 and X prop_2 FINISH"}
{"id": 2045, "sentence": ["go", "to", "green", "area", "avoiding", "blue", "area"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "area", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F prop_1) while ensuring that we are not in the blue area (not prop_2)"}
{"id": 237, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(the red room). In temporal logic, we can express this as a proposition that should eventually be true. Therefore, we can represent this command as \"eventually be in the red room,\" which translates to F(prop_1), where prop_1 represents the state of being in the red room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 131, "sentence": ["move", "through", "green", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "prop_1", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1), and the action of moving to the blue room can be represented as another proposition (prop_2). The command implies that the action of moving through the green room should happen before moving to the blue room. Therefore, we can express this as prop_1 U prop_2, meaning that prop_1 (moving through the green room) must hold until prop_2 (moving to the blue room)"}
{"id": 600, "sentence": ["move", "through", "the", "green", "or", "yellow", "rooms", "and", "enter", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "through", "the", "prop_1", "or", "prop_2", "rooms", "and", "enter", "the", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) and prop_3 U (prop_1 or prop_2) FINISH"}
{"id": 2744, "sentence": ["go", "to", "blue", "room", "while", "avoiding", "green", "rooms"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "while", "avoiding", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F prop_1) while we are avoiding the green rooms (G not prop_2)"}
{"id": 1669, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room) at some point in the future. In temporal logic, we can express this as eventually reaching the state represented by a proposition placeholder (e.g., prop_1 for being in the blue room). Therefore, we can represent this command as \"eventually be in the blue room,\" which translates to F(prop_1).\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the blue room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 2499, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room). We can represent this as a proposition placeholder, say prop_1, which indicates that we are in the blue room. The command implies that we should eventually reach this state, so we can use the \"finally\" operator (F)"}
{"id": 1714, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room). In temporal logic, we can represent this as a proposition that should eventually be true. Therefore, we can express this as \"eventually be in the blue room,\" which translates to F(prop_1), where prop_1 represents the state of being in the blue room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the blue room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 899, "sentence": ["go", "through", "the", "red", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 357, "sentence": ["enter", "the", "room", "that", "isn", "t", "yellow", "and", "then", "proceed", "to", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "room", "that", "isn", "t", "prop_2", "and", "then", "proceed", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(where `prop_1` represents the condition of the room being yellow), and \"proceed to the green room\" as `prop_2` (where `prop_2` represents the condition of being in the green room). The sequence of actions is captured using the \"until\" operator, indicating that the first action must occur before the second.\n\n2. *Explanation dictionary* \u2013\n{\n  \"enter the room that isn't yellow\": \"not prop_1\",\n  \"proceed to the green room\": \"prop_2\"\n}\n\n3. *FINAL:* (not prop_1)"}
{"id": 64, "sentence": ["move", "to", "the", "large", "green", "room", "by", "passing", "through", "the", "small", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_2", "by", "passing", "through", "the", "small", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), and passing through the small blue room can be represented as another proposition (prop_2). The command implies that prop_2 (passing through the small blue room) must occur before prop_1 (moving to the large green room)"}
{"id": 499, "sentence": ["enter", "the", "red", "room", "then", "enter", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_1", "then", "enter", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 \u2192 X prop_2 FINISH"}
{"id": 1045, "sentence": ["go", "through", "the", "blue", "room", "until", "you", "get", "to", "the", "red"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "until", "you", "get", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(represented by prop_1) holds true until the condition of reaching the red room (represented by prop_2)"}
{"id": 549, "sentence": ["move", "to", "the", "middle", "of", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "middle", "of", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(being in the middle of the green room)"}
{"id": 287, "sentence": ["go", "to", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F) the state of being in the red room (prop_1)"}
{"id": 2668, "sentence": ["go", "through", "the", "yellow", "or", "red", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "to", "get", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 2562, "sentence": ["move", "to", "yellow", "or", "blue", "room", "them", "move", "to", "green", "room"], "tl": ["finally", "(", "(", "blue_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "to", "prop_2", "or", "prop_1", "them", "move", "to", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) \u2192 X prop_3 FINISH"}
{"id": 2594, "sentence": ["move", "through", "the", "blue", "or", "red", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["move", "through", "the", "prop_2", "or", "prop_1", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) \u2192 prop_3 FINISH"}
{"id": 913, "sentence": ["go", "through", "blue", "room", "to", "get", "to", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "to", "get", "to", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(which we can represent as prop_1), and then getting to the red room (which we can represent as prop_2)"}
{"id": 628, "sentence": ["go", "to", "blue", "but", "not", "through", "red"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "but", "not", "through", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F prop_2) while globally ensuring that we are not in \"red\" (G not prop_1)"}
{"id": 2092, "sentence": ["enter", "green", "room", "via", "the", "non", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "prop_1", "via", "the", "non", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(not prop_2)"}
{"id": 1798, "sentence": ["go", "into", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F) to indicate that this state should eventually be achieved.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go into the blue room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 670, "sentence": ["to", "reach", "the", "blue", "room", "do", "not", "go", "through", "the", "red", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["to", "reach", "the", "prop_1", "do", "not", "go", "through", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) should hold globally (G) while ensuring that the action of going through the red room (prop_2) does not occur (not prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n  \"to reach the blue room\": \"prop_1\",\n  \"do not go through the red room\": \"not prop_2\"\n}\n\n3. *FINAL:* G (prop_1)"}
{"id": 246, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(the red room). In temporal logic, we can express this as a proposition that should eventually be true. Therefore, we can represent this command as \"eventually be in the red room,\" which translates to F(prop_1), where prop_1 represents the state of being in the red room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 3005, "sentence": ["don", "t", "go", "through", "the", "green", "room", "towards", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["don", "t", "go", "through", "the", "prop_2", "towards", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* not prop_1 FINISH"}
{"id": 2390, "sentence": ["move", "to", "the", "red", "room", "then", "move", "to", "the", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "then", "move", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 \u2192 X prop_2 FINISH"}
{"id": 2564, "sentence": ["the", "robot", "has", "to", "go", "through", "the", "blue", "or", "yellow", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "blue_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["the", "robot", "has", "to", "go", "through", "the", "prop_1", "or", "prop_2", "to", "get", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) \u2192 F prop_3 FINISH"}
{"id": 2132, "sentence": ["move", "to", "the", "room", "that", "isn", "t", "yellow", "and", "then", "move", "into", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "room", "that", "isn", "t", "prop_2", "and", "then", "move", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(representing the action of moving to a room that is not yellow), and the second part can be expressed as \"prop_2\" (representing the action of moving into the red room)"}
{"id": 2573, "sentence": ["go", "thru", "the", "blue", "or", "red", "box", "to", "get", "to", "the", "green", "box"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "thru", "the", "prop_2", "or", "prop_1", "box", "to", "get", "to", "the", "prop_3", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 3, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 2268, "sentence": ["go", "to", "red", "room", "and", "then", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "and", "then", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 997, "sentence": ["navigate", "through", "blue", "to", "reach", "red"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["navigate", "through", "prop_1", "to", "reach", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* prop_1 \u2192 X prop_2 FINISH"}
{"id": 2189, "sentence": ["avoid", "the", "yellow", "rooms", "on", "your", "way", "into", "the", "blue", "rooms"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "rooms", "on", "your", "way", "into", "the", "prop_1", "rooms"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(G), whenever you are in a state where you are moving towards the blue rooms, you should not be in the yellow rooms. Thus, we can represent this as: G (prop_2 \u2192 not prop_1), where prop_1 represents being in a yellow room and prop_2 represents moving towards a blue room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"avoid the yellow rooms\" : not prop_1,\n  \"on your way into the blue rooms\" : prop_2,\n  \"globally\" : G\n}\n\n3. *FINAL:* G (prop_2 \u2192 not prop_1)"}
{"id": 128, "sentence": ["go", "through", "the", "green", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 1365, "sentence": ["go", "through", "the", "green", "room", "to", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) and \"go to the red room\" as another proposition (prop_2)"}
{"id": 1394, "sentence": ["go", "through", "the", "green", "room", "into", "the", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "into", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) and \"go into the yellow room\" as another proposition (prop_2)"}
{"id": 327, "sentence": ["go", "to", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* F prop_1 FINISH"}
{"id": 366, "sentence": ["go", "to", "the", "green", "room", "but", "avoid", "using", "the", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "using", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) and \"avoid using the yellow room\" as a negation of another proposition (prop_2)"}
{"id": 2975, "sentence": ["go", "to", "yellow", "area", "by", "avoiding", "green", "area"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "area", "by", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F prop_1) while ensuring that we do not enter the green area (not prop_2) until we reach the yellow area (prop_1). Thus, the formula can be structured as: we will finally reach the yellow area while globally avoiding the green area until that point.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to yellow area\": \"F prop_1\",\n  \"avoiding green area\": \"G (not prop_2)\",\n  \"by\": \"U\"\n}\n\n3. *FINAL:* F prop_1 U G (not prop_2)"}
{"id": 3217, "sentence": ["go", "to", "the", "green", "room", "while", "avoiding", "the", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) while not being in the yellow room (prop_2)"}
{"id": 1286, "sentence": ["go", "to", "green", "room", "before", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "before", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 241, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(the red room). In temporal logic, we can express this as a proposition that should eventually be true. Therefore, we can represent this command as \"eventually be in the red room,\" which translates to F(prop_1), where prop_1 represents the state of being in the red room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 2331, "sentence": ["go", "to", "the", "blue", "room", "then", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) and \"go to the green room\" as another proposition (prop_2)"}
{"id": 2465, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(the red room). In temporal logic, we can represent this as a proposition that should eventually be true. Therefore, we can express this command as \"eventually be in the red room,\" which translates to F(prop_1), where prop_1 represents the state of being in the red room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 2352, "sentence": ["move", "to", "the", "yellow", "room", "move", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "move", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(for moving to the yellow room) and the second action as `prop_2` (for moving to the green room)"}
{"id": 3166, "sentence": ["go", "to", "the", "red", "room", "while", "avoiding", "the", "blue", "room", "on", "the", "way"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "blue", "prop_2", "the", "way"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) should occur while the condition of avoiding the blue room (prop_2) holds true until reaching the red room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\": \"prop_1\",\n  \"avoiding the blue room\": \"not prop_2\",\n  \"on the way\": \"U\"\n}\n\n3. *FINAL:* prop_1 U (not prop_2)"}
{"id": 1536, "sentence": ["move", "through", "the", "hallway", "to", "the", "yellow", "room", "but", "only", "if", "it", "takes", "you", "through", "a", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "the", "hallway", "to", "the", "prop_2", "but", "only", "if", "it", "takes", "you", "through", "a", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) is only valid if it takes you through a green room (prop_2)"}
{"id": 12, "sentence": ["go", "through", "the", "blue", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 367, "sentence": ["travel", "to", "the", "green", "room", "through", "the", "room", "that", "isn", "t", "yellow"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["travel", "to", "the", "prop_1", "through", "the", "room", "that", "isn", "t", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1), and \"through the room that isn't yellow\" can be represented as another proposition (prop_2)"}
{"id": 621, "sentence": ["go", "to", "the", "blue", "room", "but", "do", "not", "use", "the", "red", "room", "to", "get", "there"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "use", "the", "red", "prop_2", "get", "there"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) should occur, and at the same time, the action of using the red room (prop_2) should not occur. The logical structure can be expressed as: \"go to the blue room\" (prop_1) and \"not use the red room\" (not prop_2)"}
{"id": 2183, "sentence": ["go", "to", "the", "blue", "room", "but", "do", "not", "enter", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "enter", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F), the action of going to the blue room (prop_1) should occur, and globally (G), it should be true that the action of entering the yellow room (prop_2)"}
{"id": 2548, "sentence": ["go", "into", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F) to indicate that this action will eventually occur.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go into the yellow room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 1369, "sentence": ["pass", "through", "the", "green", "rom", "to", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "prop_1", "rom", "to", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1), and \"pass through the red room\" can be represented as another proposition (prop_2)"}
{"id": 236, "sentence": ["move", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F).\n\n2. *Explanation dictionary* \u2013\n{\n  \"move to the red room\": \"prop_1\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 1295, "sentence": ["go", "to", "red", "room", "through", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_2", "through", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1), and \"through green room\" can be represented as another proposition (prop_2)"}
{"id": 688, "sentence": ["do", "not", "take", "the", "green", "room", "to", "reach", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["do", "not", "take", "the", "prop_2", "to", "reach", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(the green room) in order to reach a destination (the blue room)"}
{"id": 1578, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* F prop_1 FINISH"}
{"id": 238, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(the red room). In temporal logic, we can express this as a proposition that should eventually be true. Therefore, we can represent this command as \"eventually be in the red room,\" which translates to F(prop_1), where prop_1 represents the state of being in the red room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 1636, "sentence": ["move", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* X prop_1 FINISH"}
{"id": 301, "sentence": ["move", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F).\n\n2. *Explanation dictionary* \u2013\n{\n  \"move to the red room\": \"prop_1\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 914, "sentence": ["go", "through", "blue", "room", "to", "get", "to", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "to", "get", "to", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1), and \"get to yellow room\" can be represented as another proposition (prop_2)"}
{"id": 1738, "sentence": ["move", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* X prop_1 FINISH"}
{"id": 2701, "sentence": ["enter", "the", "blue", "room", "without", "crossing", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "crossing", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* G (prop_1 and not prop_2) FINISH"}
{"id": 2131, "sentence": ["move", "to", "the", "room", "that", "isn", "t", "blue", "and", "then", "move", "into", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "room", "that", "isn", "t", "prop_2", "and", "then", "move", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(where prop_1 represents the condition of being blue), and the second part as \"prop_2\" (where prop_2 represents being in the green room)"}
{"id": 977, "sentence": ["go", "to", "the", "blue", "room", "then", "to", "the", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(X) to indicate that the second action follows the first. The first action can be represented by a proposition placeholder (prop_1) and the second action by another placeholder (prop_2)"}
{"id": 1876, "sentence": ["move", "to", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room)"}
{"id": 441, "sentence": ["move", "to", "the", "red", "room", "then", "move", "the", "chair", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "then", "move", "the", "chair", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1). The second action is to \"move the chair to the blue room,\" represented as another proposition (prop_2). The sequence of these actions can be captured using the \"until\" operator, indicating that the first action must be completed before the second action can occur.\n\n2. *Explanation dictionary* \u2013\n{\n  \"move to the red room\": \"prop_1\",\n  \"move the chair to the blue room\": \"prop_2\"\n}\n\n3. *FINAL:* prop_1 \u2192 (X prop_2)"}
{"id": 753, "sentence": ["go", "to", "the", "orange", "room", "then", "push", "the", "chair", "from", "the", "orange", "room", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "orange", "room", "then", "push", "the", "chair", "from", "the", "orange", "prop_2", "into", "the", "green", "room"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(indicating that we have gone to the orange room), and the second action can be represented as `prop_2` (indicating that we have pushed the chair from the orange room into the green room)"}
{"id": 207, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(the red room). In temporal logic, we can express this as a proposition that should eventually be true. Therefore, we can represent this command as \"eventually be in the red room,\" which translates to F(prop_1), where prop_1 represents the state of being in the red room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 2095, "sentence": ["move", "to", "room", "not", "using", "blue", "into", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "room", "not", "using", "prop_2", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* G (prop_1 and not prop_2) \u2192 prop_3 FINISH"}
{"id": 2350, "sentence": ["go", "into", "the", "red", "room", "then", "go", "into", "the", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "then", "go", "into", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 1245, "sentence": ["go", "through", "the", "green", "room", "in", "to", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "in", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) and \"go into the red room\" as another proposition (prop_2)"}
{"id": 3257, "sentence": ["go", "to", "the", "green", "room", "without", "passing", "through", "the", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "without", "passing", "through", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F prop_1) while ensuring that at no point do we pass through the yellow room (not prop_2)"}
{"id": 3147, "sentence": ["go", "to", "the", "red", "room", "or", "the", "yellow", "room", "and", "head", "straight", "away", "to", "the", "yellow", "room", "avoiding", "the", "blue", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "red", "room", "or", "the", "yellow", "room", "and", "head", "straight", "away", "to", "the", "prop_1", "avoiding", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 or (prop_2 and prop_2 and not prop_3)) FINISH"}
{"id": 2348, "sentence": ["go", "into", "the", "yellow", "room", "then", "go", "into", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_1", "then", "go", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(going into the yellow room), and the second action is represented by `prop_2` (going into the green room)"}
{"id": 3297, "sentence": ["move", "to", "the", "green", "room", "without", "entering", "a", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "without", "entering", "a", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(represented by a placeholder, e.g., prop_1) must hold globally (G) until the action of entering a yellow room (represented by another placeholder, e.g., prop_2) occurs. The formula can be structured as: \"move to the green room\" (prop_1) globally until \"entering a yellow room\" (prop_2) does not happen (not prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n  \"move to the green room\" : \"prop_1\",\n  \"entering a yellow room\" : \"prop_2\"\n}\n\n3. *FINAL:* G (prop_1 U not prop_2)"}
{"id": 2946, "sentence": ["walk", "to", "the", "red", "room", "while", "avoiding", "the", "green", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["walk", "to", "the", "prop_1", "while", "avoiding", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) should hold true until the condition of avoiding the green room (not prop_2)"}
{"id": 717, "sentence": ["do", "not", "enter", "the", "blue", "room", "through", "the", "green", "room", "but", "by", "the", "red", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["do", "not", "enter", "the", "blue", "room", "through", "the", "green", "room", "but", "by", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* G (not (prop_1 and prop_2) and prop_3) FINISH"}
{"id": 463, "sentence": ["move", "to", "the", "red", "room", "and", "move", "the", "red", "chair", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "red", "room", "and", "move", "the", "prop_1", "chair", "to", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1). The second action is to \"move the red chair to the blue room,\" which can be represented as another proposition (prop_2)"}
{"id": 3164, "sentence": ["go", "to", "green", "area", "avoiding", "red", "area"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "area", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F prop_1) while ensuring that we are not in the red area (not prop_2) until we reach the green area (U). Thus, we can express this as: we will not be in the red area until we reach the green area.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to green area\": \"F prop_1\",\n  \"avoiding red area\": \"not prop_2 U prop_1\"\n}\n\n3. *FINAL:* F prop_1 and (not prop_2 U prop_1)"}
{"id": 3118, "sentence": ["pass", "through", "the", "non", "red", "room", "to", "reach", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["pass", "through", "the", "non", "prop_2", "to", "reach", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1), and \"reach the green room\" can be represented as another proposition (prop_2)"}
{"id": 605, "sentence": ["pass", "through", "the", "green", "or", "yellow", "room", "and", "enter", "into", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["pass", "through", "the", "prop_1", "or", "prop_2", "and", "enter", "into", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) and prop_3 FINISH"}
{"id": 1710, "sentence": ["move", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 FINISH"}
{"id": 1919, "sentence": ["move", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 FINISH"}
{"id": 2505, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room)"}
{"id": 1423, "sentence": ["move", "through", "the", "red", "room", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "the", "prop_1", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 841, "sentence": ["the", "robot", "must", "move", "through", "the", "red", "or", "blue", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["the", "robot", "must", "move", "through", "the", "prop_1", "or", "prop_2", "to", "get", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) \u2192 F prop_3 FINISH"}
{"id": 2335, "sentence": ["go", "to", "the", "blue", "room", "then", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) and \"go to the green room\" as another proposition (prop_2)"}
{"id": 2452, "sentence": ["move", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 FINISH"}
{"id": 1329, "sentence": ["go", "to", "the", "green", "room", "and", "then", "go", "to", "the", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "then", "go", "to", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* prop_1 U X prop_2 FINISH"}
{"id": 745, "sentence": ["go", "to", "the", "red", "room", "move", "behind", "the", "yellow", "object", "then", "move", "to", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "move", "behind", "the", "yellow", "object", "then", "move", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_2 U prop_3)"}
{"id": 2575, "sentence": ["go", "thru", "the", "yellow", "or", "red", "box", "to", "get", "to", "the", "blue", "box"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "thru", "the", "prop_2", "or", "prop_1", "box", "to", "get", "to", "the", "prop_3", "box"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 3, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 2705, "sentence": ["avoid", "the", "red", "room", "and", "move", "to", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "and", "move", "to", "the", "yellow", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* G (not prop_1) and prop_2 FINISH"}
{"id": 896, "sentence": ["go", "to", "the", "yellow", "room", "through", "the", "blue", "one"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "through", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(the yellow room) through another location (the blue room)"}
{"id": 657, "sentence": ["go", "through", "the", "red", "and", "to", "the", "blue"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "and", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* prop_1 and prop_2 FINISH"}
{"id": 938, "sentence": ["go", "through", "blue", "to", "reach", "yellow"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "to", "reach", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 1585, "sentence": ["go", "in", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "in", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(F) being in the blue room (prop_1)"}
{"id": 844, "sentence": ["go", "through", "the", "red", "and", "blue", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "and", "prop_2", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 and prop_2) \u2192 prop_3 FINISH"}
{"id": 2568, "sentence": ["go", "through", "the", "yellow", "or", "blue", "room", "and", "enter", "the", "green", "room"], "tl": ["finally", "(", "(", "blue_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "and", "enter", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) and prop_3 FINISH"}
{"id": 588, "sentence": ["enter", "the", "yellow", "or", "red", "room", "and", "proceed", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["enter", "the", "prop_2", "or", "prop_1", "and", "proceed", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 3100, "sentence": ["go", "to", "the", "green", "room", "but", "avoid", "the", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* F(prop_1) and G(not prop_2) FINISH"}
{"id": 3347, "sentence": ["enter", "the", "yellow", "room", "through", "either", "the", "red", "or", "or", "blue", "rooms"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["enter", "the", "prop_3", "through", "either", "the", "red", "prop_1", "or", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 3, 3, 0, 0, 0, 1, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (prop_2 or prop_3) \u2192 prop_1 FINISH"}
{"id": 282, "sentence": ["move", "to", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F)"}
{"id": 2904, "sentence": ["go", "towards", "the", "blue", "room", "and", "avoid", "the", "green", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "towards", "the", "prop_1", "and", "avoid", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) and \"avoid the green room\" as another proposition (prop_2)"}
{"id": 2067, "sentence": ["the", "robot", "avoids", "blue", "to", "get", "to", "the", "green"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["the", "robot", "avoids", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) until it reaches green (prop_2)"}
{"id": 2696, "sentence": ["go", "to", "the", "blue", "room", "but", "do", "not", "use", "the", "green", "room", "to", "get", "there"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "use", "the", "green", "prop_2", "get", "there"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* G (prop_1) and G (not prop_2) FINISH"}
{"id": 1896, "sentence": ["go", "to", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(the yellow room)"}
{"id": 3323, "sentence": ["pass", "through", "either", "the", "blue", "or", "yellow", "room", "to", "reach", "the", "green", "room"], "tl": ["finally", "(", "(", "yellow_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["pass", "through", "either", "the", "prop_2", "or", "prop_1", "to", "reach", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 1588, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room). In temporal logic, we can represent this as a proposition that should eventually be true. Therefore, we can express this as \"eventually be in the blue room,\" which translates to F(prop_1), where prop_1 represents the state of being in the blue room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the blue room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 1229, "sentence": ["move", "to", "the", "blue", "room", "by", "going", "through", "the", "red", "room", "first"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_2", "by", "going", "through", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) will occur after the action of going through the red room (prop_2) has occurred. We can express this as: \"going through the red room first\" (prop_2) must hold until \"moving to the blue room\" (prop_1)"}
{"id": 946, "sentence": ["move", "through", "the", "blue", "room", "into", "the", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "through", "the", "prop_1", "into", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(the blue room) to another (the yellow room)"}
{"id": 1838, "sentence": ["move", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 FINISH"}
{"id": 3106, "sentence": ["enter", "the", "red", "room", "without", "passing", "the", "blue", "one"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "passing", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) happens while it is not the case that passing the blue room (prop_2) occurs. Thus, we can express this as: globally, it is true that entering the red room happens until passing the blue room occurs.\n\n2. *Explanation dictionary* \u2013\n{\n  \"enter the red room\" : \"prop_1\",\n  \"passing the blue room\" : \"prop_2\"\n}\n\n3. *FINAL:* G (prop_1 U not prop_2)"}
{"id": 1604, "sentence": ["move", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 FINISH"}
{"id": 425, "sentence": ["move", "to", "the", "red", "room", "get", "the", "chair", "move", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "get", "the", "chair", "move", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(X) to indicate that each action follows the previous one. The actions are: moving to the red room (prop_1), getting the chair (prop_2), and moving to the blue room (prop_3). The entire sequence can be expressed as: X(prop_1) U (X(prop_2) U X(prop_3)).\n\n2. *Explanation dictionary* \u2013\n{\n  \"move to the red room\": \"prop_1\",\n  \"get the chair\": \"prop_2\",\n  \"move to the blue room\": \"prop_3\"\n}\n\n3. *FINAL:* X(prop_1) U (X(prop_2) U X(prop_3))"}
{"id": 1225, "sentence": ["pass", "through", "the", "small", "green", "room", "to", "get", "to", "the", "large", "red", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "small", "prop_1", "to", "get", "to", "the", "large", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 1072, "sentence": ["move", "to", "the", "yellow", "room", "and", "then", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "then", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) and the action of moving to the green room with another proposition placeholder (prop_2)"}
{"id": 2403, "sentence": ["go", "to", "blue", "room", "go", "to", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "go", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 \u2192 X prop_2 FINISH"}
{"id": 232, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(the red room). We can represent this as a proposition placeholder, say prop_1, which indicates that we are in the red room. The command implies that we should eventually reach this state, so we can use the \"finally\" operator (F) to express that we will eventually be in the red room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 963, "sentence": ["go", "to", "red", "rectangle", "via", "blue", "square"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_2", "rectangle", "via", "prop_1", "square"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1), and the action \"via blue square\" can be represented as another proposition (prop_2)"}
{"id": 2398, "sentence": ["move", "to", "the", "red", "room", "and", "then", "move", "to", "the", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "then", "move", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) and the action of moving to the yellow room with another proposition placeholder (prop_2)"}
{"id": 2620, "sentence": ["go", "green", "or", "yellow", "to", "red"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "prop_1", "or", "prop_2", "to", "prop_3"], "lifted_sentence_prop_ids": [0, 1, 0, 2, 0, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 2683, "sentence": ["head", "to", "the", "yellow", "rectangular", "room", "without", "passing", "through", "a", "red", "square", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["head", "to", "the", "prop_1", "rectangular", "room", "without", "passing", "through", "a", "red", "square", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(let's say prop_1). The phrase \"without passing through a red square room\" indicates a condition that must hold true while heading to the yellow rectangular room. This can be represented as \"not passing through the red square room\" (let's say prop_2)"}
{"id": 2400, "sentence": ["go", "to", "yellow", "room", "go", "to", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "go", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 \u2192 X prop_2 FINISH"}
{"id": 2896, "sentence": ["avoid", "red", "rooms", "while", "going", "to", "the", "green", "one"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "prop_2", "rooms", "while", "going", "to", "the", "prop_1", "one"], "lifted_sentence_prop_ids": [0, 2, 0, 0, 0, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(G), if we are going to a green room (prop_2), we should not be in a red room (prop_1). The \"while\" indicates that the avoidance of red rooms should hold during the entire process of going to the green room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"avoid red rooms\" : not prop_1,\n  \"going to the green room\" : prop_2,\n  \"while\" : U\n}\n\n3. *FINAL:* G (prop_2 \u2192 not prop_1)"}
{"id": 2445, "sentence": ["move", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 FINISH"}
{"id": 2416, "sentence": ["move", "to", "the", "yellow", "room", "and", "then", "move", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "then", "move", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 7, "sentence": ["go", "through", "the", "blue", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) and \"go to the green room\" as another proposition (prop_2). The command implies that the first action (going through the blue room) must happen before the second action (going to the green room)"}
{"id": 3056, "sentence": ["enter", "the", "room", "that", "isnt", "green", "then", "go", "to", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "room", "that", "isnt", "prop_2", "then", "go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (not prop_1) \u2192 (X prop_2) FINISH"}
{"id": 1975, "sentence": ["go", "to", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room). We can represent this as a proposition that should eventually be true. Therefore, we can express this as \"eventually reach the blue room,\" which translates to F(prop_1), where prop_1 represents the state of being in the blue room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to blue room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 3102, "sentence": ["go", "to", "red", "without", "going", "through", "blue"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "without", "going", "through", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(red) while ensuring that the state represented by `prop_2` (blue) is never reached during the transition to `prop_1`. This can be expressed as: \"eventually reach red (prop_1) while globally not being in blue (prop_2)"}
{"id": 782, "sentence": ["pass", "through", "the", "non", "blue", "room", "to", "reach", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["pass", "through", "the", "non", "prop_2", "to", "reach", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1), and \"reach the green room\" can be represented as another proposition (prop_2)"}
{"id": 2642, "sentence": ["pass", "through", "the", "green", "or", "yellow", "room", "and", "enter", "into", "the", "red", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["pass", "through", "the", "prop_1", "or", "prop_2", "and", "enter", "into", "the", "red", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) and X prop_3 FINISH"}
{"id": 678, "sentence": ["go", "through", "the", "room", "that", "is", "not", "green", "to", "get", "to", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "room", "that", "is", "not", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) must hold true while we are in the room (prop_2) until we reach the blue room (prop_3)"}
{"id": 540, "sentence": ["go", "in", "and", "then", "go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "in", "and", "then", "go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* X prop_1 \u2192 F prop_2 FINISH"}
{"id": 1850, "sentence": ["go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), where prop_1 represents the action of being in the green room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the green room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 77, "sentence": ["go", "through", "the", "door", "to", "the", "blue", "room", "and", "continue", "into", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "door", "to", "the", "prop_1", "and", "continue", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 and prop_2 FINISH"}
{"id": 3280, "sentence": ["pass", "through", "the", "non", "blue", "room", "to", "enter", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["pass", "through", "the", "non", "prop_2", "to", "enter", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1), and \"enter the red room\" can be represented as another proposition (prop_2)"}
{"id": 1915, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room). We can represent this as a proposition placeholder, say prop_1, which indicates that we are in the blue room. The command implies that we should eventually reach this state, so we can use the \"finally\" operator (F)"}
{"id": 925, "sentence": ["travel", "through", "the", "blue", "square", "room", "to", "the", "large", "red", "rectangular", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["travel", "through", "the", "prop_1", "square", "room", "to", "the", "large", "red", "rectangular", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(the blue square room) and reaching another room (the large red rectangular room)"}
{"id": 920, "sentence": ["please", "go", "to", "the", "yellow", "room", "through", "the", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["please", "go", "to", "the", "prop_2", "through", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 \u2192 X prop_2 FINISH"}
{"id": 1687, "sentence": ["move", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* X prop_1 FINISH"}
{"id": 175, "sentence": ["go", "through", "the", "green", "room", "into", "the", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) and \"go into the blue room\" as another proposition (prop_2)"}
{"id": 2421, "sentence": ["go", "to", "the", "red", "room", "go", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "go", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 and X prop_2 FINISH"}
{"id": 903, "sentence": ["go", "to", "the", "red", "area", "through", "blue", "area"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "area", "through", "prop_1", "area"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* prop_2 U prop_1 FINISH"}
{"id": 2940, "sentence": ["enter", "the", "blue", "room", "without", "entering", "a", "red", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "entering", "a", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) must occur while globally (G) it is not the case that the agent enters the red room (prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n  \"enter the blue room\" : \"prop_1\",\n  \"without entering a red room\" : \"not prop_2\"\n}\n\n3. *FINAL:* prop_1 U G(not prop_2)"}
{"id": 1806, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F)"}
{"id": 1559, "sentence": ["go", "through", "red", "rooms", "to", "get", "to", "the", "blue", "one"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "rooms", "to", "get", "to", "the", "prop_2", "one"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 806, "sentence": ["go", "to", "the", "green", "room", "while", "avoiding", "the", "blue", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) while not being in the blue room (prop_2)"}
{"id": 544, "sentence": ["go", "to", "the", "other", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "other", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(F)\" the proposition that indicates being in the other room (let's denote it as prop_1). Therefore, the formula will express that at some point in the future, the condition prop_1 will hold true.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the other room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 2924, "sentence": ["go", "through", "the", "room", "that", "is", "not", "green", "to", "get", "to", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "room", "that", "is", "not", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* not prop_1 U prop_2 FINISH"}
{"id": 39, "sentence": ["the", "robot", "moves", "through", "the", "blue", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["the", "robot", "moves", "through", "the", "prop_1", "to", "get", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(the blue room) with the goal of reaching another area (the green room)"}
{"id": 271, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(the red room). In temporal logic, we can represent this as a proposition that should eventually be true. Therefore, we can express this as \"finally reach the red room,\" which translates to F(prop_1), where prop_1 represents the state of being in the red room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 1875, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(the yellow room). We can represent this as a proposition placeholder, say prop_1, which indicates that we are in the yellow room. Since the command implies that we should eventually reach this state, we can use the \"finally\" operator (F)"}
{"id": 1197, "sentence": ["go", "into", "the", "green", "room", "by", "way", "of", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_2", "by", "way", "of", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), and \"by way of the red room\" suggests that the action of going into the green room must occur after going into the red room (prop_2). Therefore, we can express this as: first, go into the red room (prop_2), and then go into the green room (prop_1)"}
{"id": 1107, "sentence": ["move", "to", "the", "large", "red", "room", "by", "passing", "through", "the", "small", "blue", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_2", "by", "passing", "through", "the", "small", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1), and passing through the small blue room can be represented as another proposition (prop_2)"}
{"id": 1813, "sentence": ["enter", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["enter", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 FINISH"}
{"id": 136, "sentence": ["move", "to", "blue", "room", "through", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "prop_2", "through", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1), and the action \"move through the green room\" can be represented as another proposition (prop_2)"}
{"id": 2115, "sentence": ["go", "to", "the", "blue", "room", "while", "avoiding", "the", "yellow", "rooms"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) while ensuring that we are not in any yellow room (prop_2)"}
{"id": 502, "sentence": ["first", "go", "to", "red", "room", "then", "go", "to", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["first", "go", "to", "prop_1", "then", "go", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(going to the red room) must hold true before the second action (going to the green room) occurs.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to red room\": \"prop_1\",\n  \"go to green room\": \"prop_2\"\n}\n\n3. *FINAL:* prop_1 U (X prop_2)"}
{"id": 546, "sentence": ["move", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 FINISH"}
{"id": 3014, "sentence": ["move", "to", "the", "red", "room", "avoiding", "the", "green", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "avoiding", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), and until that point, we must not be in the green room (prop_2)"}
{"id": 3273, "sentence": ["move", "to", "the", "large", "green", "room", "while", "avoiding", "the", "small", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["move", "to", "the", "large", "prop_1", "while", "avoiding", "the", "small", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) occurs while \"not being in the small yellow room\" (not prop_2)"}
{"id": 1923, "sentence": ["go", "to", "the", "yellow"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(which we can assume represents \"being at the yellow\")"}
{"id": 2091, "sentence": ["enter", "blue", "room", "via", "the", "non", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "prop_1", "via", "the", "non", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "  \"not yellow room\" : \"not prop_2\""}
{"id": 2760, "sentence": ["go", "to", "the", "blue", "room", "while", "avoiding", "the", "green", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) while not being in the green room (prop_2)"}
{"id": 1933, "sentence": ["move", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* X prop_1 FINISH"}
{"id": 466, "sentence": ["go", "to", "the", "red", "room", "get", "the", "chair", "and", "take", "it", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "get", "the", "chair", "and", "take", "it", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 and prop_2 and prop_3 FINISH"}
{"id": 1909, "sentence": ["move", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* X prop_1 FINISH"}
{"id": 1642, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room). In temporal logic, we can represent this as a proposition that should eventually be true. Therefore, we can express this command as \"eventually be in the blue room,\" which translates to F(prop_1), where prop_1 represents the state of being in the blue room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the blue room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 1267, "sentence": ["enter", "the", "red", "room", "through", "the", "green", "door", "only"], "tl": ["finally", "(", "green_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_2", "through", "the", "green", "prop_1", "only"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 1, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* F(prop_1) and G(not prop_2) FINISH"}
{"id": 3235, "sentence": ["travel", "to", "the", "yellow", "room", "without", "going", "through", "the", "blue", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["travel", "to", "the", "prop_1", "without", "going", "through", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1), and the condition of not going through the blue room can be represented as the negation of another proposition (prop_2)"}
{"id": 1788, "sentence": ["move", "to", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1)"}
{"id": 437, "sentence": ["go", "to", "red", "room", "move", "chair", "to", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "move", "chair", "to", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 and prop_2 FINISH"}
{"id": 79, "sentence": ["move", "toward", "the", "blue", "room", "then", "into", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "toward", "the", "prop_1", "then", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(moving toward the blue room), and the second action can be represented as `prop_2` (moving into the green room)"}
{"id": 3208, "sentence": ["enter", "the", "room", "that", "isn", "t", "blue", "and", "proceed", "through", "to", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "room", "that", "isn", "t", "prop_2", "and", "proceed", "through", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(where prop_1 represents the room being blue), and the second part can be represented as \"prop_2\" (where prop_2 represents being in the red room)"}
{"id": 2043, "sentence": ["go", "to", "blue", "area", "avoiding", "yellow", "area"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "area", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F prop_1) while ensuring that we are not in the yellow area (not prop_2) until we reach the blue area (U). Thus, the final formula will express that we will eventually reach the blue area while avoiding the yellow area until that point.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to blue area\": \"F prop_1\",\n  \"avoiding yellow area\": \"not prop_2 U prop_1\"\n}\n\n3. *FINAL:* F prop_1 and (not prop_2 U prop_1)"}
{"id": 2086, "sentence": ["go", "to", "the", "red", "room", "but", "do", "not", "enter", "the", "yellow", "room", "first"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "enter", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (not prop_2) \u2192 (prop_1) FINISH"}
{"id": 1456, "sentence": ["enter", "the", "yellow", "room", "and", "exit", "into", "the", "blue", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_1", "and", "exit", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 and prop_2 FINISH"}
{"id": 1256, "sentence": ["move", "into", "the", "yellow", "room", "but", "only", "via", "the", "green", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "into", "the", "prop_2", "but", "only", "via", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) can only happen after moving through the green room (prop_2)"}
{"id": 187, "sentence": ["move", "into", "the", "red", "room", "and", "stay", "on", "the", "first", "square", "you", "end", "up", "on"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "into", "the", "prop_1", "and", "stay", "on", "the", "first", "square", "you", "end", "up", "on"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) and \"stay on the first square\" as another proposition (prop_2). The command indicates that both actions should occur, so we will use the conjunction operator (and)"}
{"id": 1745, "sentence": ["go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1)"}
{"id": 718, "sentence": ["go", "to", "the", "blue", "room", "and", "do", "not", "use", "the", "green", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "do", "not", "use", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) and \"do not use the green room\" as the negation of another proposition (prop_2)"}
{"id": 1137, "sentence": ["walk", "through", "the", "blue", "room", "until", "you", "reach", "the", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["walk", "through", "the", "prop_1", "until", "you", "reach", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) and \"reaching the red room\" with another placeholder (prop_2)"}
{"id": 2850, "sentence": ["go", "to", "the", "green", "room", "but", "avoid", "the", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1 \u2192 not prop_2)"}
{"id": 3214, "sentence": ["go", "to", "the", "red", "room", "while", "avoiding", "the", "blue", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) until \"being in the blue room\" (prop_2) is true, while also ensuring that we are not in the blue room (not prop_2)"}
{"id": 45, "sentence": ["travel", "through", "the", "blue", "room", "to", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["travel", "through", "the", "prop_1", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 1407, "sentence": ["go", "through", "the", "red", "room", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) and \"go into the blue room\" as another proposition (prop_2)"}
{"id": 3069, "sentence": ["go", "towards", "the", "blue", "room", "and", "avoid", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "towards", "the", "prop_1", "and", "avoid", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "  \"and\": \"and\""}
{"id": 1816, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room) at some point in the future. In temporal logic, we can express this as eventually reaching the state represented by a proposition placeholder (e.g., prop_1 for being in the blue room). Therefore, we can represent this command as \"eventually be in the blue room,\" which translates to F(prop_1).\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the blue room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 850, "sentence": ["take", "the", "red", "or", "blue", "room", "into", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["take", "the", "prop_1", "or", "prop_2", "into", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 2, 2, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) and prop_3 FINISH"}
{"id": 213, "sentence": ["go", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(the red room). In temporal logic, we can express this as a proposition that should eventually be true. Therefore, we can represent this command as \"eventually be in the red room,\" which translates to F(prop_1), where prop_1 represents the state of being in the red room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the red room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 594, "sentence": ["go", "through", "yellow", "or", "red", "square", "to", "get", "to", "green", "square"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "prop_2", "or", "prop_1", "square", "to", "get", "to", "prop_3", "square"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1, 0, 0, 0, 0, 3, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 3249, "sentence": ["enter", "any", "room", "that", "isn", "t", "blue", "to", "end", "up", "in", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "any", "room", "that", "isn", "t", "prop_2", "to", "end", "up", "in", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) and that this action should lead to eventually being in the yellow room (prop_2)"}
{"id": 1034, "sentence": ["travel", "through", "the", "blue", "room", "to", "the", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["travel", "through", "the", "prop_1", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 780, "sentence": ["avoid", "the", "blue", "room", "and", "move", "to", "the", "green", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "blue_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "the", "prop_2", "and", "move", "to", "the", "green", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 2, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* G (not prop_1 and prop_2) FINISH"}
{"id": 2590, "sentence": ["enter", "the", "yellow", "or", "red", "room", "and", "proceed", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["enter", "the", "prop_2", "or", "prop_1", "and", "proceed", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) and X prop_3 FINISH"}
{"id": 2897, "sentence": ["avoid", "red", "rooms", "while", "going", "to", "the", "yellow", "one"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "prop_2", "rooms", "while", "going", "to", "the", "prop_1", "one"], "lifted_sentence_prop_ids": [0, 2, 0, 0, 0, 0, 0, 1, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(always), if we are going to a yellow room, we should not be in a red room. The \"while\" indicates a condition that must hold during the action of going to the yellow room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"avoid red rooms\": \"not prop_1\",\n  \"while going to the yellow one\": \"prop_2\"\n}\n\n3. *FINAL:* G (prop_2 \u2192 not prop_1)"}
{"id": 2675, "sentence": ["while", "avoiding", "the", "yellow", "room", "follow", "the", "shortest", "path", "to", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["while", "avoiding", "the", "prop_2", "follow", "the", "shortest", "path", "to", "the", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(\"while\") that must be maintained until a certain condition is met. The phrase \"avoiding the yellow room\" suggests a condition that must always hold true during the action. The action itself is to \"follow the shortest path to the blue room,\" which can be represented as a proposition that must eventually be true. Therefore, we can express this as: while avoiding the yellow room, we will eventually follow the shortest path to the blue room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"while avoiding the yellow room\" : \"G (not prop_1)\",\n  \"follow the shortest path to the blue room\" : \"F prop_2\"\n}\n\n3. *FINAL:* G (not prop_1)"}
{"id": 1852, "sentence": ["i", "want", "you", "to", "go", "into", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["i", "want", "you", "to", "go", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 FINISH"}
{"id": 2761, "sentence": ["go", "to", "the", "blue", "room", "while", "avoiding", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) while not being in the yellow room (prop_2)"}
{"id": 876, "sentence": ["follow", "the", "path", "through", "the", "yellow", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["follow", "the", "path", "through", "the", "prop_1", "to", "get", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 2472, "sentence": ["move", "to", "the", "middle", "of", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "middle", "of", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(being in the middle of the blue room)"}
{"id": 632, "sentence": ["got", "to", "blue", "room", "without", "going", "through", "red", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["got", "to", "prop_1", "without", "going", "through", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(represented by `prop_1`) without passing through the \"red room\" (represented by `prop_2`)"}
{"id": 22, "sentence": ["go", "to", "the", "green", "room", "through", "blue"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_2", "through", "blue", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) and \"through blue\" as another proposition (prop_2). The command implies that the action of going to the green room (prop_1) must happen after the action of going through blue (prop_2)"}
{"id": 134, "sentence": ["move", "to", "reach", "the", "blue", "place", "by", "taking", "a", "path", "which", "has", "green", "colour", "and", "white", "colour", "in", "it", "while", "avoiding", "black", "yellow", "and", "red", "colour"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "reach", "the", "prop_2", "place", "by", "taking", "a", "path", "which", "has", "prop_1", "colour", "and", "white", "colour", "in", "it", "while", "avoiding", "black", "yellow", "and", "red", "colour"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 \u2192 (prop_2 and prop_3) and (not prop_4 and"}
{"id": 387, "sentence": ["go", "into", "the", "room", "and", "find", "the", "chair", "then", "push", "it", "back", "into", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "into", "the", "prop_2", "and", "find", "the", "chair", "then", "push", "it", "back", "into", "blue", "room"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 and prop_2) \u2192 prop_3 FINISH"}
{"id": 995, "sentence": ["navigate", "through", "red", "to", "reach", "green"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["navigate", "through", "prop_1", "to", "reach", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 431, "sentence": ["go", "to", "the", "red", "room", "get", "the", "chair", "return", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "get", "the", "chair", "return", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* X prop_1 and X prop_2 and X prop_3 FINISH"}
{"id": 3172, "sentence": ["go", "to", "the", "green", "room", "but", "do", "not", "take", "the", "red", "room", "to", "get", "there"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "take", "the", "red", "prop_2", "get", "there"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) should occur, and at the same time, the action of taking the red room (prop_2)"}
{"id": 1605, "sentence": ["move", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F)"}
{"id": 1173, "sentence": ["move", "into", "the", "green", "room", "while", "being", "sure", "to", "pass", "through", "only", "the", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "into", "the", "prop_2", "while", "being", "sure", "to", "pass", "through", "only", "the", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) happens after passing through the red room (prop_2)"}
{"id": 2993, "sentence": ["go", "through", "the", "room", "that", "isn", "t", "green", "and", "enter", "the", "yellow", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "room", "that", "isn", "t", "prop_2", "and", "enter", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (not prop_1) and prop_2 FINISH"}
{"id": 1332, "sentence": ["the", "robot", "goes", "through", "the", "yellow", "to", "get", "to", "blue"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["the", "robot", "goes", "through", "the", "prop_1", "to", "get", "to", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 2236, "sentence": ["go", "through", "the", "yellow", "or", "red", "room", "and", "enter", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_2", "or", "prop_1", "and", "enter", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) and prop_3 FINISH"}
{"id": 1670, "sentence": ["go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), where prop_1 represents the action of being in the green room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the green room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 1204, "sentence": ["pass", "through", "the", "small", "yellow", "room", "to", "get", "to", "the", "large", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "small", "prop_1", "to", "get", "to", "the", "large", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 872, "sentence": ["go", "through", "yellow", "room", "to", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "prop_1", "to", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1), and \"go to green room\" can be represented as another proposition (prop_2)"}
{"id": 1872, "sentence": ["go", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(let's denote it as prop_1)"}
{"id": 1547, "sentence": ["go", "through", "the", "red", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "get", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 2758, "sentence": ["go", "to", "the", "green", "room", "while", "avoiding", "the", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) while ensuring that we are not in the red room (prop_2) during that time. The \"while\" indicates that the avoidance of the red room must hold until we reach the green room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the green room\": \"prop_1\",\n  \"avoiding the red room\": \"not prop_2\",\n  \"while\": \"U\"\n}\n\n3. *FINAL:* F(prop_1) U (not prop_2)"}
{"id": 376, "sentence": ["go", "to", "the", "green", "room", "but", "avoid", "going", "through", "the", "yellow", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "going", "through", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F) the agent will reach the green room (prop_1) while ensuring that at no point (G) the agent is in the yellow room (prop_2). The avoidance of the yellow room can be expressed as globally (G)"}
{"id": 2814, "sentence": ["go", "to", "the", "green", "room", "but", "do", "not", "use", "the", "red", "room", "to", "get", "there"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "use", "the", "red", "prop_2", "get", "there"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) should occur, but it should not be the case that the action of using the red room (prop_2) happens during the process of getting there. Therefore, we can express this as: \"go to the green room\" (prop_1) while \"not using the red room\" (not prop_2)"}
{"id": 1182, "sentence": ["pass", "through", "the", "blue", "room", "to", "reach", "the", "yellow", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "prop_1", "to", "reach", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) and \"reach the yellow room\" as another proposition (prop_2)"}
{"id": 3013, "sentence": ["going", "through", "the", "red", "room", "or", "the", "yellow", "room", "straight", "to", "the", "blue", "room", "avoiding", "the", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["going", "through", "the", "red", "room", "or", "the", "yellow", "room", "straight", "to", "the", "prop_1", "avoiding", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(red or yellow) and the requirement to reach the blue room while avoiding the yellow room. The logical structure can be represented as follows:\n   - \"going through the red room\" can be represented as `prop_1`.\n   - \"going through the yellow room\" can be represented as `prop_2`.\n   - \"reaching the blue room\" can be represented as `prop_3`.\n   - \"avoiding the yellow room\" can be represented as `not prop_2`.\n\n   The overall structure can be expressed as: (going through the red room or going through the yellow room) and (eventually reaching the blue room while avoiding the yellow room)"}
{"id": 2967, "sentence": ["go", "to", "the", "yellow", "room", "while", "avoiding", "the", "green", "room"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "while", "avoiding", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) holding true until \"being in the green room\" (prop_2)"}
{"id": 318, "sentence": ["move", "into", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "into", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* prop_1 FINISH"}
{"id": 2343, "sentence": ["move", "to", "the", "blue", "room", "and", "move", "into", "the", "green", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "move", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 and prop_2 FINISH"}
{"id": 3334, "sentence": ["go", "through", "the", "red", "or", "the", "blue", "room", "to", "get", "to", "the", "yellow", "room"], "tl": ["finally", "(", "(", "red_room", "or", "blue_room", ")", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "the", "prop_2", "to", "get", "to", "the", "yellow", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 2774, "sentence": ["go", "to", "the", "green", "room", "but", "do", "not", "pass", "through", "the", "red", "room", "on", "your", "way"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "do", "not", "pass", "through", "the", "red", "prop_2", "your", "way"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) must occur while it is globally true that the red room (prop_2) is not passed through (not prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n    \"go to the green room\" : \"prop_1\",\n    \"do not pass through the red room\" : \"not prop_2\"\n}\n\n3. *FINAL:* prop_1 U (G not prop_2)"}
{"id": 3174, "sentence": ["avoiding", "red", "navigate", "to", "green"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoiding", "prop_2", "navigate", "to", "prop_1"], "lifted_sentence_prop_ids": [0, 2, 0, 0, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(always), we should avoid \"red\" (not prop_1) until we reach \"green\" (prop_2).\n\n2. *Explanation dictionary* \u2013\n{\n  \"avoiding red\" : \"not prop_1\",\n  \"navigate to green\" : \"prop_2\",\n  \"globally\" : \"G\",\n  \"until\" : \"U\"\n}\n\n3. *FINAL:* G (not prop_1 U prop_2)"}
{"id": 2280, "sentence": ["go", "to", "the", "red", "room", "go", "to", "the", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "go", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* X prop_1 and X prop_2 FINISH"}
{"id": 2156, "sentence": ["go", "to", "the", "green", "room", "but", "avoid", "the", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "but", "avoid", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F) the agent will be in the green room (prop_1) while globally (G) it is not in the red room (prop_2)"}
{"id": 456, "sentence": ["go", "to", "the", "chair", "in", "the", "red", "room", "and", "then", "push", "the", "chair", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "chair", "in", "the", "prop_1", "and", "then", "push", "the", "chair", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(going to the chair in the red room), and the second action can be represented as `prop_2` (pushing the chair into the blue room)"}
{"id": 772, "sentence": ["move", "to", "the", "red", "room", "and", "then", "push", "the", "object", "into", "the", "green", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "and", "then", "push", "the", "object", "into", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) that indicates the completion of moving to the red room. The second action can be represented as another proposition (prop_2)"}
{"id": 2996, "sentence": ["drive", "through", "the", "room", "that", "is", "not", "green", "and", "enter", "the", "red", "room"], "tl": ["(", "finally", "(", "red_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["drive", "through", "the", "room", "that", "is", "not", "prop_2", "and", "enter", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_2 and not prop_1) and prop_3 FINISH"}
{"id": 142, "sentence": ["go", "through", "the", "green", "room", "to", "reach", "the", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "reach", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* prop_1 \u2192 X prop_2 FINISH"}
{"id": 260, "sentence": ["move", "to", "the", "red", "room"], "tl": ["finally", "red_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(F).\n\n2. *Explanation dictionary* \u2013\n{\n  \"move to the red room\": \"prop_1\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 2818, "sentence": ["go", "through", "the", "room", "that", "isn", "t", "green", "and", "enter", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "through", "the", "room", "that", "isn", "t", "prop_2", "and", "enter", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (not prop_1) \u2192 (X prop_2) FINISH"}
{"id": 115, "sentence": ["go", "via", "green", "color", "path", "to", "reach", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "via", "prop_1", "color", "path", "to", "reach", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(represented by prop_1). The phrase \"to reach blue room\" indicates that the goal is to eventually reach a specific location (represented by prop_2)"}
{"id": 3333, "sentence": ["go", "through", "the", "red", "or", "the", "yellow", "room", "to", "get", "to", "the", "green", "room"], "tl": ["finally", "(", "(", "red_room", "or", "yellow_room", ")", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "the", "prop_2", "to", "get", "to", "the", "green", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 3205, "sentence": ["go", "to", "green", "area", "by", "avoiding", "yellow", "area"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "to", "prop_1", "area", "by", "avoiding", "prop_2", "area"], "lifted_sentence_prop_ids": [0, 0, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(prop_1) and \"avoiding the yellow area\" as another proposition (prop_2). The command implies that we want to ensure that we eventually reach the green area while globally avoiding the yellow area during that time.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to green area\" : \"prop_1\",\n  \"avoiding yellow area\" : \"not prop_2\"\n}\n\n3. *FINAL:* F(prop_1) U (not prop_2)"}
{"id": 1741, "sentence": ["go", "to", "the", "blue", "room"], "tl": ["finally", "blue_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(the blue room). In temporal logic, we can represent this as a proposition that should eventually be true. Therefore, we can express this as \"eventually be in the blue room,\" which translates to F(prop_1), where prop_1 represents the state of being in the blue room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the blue room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 989, "sentence": ["go", "to", "large", "green", "room", "through", "red", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "large", "prop_2", "through", "red", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 2, 2, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) that signifies reaching the large green room.\n   - \"through red room\" indicates that the action of going to the large green room must occur after passing through the red room, which can be represented as another proposition (prop_2) that signifies being in the red room.\n\n   Therefore, the overall structure can be expressed as: first, we must be in the red room (prop_2), and then we can go to the large green room (prop_1)"}
{"id": 2243, "sentence": ["go", "through", "the", "green", "or", "the", "yellow", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "or", "the", "prop_2", "to", "get", "to", "the", "blue", "prop_3"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 2, 2, 0, 0, 0, 0, 3, 3], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "3. *FINAL:* (prop_1 or prop_2) U prop_3 FINISH"}
{"id": 1080, "sentence": ["go", "to", "the", "yellow", "room", "then", "to", "then", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "then", "to", "then", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 \u2192 X prop_2 FINISH"}
{"id": 1550, "sentence": ["go", "through", "the", "green", "room", "to", "get", "to", "the", "yellow", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "get", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 2059, "sentence": ["the", "robot", "is", "to", "move", "towards", "the", "blue", "room", "without", "entering", "a", "yellow", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "yellow_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["the", "robot", "is", "to", "move", "towards", "the", "prop_1", "without", "entering", "a", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F prop_1) while globally (G) ensuring that it does not enter the yellow room (not prop_2)"}
{"id": 170, "sentence": ["go", "through", "the", "green", "room", "to", "get", "to", "the", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "to", "get", "to", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(prop_1) and the action of reaching the blue room as another proposition (prop_2)"}
{"id": 2070, "sentence": ["avoid", "red", "area", "on", "way", "to", "green", "area", "each", "time"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["avoid", "prop_2", "area", "on", "way", "to", "prop_1", "area", "each", "time"], "lifted_sentence_prop_ids": [0, 2, 0, 0, 0, 0, 1, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(G), at any point in time, if we are on the way to the green area, we should not be in the red area. Thus, we can represent this as: G (prop_2 \u2192 not prop_1), where prop_2 indicates being on the way to the green area and prop_1 indicates being in the red area.\n\n2. *Explanation dictionary* \u2013\n{\n  \"avoid red area\" : not prop_1,\n  \"on way to green area\" : prop_2,\n  \"each time\" : G\n}\n\n3. *FINAL:* G (prop_2 \u2192 not prop_1)"}
{"id": 646, "sentence": ["go", "only", "through", "rooms", "that", "are", "not", "red", "to", "get", "to", "the", "blue", "room"], "tl": ["(", "finally", "(", "blue_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["go", "only", "through", "rooms", "that", "are", "not", "prop_2", "to", "get", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(always) when moving to the blue room, the rooms traversed must not be red.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go only through rooms that are not red\": \"G (prop_1 \u2192 not prop_2)\",\n  \"to get to the blue room\": \"F prop_3\"\n}\n\n3. *FINAL:* G (prop_1 \u2192 not prop_2)"}
{"id": 126, "sentence": ["go", "to", "green", "room", "then", "to", "blue", "room"], "tl": ["finally", "(", "green_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "prop_1", "then", "to", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(X)"}
{"id": 2551, "sentence": ["go", "from", "the", "blue", "room", "to", "the", "red", "room", "then", "to", "the", "yellow", "room"], "tl": ["finally", "yellow_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "from", "the", "blue", "room", "to", "the", "red", "room", "then", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 1186, "sentence": ["the", "robot", "goes", "through", "the", "blue", "to", "get", "to", "the", "yellow"], "tl": ["finally", "(", "blue_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["the", "robot", "goes", "through", "the", "prop_1", "to", "get", "to", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "(F) go through the blue (prop_1) and then, after that, it will eventually (F) get to the yellow (prop_2). The structure can be represented as: \"the robot goes through the blue (prop_1) until it gets to the yellow (prop_2)"}
{"id": 2935, "sentence": ["enter", "the", "yellow", "room", "without", "crossing", "the", "green", "one"], "tl": ["(", "finally", "(", "yellow_room", ")", "and", "globally", "(", "not", "green_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["enter", "the", "prop_1", "without", "crossing", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 2, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(prop_1) should occur globally (G) while the condition of not crossing the green room (not prop_2) holds true.\n\n2. *Explanation dictionary* \u2013\n```json\n{\n  \"enter the yellow room\": \"prop_1\",\n  \"without crossing the green room\": \"not prop_2\"\n}\n```\n\n3. *FINAL:* G (not prop_2 \u2192 prop_1)"}
{"id": 3200, "sentence": ["get", "to", "the", "green", "area", "by", "avoiding", "the", "red", "room"], "tl": ["(", "finally", "(", "green_room", ")", "and", "globally", "(", "not", "red_room", ")", ")"], "masked_tl": ["(", "finally", "(", "prop_1", ")", "and", "globally", "(", "not", "prop_2", ")", ")"], "grounded_sentence": ["get", "to", "the", "prop_1", "area", "by", "avoiding", "the", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) and the condition of avoiding the red room with another proposition placeholder (prop_2). The command implies that we want to reach the green area while ensuring that we are not in the red room at any point until we reach the green area.\n\n2. *Explanation dictionary* \u2013\n{\n  \"get to the green area\": \"prop_1\",\n  \"avoiding the red room\": \"not prop_2\"\n}\n\n3. *FINAL:* (not prop_2)"}
{"id": 1592, "sentence": ["move", "into", "the", "green", "room", "and", "stay", "on", "the", "first", "square", "you", "end", "up", "on"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["move", "into", "the", "prop_1", "and", "stay", "on", "the", "first", "square", "you", "end", "up", "on"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "    \"and\": \"and\""}
{"id": 575, "sentence": ["go", "from", "the", "blue", "room", "to", "the", "red", "room", "then", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "from", "the", "blue", "room", "to", "the", "red", "room", "then", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 \u2192 X prop_2 FINISH"}
{"id": 1544, "sentence": ["go", "through", "the", "yellow", "room", "and", "into", "the", "blue", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "through", "the", "prop_1", "and", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "(and)"}
{"id": 1181, "sentence": ["pass", "through", "the", "blue", "room", "to", "reach", "the", "red", "room"], "tl": ["finally", "(", "blue_room", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["pass", "through", "the", "prop_1", "to", "reach", "the", "red", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "(prop_1) and \"reach the red room\" as another proposition (prop_2)"}
{"id": 2298, "sentence": ["go", "to", "the", "yellow", "room", "and", "then", "go", "to", "the", "green", "room"], "tl": ["finally", "(", "yellow_room", "and", "finally", "green_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["go", "to", "the", "prop_1", "and", "then", "go", "to", "the", "green", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 1901, "sentence": ["go", "to", "the", "green", "room"], "tl": ["finally", "green_room"], "masked_tl": ["finally", "prop_1"], "grounded_sentence": ["go", "to", "the", "prop_1"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}}, "prediction": "(the green room). In temporal logic, we can represent this as a proposition that should eventually be true. Therefore, we can express this as \"eventually reach the green room,\" which translates to F(prop_1), where prop_1 represents the state of being in the green room.\n\n2. *Explanation dictionary* \u2013\n{\n  \"go to the green room\": \"F(prop_1)\"\n}\n\n3. *FINAL:* F(prop_1)"}
{"id": 2652, "sentence": ["go", "to", "red", "room", "through", "green", "or", "yellow", "room"], "tl": ["finally", "(", "(", "green_room", "or", "yellow_room", ")", "and", "finally", "red_room", ")"], "masked_tl": ["finally", "(", "(", "prop_1", "or", "prop_2", ")", "and", "finally", "prop_3", ")"], "grounded_sentence": ["go", "to", "prop_3", "through", "green", "prop_1", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 3, 3, 0, 1, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["green_room"], "args_ref": ["green room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}, "prop_3": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}}, "prediction": "3. *FINAL:* (prop_2 or prop_3) \u2192 prop_1 FINISH"}
{"id": 2354, "sentence": ["move", "to", "the", "red", "room", "move", "to", "the", "yellow", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "yellow_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["move", "to", "the", "prop_1", "move", "to", "the", "yellow", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 0, 1, 1, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["yellow_room"], "args_ref": ["yellow room"]}}, "prediction": "3. *FINAL:* prop_1 U prop_2 FINISH"}
{"id": 1455, "sentence": ["enter", "the", "red", "room", "and", "exit", "into", "the", "blue", "room"], "tl": ["finally", "(", "red_room", "and", "finally", "blue_room", ")"], "masked_tl": ["finally", "(", "prop_1", "and", "finally", "prop_2", ")"], "grounded_sentence": ["enter", "the", "prop_1", "and", "exit", "into", "the", "blue", "prop_2"], "lifted_sentence_prop_ids": [0, 0, 1, 1, 0, 0, 0, 0, 2, 2], "prop_dict": {"prop_1": {"action_canon": "at", "action_ref": "go to", "args_canon": ["red_room"], "args_ref": ["red room"]}, "prop_2": {"action_canon": "at", "action_ref": "go to", "args_canon": ["blue_room"], "args_ref": ["blue room"]}}, "prediction": "  \"and\": \"and\""}
